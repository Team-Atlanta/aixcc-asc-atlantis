CWE-472 addresses the security weakness where a web application fails to properly verify inputs that are considered immutable but can, in fact, be externally controlled by an attacker. These inputs may include hidden form fields, parameters, cookies, or URLs, which are intended to store critical data and control application behavior securely. However, if these elements are not sufficiently validated, attackers can tamper with them to modify critical data, leading to various forms of security breaches. This vulnerability frequently stems from the assumption that client-supplied data, like hidden form fields or cookies, is secure and not susceptible to manipulation. This mistake can allow attackers to bypass authentication, escalate privileges, or even expose sensitive user data. Proper input validation and protection mechanisms are essential to mitigate this vulnerability, ensuring that any data supplied by the client is scrutinized and sanitized before being processed by the application. This includes adopting strategies like accepting only known good inputs that conform to strict specifications and employing denylists to flag or reject outright potentially harmful inputs.