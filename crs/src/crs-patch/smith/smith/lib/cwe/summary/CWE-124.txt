CWE-124, also known as Buffer Underwrite or Buffer Underflow, is a security weakness characterized by incorrect operations on a buffer that lead to writing data to a memory location before the intended buffer space. This issue typically arises when a program, using a pointer or index, accesses memory positions outside the valid boundaries of a buffer. Such access can happen due to decrementing a pointer or index beyond the buffer's start, resulting from faulty pointer arithmetic, or using negative indexing. These operations can corrupt memory, potentially allowing attackers to alter the execution flow of the program, modify data, or crash the system. Buffer underwrite can occur in several programming languages, notably C or C++, where direct memory management is a common practice. The consequences of such vulnerabilities vary from data integrity and confidentiality breaches to unauthorized code execution by bypassing security mechanisms, depending on the attacker's ability to control the corrupted memory. To mitigate buffer underwrites, developers should validate indices and pointer calculations and consider languages or practices that automatically manage memory bounds. Understanding and applying secure coding practices regarding buffer and memory management are crucial in preventing buffer underwrite vulnerabilities.