CWE-121 or Stack-based Buffer Overflow, is a software vulnerability where the buffer being overwritten is allocated on the stack, typically a local variable or function parameter. This weakness can lead to arbitrary code execution, with the attacker possibly overwriting sensitive data such as the return address, memory address, stack pointer, or frame pointer. This could result in the attacker executing code with the full privileges of the compromised application, leading to a compromise of system integrity, confidentiality, and availability. The vulnerability is usually introduced at the implementation phase and is common in languages such as C and C++. Mitigation strategies include environment hardening, implementing bounds checking on inputs, abstaining from using dangerous functions, and using buffer overflow detection mechanisms. Detecting this bug relies on techniques such as fuzz testing and automated static analysis.