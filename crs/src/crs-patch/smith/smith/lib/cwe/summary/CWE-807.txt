CWE-807 addresses the vulnerability that occurs when a software system makes security decisions based on inputs that can be manipulated by an untrusted actor. This weakness is a fundamental mistake in software development where the assumption that certain inputs (like cookies, environment variables, or hidden form fields) cannot be altered is incorrect. Attackers can easily modify these inputs using customized clients or through various attack techniques, potentially bypassing security mechanisms meant to protect the system. This flaw is particularly dangerous because it could lead to unauthorized actions or access, as these security decisions can include sensitive operations like authentication and authorization.

Without adequately verifying the origin and integrity of the inputs, any data received from an external source can lead to compromised security. Various examples illustrate that this mistake is not bound to a specific programming language or type of software, showing breaches in security through manipulated cookies or other inputs that trick the system into granting access or privileges without proper authentication. Mitigations involve designing the system to reduce the attack surface by storing sensitive information and state data server-side when possible, employing proper encryption and integrity checks on client-stored information, and ensuring that all security-sensitive decisions are also validated server-side to avoid reliance on potentially compromised client-side inputs.