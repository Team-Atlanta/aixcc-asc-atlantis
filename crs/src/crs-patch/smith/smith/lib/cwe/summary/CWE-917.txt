CWE-917, titled "Improper Neutralization of Special Elements used in an Expression Language Statement ('Expression Language Injection')", is a type of vulnerability that occurs when an application constructs part or all of an Expression Language (EL) statement using input from an upstream component, without adequately neutralizing special elements that could alter the intended EL statement before its execution. This issue is most prevalent in frameworks like Java Server Pages (JSP), where developers can embed executable expressions within static content. If the developers are unaware of the executable nature of these expressions, or if they fail to disable them, attackers could inject malicious expressions, potentially leading to code execution or other unintended behaviors.

The vulnerability has significant implications for application security, including breaches of confidentiality and integrity. The primary risk is the execution of unauthorized code or commands and the unauthorized reading of application data. Mitigation strategies involve avoiding the insertion of user-controlled data into an expression interpreter, validating user inputs to ensure they aren't evaluated as expressions, and encoding inputs to prevent evaluation as expressions. Automated static analysis tools have proven highly effective in detecting instances of CWE-917 by analyzing source or compiled code for patterns that could lead to this vulnerability. Additionally, this weakness is recognized within various industry standards and frameworks, including the OWASP Top Ten, indicating its widespread acknowledgment and the importance of addressing it in secure application development and deployment.