The Common Weakness Enumeration (CWE) 1108 identifies a software weakness arising from the excessive reliance on global variables, classified under the base level of abstraction. This vulnerability involves structuring code in such a way that it overuses global variables across different sections of the codebase, instead of limiting the scope of variables to a more localized context. The utilization of global variables to this extent makes the software harder to maintain, posing an indirect security risk. Difficulties in maintenance can lead to challenges in identifying and correcting vulnerabilities and may inadvertently facilitate the introduction of new security flaws. This weakness is indicative of poor coding practices and reflects a deeper issue related to insufficient adherence to expected programming conventions. Automated static analysis tools are highly effective in detecting instances of this weakness by analyzing the code to identify patterns of vulnerability without executing it. Furthermore, this CWE entry, being at the base level, is preferred for mapping to the root causes of vulnerabilities, highlighting the need for careful consideration in its use to ensure accurate vulnerability mapping.