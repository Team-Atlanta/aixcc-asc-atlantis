CWE-1087 refers to a weakness in the design of a class that contains a virtual method without an associated virtual destructor. This architectural oversight can lead to reliability issues for the software, potentially manifesting as undefined behavior if the problematic code is accessible to an attacker. Such a shortcoming roots itself in poor coding practices, particularly in the realms of software development where adherence to expected conventions, as outlined under the Insufficient Adherence to Expected Conventions (CWE-1076), is critical. The lack of a virtual destructor in classes with virtual methods can undermine the software's stability and reliability, creating openings for vulnerabilities if exploited by malicious entities. This weakness is classified at a base level of abstraction, indicating that it is relatively independent of specific resources or technologies yet detailed enough to suggest concrete detection and prevention methods. The CWE entry underscores the significance of understanding this type of software weakness, especially for security researchers, tool developers, and those involved in defensive coding practices aimed at enhancing software reliability and maintainability.