CWE-843, termed as "Access of Resource Using Incompatible Type" or "Type Confusion", is a notable software weakness where a resource (such as a pointer, object, or variable) is initially allocated or initialized using one type but is later accessed using a type incompatible with the initial one. This discrepancy can lead to logical errors or out-of-bounds memory access, particularly in non-memory-safe languages like C and C++. Type Confusion is not confined to these languages; similar issues can arise in dynamic or loosely typed languages such as PHP or Perl through unexpected type conversions or when expected scalar values are accessed as arrays (and vice versa). The vulnerability stems from the ability of a program to interpret a single variable or memory location in different ways, which can lead to serious consequences including memory modification, unauthorized code execution, crashes, and breaches of confidentiality and integrity. Often related to parsing complex data or improper handling of type casting, this weakness emphasizes the need for robust type and memory management practices in software development. It's critical to recognize that type confusion can subtly undermine program security, warranting careful scrutiny during code review and testing phases to mitigate potential exploitation.