CWE

Common Weakness Enumeration

A community-developed list of SW & HW weaknesses that can become vulnerabilities

New to CWE? click here!
CWE Most Important Hardware Weaknesses
CWE Top 25 Most Dangerous Weaknesses
Home > CWE List > CWE- Individual Dictionary Definition (4.14)                                                                                                   ID Lookup: [                    ] [Go]
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  • Home
  • About ▼
    About New to CWE User Stories History Documents FAQs Glossary Compatibility
  • CWE List ▼
    Latest Version Downloads Reports Visualizations Archive
  • Mapping ▼
    Root Cause Mapping Guidance Root Cause Mapping Quick Tips Root Cause Mapping Examples
  • Top-N Lists ▼
    Top 25 Software Top Hardware Top 10 KEV Weaknesses
  • Community ▼
    Community Working Groups & Special Interest Groups Board Board Meeting Minutes CWE Discussion List CWE Discussion Archives Contribute Weakness Content to CWE
  • News ▼
    Current News X-Twitter ● Mastodon ● LinkedIn ● YouTube YouTube Podcast Out of Bounds Read Podcast Medium Medium News Archive
  • Search

 
 CWE Glossary Definition                  x
 
 
 CWE-215: Insertion of Sensitive Information Into Debugging Code
 
 Weakness ID: 215
 Vulnerability Mapping: ALLOWEDThis CWE ID may be used to map to real-world vulnerabilities
 Abstraction: BaseBase - a weakness that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level
 weaknesses typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.
 View customized information:
 Conceptual For users who are interested in more notional aspects of a weakness. Example: educators, technical writers, and project/program managers. Operational For users who are concerned with the
 practical application and details about the nature of a weakness and how to prevent it from happening. Example: tool developers, security researchers, pen-testers, incident response analysts. Mapping
 Friendly For users who are mapping an issue to CWE/CAPEC IDs, i.e., finding the most appropriate CWE for a specific issue (e.g., a CVE record). Example: tool developers, security researchers. 
 Complete For users who wish to see all available information for the CWE/CAPEC entry. Custom For users who want to customize what details are displayed.
 ×

 Edit Custom Filter

 Conceptual Operational Mapping Friendly Select All
 
 Reset Clear Submit Cancel
 + Description
 The product inserts sensitive information into debugging code, which could expose this information if the debugging code is not disabled in production.
 + Extended Description
 When debugging, it may be necessary to report detailed information to the programmer. However, if the debugging code is not disabled when the product is operating in a production environment, then
 this sensitive information may be exposed to attackers.
 + Relationships
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Research Concepts" (CWE-1000)
     Nature                                                                                                                                                                             Type                                                                                                                                                                           ID        Name
 ChildOf                                                                               ClassClass - a weakness that is described in a very abstract fashion, typically independent of any specific language or technology. More specific than a Pillar Weakness, but more general than a Base                                                                        200     Exposure of
                                                                                                                    Weakness. Class level weaknesses typically describe issues in terms of 1 or 2 of the following dimensions: behavior, property, and resource.                                                                                                             Sensitive
                                                                                                                                                                                                                                                                                                                                                                             Information
                                                                                                                                                                                                                                                                                                                                                                             to an
                                                                                                                                                                                                                                                                                                                                                                             Unauthorized
                                                                                                                                                                                                                                                                                                                                                                             Actor
 CanFollow                                                                                 BaseBase - a weakness that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level weaknesses                                                                           489     Active Debug
                                                                                                                          typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                  Code
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Software Development" (CWE-699)
     Nature                                                       Type                                                     ID                                   Name
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 199     Information Management Errors
 + Modes Of Introduction
 Section HelpThe different Modes of Introduction provide information about how and when this weakness may be introduced. The Phase identifies a point in the life cycle at which introduction may occur,
 while the Note provides a typical scenario related to introduction during the given phase.
     Phase                                                                                              Note
 Implementation
 + Applicable Platforms
 Section HelpThis listing shows possible areas for which the given weakness could appear. These may be for specific named Languages, Operating Systems, Architectures, Paradigms, Technologies, or a
 class of such platforms. The platform is listed along with how frequently the given weakness appears for that instance.

 Languages

 Class: Not Language-Specific (Undetermined Prevalence)

 + Common Consequences
 Section HelpThis table specifies different individual consequences associated with the weakness. The Scope identifies the application security area that is violated, while the Impact describes the
 negative technical impact that arises if an adversary succeeds in exploiting this weakness. The Likelihood provides information about how likely the specific consequence is expected to be seen
 relative to the other consequences in the list. For example, there may be high likelihood that a weakness will be exploited to achieve a certain impact, but a low likelihood that it will be exploited
 to achieve a different impact.
       Scope                                                                                     Impact                                                                                 Likelihood
 Confidentiality    Technical Impact: Read Application Data

 + Demonstrative Examples
 
 Example 1

 The following program changes its behavior based on a debug flag.

 (bad code)
 Example Language: JSP 
 <% if (Boolean.getBoolean("debugEnabled")) {
 %>
 User account number: <%= acctNo %>
 <%
 } %>

 The code writes sensitive debug information to the client browser if the "debugEnabled" flag is set to true .

 + Observed Examples
        Reference                                                                                        Description
 CVE-2004-2268           Password exposed in debug information.
 CVE-2002-0918           CGI script includes sensitive information in debug messages when an error is triggered.
 CVE-2003-1078           FTP client with debug option enabled shows password to the screen.
 + Potential Mitigations
 Phase: Implementation

 Do not leave debug statements that could be executed in the source code. Ensure that all debug information is eradicated before releasing the software.
 Phase: Architecture and Design

 Strategy: Separation of Privilege

 Compartmentalize the system to have "safe" areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always be careful when
 interfacing with a compartment outside of the safe area.

 Ensure that appropriate compartmentalization is built into the system design, and the compartmentalization allows for and reinforces privilege separation functionality. Architects and designers
 should rely on the principle of least privilege to decide the appropriate time to use privileges and the time to drop privileges.

 + Detection Methods
 Automated Static Analysis

 Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without
 having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect "sources" (origins of input) with
 "sinks" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)

 Effectiveness: High

 + Memberships
 Section HelpThis MemberOf Relationships table shows additional CWE Categories and Views that reference this weakness as a member. This information is often useful in understanding where a weakness
 fits within the context of external information sources.
     Nature                                                       Type                                                     ID                                   Name
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 717     OWASP Top Ten 2007 Category A6 - Information Leakage and Improper
                                                                                                                                 Error Handling
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 731     OWASP Top Ten 2004 Category A10 - Insecure Configuration Management
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 933     OWASP Top Ten 2013 Category A5 - Security Misconfiguration
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 963     SFP Secondary Cluster: Exposed Data
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 1417    Comprehensive Categorization: Sensitive Information Exposure
 + Vulnerability Mapping Notes
 Usage: ALLOWED

 (this CWE ID could be used to map to real-world vulnerabilities)
 Reason: Acceptable-Use

 Rationale:

 This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.
 Comments:

 Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred
 level of abstraction.
 + Notes
 
 Relationship

 This overlaps other categories.
 + Taxonomy Mappings
       Mapped Taxonomy Name          Node ID                       Fit                                                                Mapped Node Name
 PLOVER                                                                                  Infoleak Using Debug Information
 OWASP Top Ten 2007               A6             CWE More Specific                       Information Leakage and Improper Error Handling
 OWASP Top Ten 2004               A10            CWE More Specific                       Insecure Configuration Management
 Software Fault Patterns          SFP23                                                  Exposed Data
 + Content History
                                                                                           + Submissions
          Submission Date                                                    Submitter                                                                     Organization
 2006-07-19                         PLOVER
 (CWE Draft 3, 2006-07-19)

                                                                                          + Modifications
         Modification Date                                                   Modifier                                                                      Organization
 2008-07-01                         Sean Eidemiller                                                                             Cigital
                                    added/updated demonstrative examples
 2008-07-01                         Eric Dalci                                                                                  Cigital
                                    updated Time_of_Introduction
 2008-08-15                                                                                                                     Veracode
                                    Suggested OWASP Top Ten 2004 mapping
 2008-09-08                         CWE Content Team                                                                            MITRE
                                    updated Relationships, Relationship_Notes, Taxonomy_Mappings
 2009-05-27                         CWE Content Team                                                                            MITRE
                                    updated Demonstrative_Examples
 2010-09-27                         CWE Content Team                                                                            MITRE
                                    updated Description, Name, Observed_Examples
 2011-06-01                         CWE Content Team                                                                            MITRE
                                    updated Common_Consequences, Relationships, Taxonomy_Mappings
 2012-05-11                         CWE Content Team                                                                            MITRE
                                    updated Relationships, Taxonomy_Mappings
 2012-10-30                         CWE Content Team                                                                            MITRE
                                    updated Potential_Mitigations
 2014-06-23                         CWE Content Team                                                                            MITRE
                                    updated Relationships
 2014-07-30                         CWE Content Team                                                                            MITRE
                                    updated Demonstrative_Examples, Relationships, Taxonomy_Mappings
 2017-11-08                         CWE Content Team                                                                            MITRE
                                    updated Applicable_Platforms
 2020-02-24                         CWE Content Team                                                                            MITRE
                                    updated Demonstrative_Examples, Description, Name, Potential_Mitigations, Relationships, Time_of_Introduction, Type
 2020-12-10                         CWE Content Team                                                                            MITRE
                                    updated Potential_Mitigations
 2023-01-31                         CWE Content Team                                                                            MITRE
                                    updated Description
 2023-04-27                         CWE Content Team                                                                            MITRE
                                    updated Detection_Factors, Relationships, Time_of_Introduction
 2023-06-29                         CWE Content Team                                                                            MITRE
                                    updated Mapping_Notes
                                                                                       + Previous Entry Names
            Change Date                                                                                   Previous Entry Name
 2010-09-27                         Information Leak Through Debug Information
 2020-02-24                         Information Exposure Through Debug Information
 More information is available — Please edit the custom filter or select a different filter.
Page Last Updated: February 29, 2024
 
      Site Map | Terms of Use | Manage Cookies | Cookie Notice | Privacy Policy | Contact Us | CWE X-Twitter CWE Mastodon CWE on LinkedIn CWE YouTube channel CWE Out-of-Bounds-Read Podcast CWE
      Blog on Medium blog

MITRE Use of the Common Weakness Enumeration (CWE™) and the associated references from this website are subject to the Terms of Use. CWE is sponsored by the U.S. Department of Homeland         HSSEDI
      Security (DHS) Cybersecurity and Infrastructure Security Agency (CISA) and managed by the Homeland Security Systems Engineering and Development Institute (HSSEDI) which is operated by
      The MITRE Corporation (MITRE). Copyright © 2006–2024, The MITRE Corporation. CWE, CWSS, CWRAF, and the CWE logo are trademarks of The MITRE Corporation.

