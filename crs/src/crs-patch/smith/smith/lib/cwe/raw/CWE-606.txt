CWE

Common Weakness Enumeration

A community-developed list of SW & HW weaknesses that can become vulnerabilities

New to CWE? click here!
CWE Most Important Hardware Weaknesses
CWE Top 25 Most Dangerous Weaknesses
Home > CWE List > CWE- Individual Dictionary Definition (4.14)                                                                                                   ID Lookup: [                    ] [Go]
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  • Home
  • About ▼
    About New to CWE User Stories History Documents FAQs Glossary Compatibility
  • CWE List ▼
    Latest Version Downloads Reports Visualizations Archive
  • Mapping ▼
    Root Cause Mapping Guidance Root Cause Mapping Quick Tips Root Cause Mapping Examples
  • Top-N Lists ▼
    Top 25 Software Top Hardware Top 10 KEV Weaknesses
  • Community ▼
    Community Working Groups & Special Interest Groups Board Board Meeting Minutes CWE Discussion List CWE Discussion Archives Contribute Weakness Content to CWE
  • News ▼
    Current News X-Twitter ● Mastodon ● LinkedIn ● YouTube YouTube Podcast Out of Bounds Read Podcast Medium Medium News Archive
  • Search

 
 CWE Glossary Definition                  x
 
 
 CWE-606: Unchecked Input for Loop Condition
 
 Weakness ID: 606
 Vulnerability Mapping: ALLOWEDThis CWE ID may be used to map to real-world vulnerabilities
 Abstraction: BaseBase - a weakness that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level
 weaknesses typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.
 View customized information:
 Conceptual For users who are interested in more notional aspects of a weakness. Example: educators, technical writers, and project/program managers. Operational For users who are concerned with the
 practical application and details about the nature of a weakness and how to prevent it from happening. Example: tool developers, security researchers, pen-testers, incident response analysts. Mapping
 Friendly For users who are mapping an issue to CWE/CAPEC IDs, i.e., finding the most appropriate CWE for a specific issue (e.g., a CVE record). Example: tool developers, security researchers. 
 Complete For users who wish to see all available information for the CWE/CAPEC entry. Custom For users who want to customize what details are displayed.
 ×

 Edit Custom Filter

 Conceptual Operational Mapping Friendly Select All
 
 Reset Clear Submit Cancel
 + Description
 The product does not properly check inputs that are used for loop conditions, potentially leading to a denial of service or other consequences because of excessive looping.
 + Relationships
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Research Concepts" (CWE-1000)
     Nature                                                                                                                                                                             Type                                                                                                                                                                           ID       Name
 ChildOf                                                                                   BaseBase - a weakness that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level weaknesses                                                                           1284    Improper
                                                                                                                          typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                  Validation
                                                                                                                                                                                                                                                                                                                                                                             of
                                                                                                                                                                                                                                                                                                                                                                             Specified
                                                                                                                                                                                                                                                                                                                                                                             Quantity
                                                                                                                                                                                                                                                                                                                                                                             in Input
 CanPrecede                                                                            ClassClass - a weakness that is described in a very abstract fashion, typically independent of any specific language or technology. More specific than a Pillar Weakness, but more general than a Base                                                                        834     Excessive
                                                                                                                    Weakness. Class level weaknesses typically describe issues in terms of 1 or 2 of the following dimensions: behavior, property, and resource.                                                                                                             Iteration
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Software Development" (CWE-699)
     Nature                                                       Type                                                     ID                                   Name
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 1215    Data Validation Issues
 + Modes Of Introduction
 Section HelpThe different Modes of Introduction provide information about how and when this weakness may be introduced. The Phase identifies a point in the life cycle at which introduction may occur,
 while the Note provides a typical scenario related to introduction during the given phase.
     Phase                                                                                              Note
 Implementation
 + Common Consequences
 Section HelpThis table specifies different individual consequences associated with the weakness. The Scope identifies the application security area that is violated, while the Impact describes the
 negative technical impact that arises if an adversary succeeds in exploiting this weakness. The Likelihood provides information about how likely the specific consequence is expected to be seen
 relative to the other consequences in the list. For example, there may be high likelihood that a weakness will be exploited to achieve a certain impact, but a low likelihood that it will be exploited
 to achieve a different impact.
       Scope                                                                                     Impact                                                                                 Likelihood
 Availability       Technical Impact: DoS: Resource Consumption (CPU)

 + Demonstrative Examples
 
 Example 1

 The following example demonstrates the weakness.

 (bad code)
 Example Language: C 
 void iterate(int n){
 int i;
 for (i = 0; i < n; i++){
 foo();
 }
 }
 void iterateFoo()
 {
 unsigned int num;
 scanf("%u",&num);
 iterate(num);
 }

 Example 2

 In the following C/C++ example the method processMessageFromSocket() will get a message from a socket, placed into a buffer, and will parse the contents of the buffer into a structure that contains
 the message length and the message body. A for loop is used to copy the message body into a local character string which will be passed to another method for processing.

 (bad code)
 Example Language: C 
 int processMessageFromSocket(int socket) {
 int success;

 char buffer[BUFFER_SIZE];
 char message[MESSAGE_SIZE];

 // get message from socket and store into buffer

 //Ignoring possibliity that buffer > BUFFER_SIZE
 if (getMessage(socket, buffer, BUFFER_SIZE) > 0) {

 // place contents of the buffer into message structure
 ExMessage *msg = recastBuffer(buffer);

 // copy message body into string for processing
 int index;
 for (index = 0; index < msg->msgLength; index++) {
 message[index] = msg->msgBody[index];
 }
 message[index] = '\0';

 // process message
 success = processMessage(message);
 }
 return success;
 }

 However, the message length variable from the structure is used as the condition for ending the for loop without validating that the message length variable accurately reflects the length of the
 message body (CWE-606). This can result in a buffer over-read (CWE-125) by reading from memory beyond the bounds of the buffer if the message length variable indicates a length that is longer than
 the size of a message body (CWE-130).

 + Potential Mitigations
 Phase: Implementation

 Do not use user-controlled data for loop conditions.
 Phase: Implementation

 Perform input validation.
 + Detection Methods
 Automated Static Analysis

 Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without
 having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect "sources" (origins of input) with
 "sinks" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)

 Effectiveness: High

 + Memberships
 Section HelpThis MemberOf Relationships table shows additional CWE Categories and Views that reference this weakness as a member. This information is often useful in understanding where a weakness
 fits within the context of external information sources.
     Nature                                                                                                  Type                                                                                               ID         Name
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            738     CERT C Secure
                                                                                                                                                                                                                      Coding Standard
                                                                                                                                                                                                                      (2008) Chapter
                                                                                                                                                                                                                      5 - Integers
                                                                                                                                                                                                                      (INT)
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            872     CERT C++ Secure
                                                                                                                                                                                                                      Coding Section
                                                                                                                                                                                                                      04 - Integers
                                                                                                                                                                                                                      (INT)
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            994     SFP Secondary
                                                                                                                                                                                                                      Cluster:
                                                                                                                                                                                                                      Tainted Input
                                                                                                                                                                                                                      to Variable
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            1131    CISQ Quality
                                                                                                                                                                                                                      Measures (2016)
                                                                                                                                                                                                                      - Security
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            1308    CISQ Quality
                                                                                                                                                                                                                      Measures -
                                                                                                                                                                                                                      Security
 MemberOf        ViewView - a subset of CWE entries that provides a way of examining CWE content. The two main view structures are Slices (flat lists) and Graphs (containing relationships between entries). 1340    CISQ Data
                                                                                                                                                                                                                      Protection
                                                                                                                                                                                                                      Measures
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            1406    Comprehensive
                                                                                                                                                                                                                      Categorization:
                                                                                                                                                                                                                      Improper Input
                                                                                                                                                                                                                      Validation
 + Vulnerability Mapping Notes
 Usage: ALLOWED

 (this CWE ID could be used to map to real-world vulnerabilities)
 Reason: Acceptable-Use

 Rationale:

 This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.
 Comments:

 Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred
 level of abstraction.
 + Taxonomy Mappings
       Mapped Taxonomy Name          Node ID             Fit                                                                 Mapped Node Name
 Software Fault Patterns          SFP25                               Tainted input to variable
 OMG ASCSM                        ASCSM-CWE-606
 + References
 [REF-62] Mark Dowd, John McDonald and Justin Schuh. "The Art of Software Security Assessment". Chapter 7, "Looping Constructs", Page 327. 1st Edition. Addison Wesley. 2006.
 [REF-962] Object Management Group (OMG). "Automated Source Code Security Measure (ASCSM)". ASCSM-CWE-606. 2016-01. <http://www.omg.org/spec/ASCSM/1.0/>.
 + Content History
                                                                                            + Submissions
                       Submission Date                                                                   Submitter                                                          Organization
 2007-05-07                                                  Anonymous Tool Vendor (under NDA)
 (CWE Draft 6, 2007-05-07)

                                                                                           + Modifications
                      Modification Date                                                                   Modifier                                                          Organization
 2008-07-01                                                  Eric Dalci                                                                                         Cigital
                                                             updated Potential_Mitigations, Time_of_Introduction
 2008-09-08                                                  CWE Content Team                                                                                   MITRE
                                                             updated Relationships, Taxonomy_Mappings, Type
 2008-11-24                                                  CWE Content Team                                                                                   MITRE
                                                             updated Relationships, Taxonomy_Mappings
 2009-05-27                                                  CWE Content Team                                                                                   MITRE
                                                             updated Demonstrative_Examples
 2009-10-29                                                  CWE Content Team                                                                                   MITRE
                                                             updated Relationships
 2011-03-29                                                  CWE Content Team                                                                                   MITRE
                                                             updated Demonstrative_Examples, Relationships
 2011-06-01                                                  CWE Content Team                                                                                   MITRE
                                                             updated Common_Consequences
 2011-09-13                                                  CWE Content Team                                                                                   MITRE
                                                             updated Relationships, Taxonomy_Mappings
 2012-05-11                                                  CWE Content Team                                                                                   MITRE
                                                             updated References, Relationships
 2012-10-30                                                  CWE Content Team                                                                                   MITRE
                                                             updated Potential_Mitigations
 2014-07-30                                                  CWE Content Team                                                                                   MITRE
                                                             updated Relationships, Taxonomy_Mappings
 2017-11-08                                                  CWE Content Team                                                                                   MITRE
                                                             updated Demonstrative_Examples, Taxonomy_Mappings
 2019-01-03                                                  CWE Content Team                                                                                   MITRE
                                                             updated References, Relationships, Taxonomy_Mappings
 2020-02-24                                                  CWE Content Team                                                                                   MITRE
                                                             updated Relationships
 2020-06-25                                                  CWE Content Team                                                                                   MITRE
                                                             updated Demonstrative_Examples, Description, Relationships
 2020-08-20                                                  CWE Content Team                                                                                   MITRE
                                                             updated Relationships
 2020-12-10                                                  CWE Content Team                                                                                   MITRE
                                                             updated Relationships
 2023-04-27                                                  CWE Content Team                                                                                   MITRE
                                                             updated Detection_Factors, Relationships
 2023-06-29                                                  CWE Content Team                                                                                   MITRE
                                                             updated Mapping_Notes
 More information is available — Please edit the custom filter or select a different filter.
Page Last Updated: February 29, 2024
 
      Site Map | Terms of Use | Manage Cookies | Cookie Notice | Privacy Policy | Contact Us | CWE X-Twitter CWE Mastodon CWE on LinkedIn CWE YouTube channel CWE Out-of-Bounds-Read Podcast CWE
      Blog on Medium blog

MITRE Use of the Common Weakness Enumeration (CWE™) and the associated references from this website are subject to the Terms of Use. CWE is sponsored by the U.S. Department of Homeland         HSSEDI
      Security (DHS) Cybersecurity and Infrastructure Security Agency (CISA) and managed by the Homeland Security Systems Engineering and Development Institute (HSSEDI) which is operated by
      The MITRE Corporation (MITRE). Copyright © 2006–2024, The MITRE Corporation. CWE, CWSS, CWRAF, and the CWE logo are trademarks of The MITRE Corporation.

