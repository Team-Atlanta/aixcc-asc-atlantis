CWE

Common Weakness Enumeration

A community-developed list of SW & HW weaknesses that can become vulnerabilities

New to CWE? click here!
CWE Most Important Hardware Weaknesses
CWE Top 25 Most Dangerous Weaknesses
Home > CWE List > CWE- Individual Dictionary Definition (4.14)                                                                                                   ID Lookup: [                    ] [Go]
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  • Home
  • About ▼
    About New to CWE User Stories History Documents FAQs Glossary Compatibility
  • CWE List ▼
    Latest Version Downloads Reports Visualizations Archive
  • Mapping ▼
    Root Cause Mapping Guidance Root Cause Mapping Quick Tips Root Cause Mapping Examples
  • Top-N Lists ▼
    Top 25 Software Top Hardware Top 10 KEV Weaknesses
  • Community ▼
    Community Working Groups & Special Interest Groups Board Board Meeting Minutes CWE Discussion List CWE Discussion Archives Contribute Weakness Content to CWE
  • News ▼
    Current News X-Twitter ● Mastodon ● LinkedIn ● YouTube YouTube Podcast Out of Bounds Read Podcast Medium Medium News Archive
  • Search

 
 CWE Glossary Definition                  x
 
 
 CWE-911: Improper Update of Reference Count
 
 Weakness ID: 911
 Vulnerability Mapping: ALLOWEDThis CWE ID may be used to map to real-world vulnerabilities
 Abstraction: BaseBase - a weakness that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level
 weaknesses typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.
 View customized information:
 Conceptual For users who are interested in more notional aspects of a weakness. Example: educators, technical writers, and project/program managers. Operational For users who are concerned with the
 practical application and details about the nature of a weakness and how to prevent it from happening. Example: tool developers, security researchers, pen-testers, incident response analysts. Mapping
 Friendly For users who are mapping an issue to CWE/CAPEC IDs, i.e., finding the most appropriate CWE for a specific issue (e.g., a CVE record). Example: tool developers, security researchers. 
 Complete For users who wish to see all available information for the CWE/CAPEC entry. Custom For users who want to customize what details are displayed.
 ×

 Edit Custom Filter

 Conceptual Operational Mapping Friendly Select All
 
 Reset Clear Submit Cancel
 + Description
 The product uses a reference count to manage a resource, but it does not update or incorrectly updates the reference count.
 + Extended Description
 Reference counts can be used when tracking how many objects contain a reference to a particular resource, such as in memory management or garbage collection. When the reference count reaches zero,
 the resource can be de-allocated or reused because there are no more objects that use it. If the reference count accidentally reaches zero, then the resource might be released too soon, even though
 it is still in use. If all objects no longer use the resource, but the reference count is not zero, then the resource might not ever be released.
 + Relationships
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Research Concepts" (CWE-1000)
     Nature                                                                                                                                                                               Type                                                                                                                                                                            ID       Name
 ChildOf                                                                                 PillarPillar - a weakness that is the most abstract type of weakness and represents a theme for all class/base/variant weaknesses related to it. A Pillar is different from a Category as a Pillar is                                                                          664     Improper
                                                                                                                    still technically a type of weakness that describes a mistake, while a Category represents a common characteristic used to group related things.                                                                                                            Control of
                                                                                                                                                                                                                                                                                                                                                                                a Resource
                                                                                                                                                                                                                                                                                                                                                                                Through
                                                                                                                                                                                                                                                                                                                                                                                its
                                                                                                                                                                                                                                                                                                                                                                                Lifetime
 CanPrecede                                                                              ClassClass - a weakness that is described in a very abstract fashion, typically independent of any specific language or technology. More specific than a Pillar Weakness, but more general than a Base                                                                         672     Operation
                                                                                                                      Weakness. Class level weaknesses typically describe issues in terms of 1 or 2 of the following dimensions: behavior, property, and resource.                                                                                                              on a
                                                                                                                                                                                                                                                                                                                                                                                Resource
                                                                                                                                                                                                                                                                                                                                                                                after
                                                                                                                                                                                                                                                                                                                                                                                Expiration
                                                                                                                                                                                                                                                                                                                                                                                or Release
 CanPrecede                                                                                 BaseBase - a weakness that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level weaknesses                                                                             772     Missing
                                                                                                                           typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                    Release of
                                                                                                                                                                                                                                                                                                                                                                                Resource
                                                                                                                                                                                                                                                                                                                                                                                after
                                                                                                                                                                                                                                                                                                                                                                                Effective
                                                                                                                                                                                                                                                                                                                                                                                Lifetime
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Software Development" (CWE-699)
     Nature                                                       Type                                                     ID                                   Name
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 399     Resource Management Errors
 + Modes Of Introduction
 Section HelpThe different Modes of Introduction provide information about how and when this weakness may be introduced. The Phase identifies a point in the life cycle at which introduction may occur,
 while the Note provides a typical scenario related to introduction during the given phase.
     Phase                                                                                              Note
 Implementation
 + Applicable Platforms
 Section HelpThis listing shows possible areas for which the given weakness could appear. These may be for specific named Languages, Operating Systems, Architectures, Paradigms, Technologies, or a
 class of such platforms. The platform is listed along with how frequently the given weakness appears for that instance.

 Languages

 C (Sometimes Prevalent)

 C++ (Sometimes Prevalent)

 Class: Not Language-Specific (Undetermined Prevalence)

 + Likelihood Of Exploit
 Medium
 + Observed Examples
        Reference                                                                                        Description
 CVE-2002-0574           chain: reference count is not decremented, leading to memory leak in OS by sending ICMP packets.
 CVE-2004-0114           Reference count for shared memory not decremented when a function fails, potentially allowing unprivileged users to read kernel memory.
 CVE-2006-3741           chain: improper reference count tracking leads to file descriptor consumption
 CVE-2007-1383           chain: integer overflow in reference counter causes the same variable to be destroyed twice.
 CVE-2007-1700           Incorrect reference count calculation leads to improper object destruction and code execution.
 CVE-2008-2136           chain: incorrect update of reference count leads to memory leak.
 CVE-2008-2785           chain/composite: use of incorrect data type for a reference counter allows an overflow of the counter, leading to a free of memory that is still in use.
 CVE-2008-5410           Improper reference counting leads to failure of cryptographic operations.
 CVE-2009-1709           chain: improper reference counting in a garbage collection routine leads to use-after-free
 CVE-2009-3553           chain: reference count not correctly maintained when client disconnects during a large operation, leading to a use-after-free.
 CVE-2009-3624           Reference count not always incremented, leading to crash or code execution.
 CVE-2010-0176           improper reference counting leads to expired pointer dereference.
 CVE-2010-0623           OS kernel increments reference count twice but only decrements once, leading to resource consumption and crash.
 CVE-2010-2549           OS kernel driver allows code execution
 CVE-2010-4593           improper reference counting leads to exhaustion of IP addresses
 CVE-2011-0695           Race condition causes reference counter to be decremented prematurely, leading to the destruction of still-active object and an invalid pointer dereference.
 CVE-2012-4787           improper reference counting leads to use-after-free
 + Weakness Ordinalities
 Ordinality                                                                                       Description
 Primary    (where the weakness exists independent of other weaknesses)
 + Memberships
 Section HelpThis MemberOf Relationships table shows additional CWE Categories and Views that reference this weakness as a member. This information is often useful in understanding where a weakness
 fits within the context of external information sources.
     Nature                                                       Type                                                     ID                                   Name
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 1416    Comprehensive Categorization: Resource Lifecycle Management
 + Vulnerability Mapping Notes
 Usage: ALLOWED

 (this CWE ID could be used to map to real-world vulnerabilities)
 Reason: Acceptable-Use

 Rationale:

 This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.
 Comments:

 Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred
 level of abstraction.
 + References
 [REF-884] Mateusz "j00ru" Jurczyk. "Windows Kernel Reference Count Vulnerabilities - Case Study". 2012-11. <https://j00ru.vexillium.org/slides/2012/zeronights.pdf>. URL validated: 2023-04-07.
 + Content History
                                                                                            + Submissions
                               Submission Date                                                             Submitter                                                 Organization
 2012-12-21                                                                   CWE Content Team                                                     MITRE
 (CWE 2.4, 2013-02-21)

                                                                                           + Modifications
                              Modification Date                                                             Modifier                                                 Organization
 2019-06-20                                                                   CWE Content Team                                                     MITRE
                                                                              updated Type
 2020-02-24                                                                   CWE Content Team                                                     MITRE
                                                                              updated Relationships, Type
 2023-01-31                                                                   CWE Content Team                                                     MITRE
                                                                              updated Description
 2023-04-27                                                                   CWE Content Team                                                     MITRE
                                                                              updated References, Relationships
 2023-06-29                                                                   CWE Content Team                                                     MITRE
                                                                              updated Mapping_Notes
 More information is available — Please edit the custom filter or select a different filter.
Page Last Updated: February 29, 2024
 
      Site Map | Terms of Use | Manage Cookies | Cookie Notice | Privacy Policy | Contact Us | CWE X-Twitter CWE Mastodon CWE on LinkedIn CWE YouTube channel CWE Out-of-Bounds-Read Podcast CWE
      Blog on Medium blog

MITRE Use of the Common Weakness Enumeration (CWE™) and the associated references from this website are subject to the Terms of Use. CWE is sponsored by the U.S. Department of Homeland         HSSEDI
      Security (DHS) Cybersecurity and Infrastructure Security Agency (CISA) and managed by the Homeland Security Systems Engineering and Development Institute (HSSEDI) which is operated by
      The MITRE Corporation (MITRE). Copyright © 2006–2024, The MITRE Corporation. CWE, CWSS, CWRAF, and the CWE logo are trademarks of The MITRE Corporation.

