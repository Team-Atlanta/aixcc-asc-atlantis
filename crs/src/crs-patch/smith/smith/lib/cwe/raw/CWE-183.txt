CWE

Common Weakness Enumeration

A community-developed list of SW & HW weaknesses that can become vulnerabilities

New to CWE? click here!
CWE Most Important Hardware Weaknesses
CWE Top 25 Most Dangerous Weaknesses
Home > CWE List > CWE- Individual Dictionary Definition (4.14)                                                                                                   ID Lookup: [                    ] [Go]
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  • Home
  • About ▼
    About New to CWE User Stories History Documents FAQs Glossary Compatibility
  • CWE List ▼
    Latest Version Downloads Reports Visualizations Archive
  • Mapping ▼
    Root Cause Mapping Guidance Root Cause Mapping Quick Tips Root Cause Mapping Examples
  • Top-N Lists ▼
    Top 25 Software Top Hardware Top 10 KEV Weaknesses
  • Community ▼
    Community Working Groups & Special Interest Groups Board Board Meeting Minutes CWE Discussion List CWE Discussion Archives Contribute Weakness Content to CWE
  • News ▼
    Current News X-Twitter ● Mastodon ● LinkedIn ● YouTube YouTube Podcast Out of Bounds Read Podcast Medium Medium News Archive
  • Search

 
 CWE Glossary Definition                  x
 
 
 CWE-183: Permissive List of Allowed Inputs
 
 Weakness ID: 183
 Vulnerability Mapping: ALLOWEDThis CWE ID may be used to map to real-world vulnerabilities
 Abstraction: BaseBase - a weakness that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level
 weaknesses typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.
 View customized information:
 Conceptual For users who are interested in more notional aspects of a weakness. Example: educators, technical writers, and project/program managers. Operational For users who are concerned with the
 practical application and details about the nature of a weakness and how to prevent it from happening. Example: tool developers, security researchers, pen-testers, incident response analysts. Mapping
 Friendly For users who are mapping an issue to CWE/CAPEC IDs, i.e., finding the most appropriate CWE for a specific issue (e.g., a CVE record). Example: tool developers, security researchers. 
 Complete For users who wish to see all available information for the CWE/CAPEC entry. Custom For users who want to customize what details are displayed.
 ×

 Edit Custom Filter

 Conceptual Operational Mapping Friendly Select All
 
 Reset Clear Submit Cancel
 + Description
 The product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are explicitly allowed by policy because the inputs are assumed to be safe, but the list
 is too permissive - that is, it allows an input that is unsafe, leading to resultant weaknesses.
 + Alternate Terms
 Allowlist / Allow List: This is used by CWE and CAPEC instead of other commonly-used terms. Its counterpart is denylist.
  Safelist / Safe List:  This is often used by security tools such as firewalls, email or web gateways, proxies, etc.
 Whitelist / White List: This term is frequently used, but usage has been declining as organizations have started to adopt other terms.
 + Relationships
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Research Concepts" (CWE-1000)
     Nature                                                                                                                                                                               Type                                                                                                                                                                            ID        Name
 ChildOf                                                                                 PillarPillar - a weakness that is the most abstract type of weakness and represents a theme for all class/base/variant weaknesses related to it. A Pillar is different from a Category as a Pillar is                                                                          697     Incorrect
                                                                                                                    still technically a type of weakness that describes a mistake, while a Category represents a common characteristic used to group related things.                                                                                                            Comparison
 ParentOf                                                                                VariantVariant - a weakness that is linked to a certain type of product, typically involving a specific language or technology. More specific than a Base weakness. Variant level weaknesses typically                                                                         942     Permissive
                                                                                                                                describe issues in terms of 3 to 5 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                         Cross-domain
                                                                                                                                                                                                                                                                                                                                                                                Policy with
                                                                                                                                                                                                                                                                                                                                                                                Untrusted
                                                                                                                                                                                                                                                                                                                                                                                Domains
 PeerOf                                                                                     BaseBase - a weakness that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level weaknesses                                                                             625     Permissive
                                                                                                                           typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                    Regular
                                                                                                                                                                                                                                                                                                                                                                                Expression
 PeerOf                                                                                  VariantVariant - a weakness that is linked to a certain type of product, typically involving a specific language or technology. More specific than a Base weakness. Variant level weaknesses typically                                                                         627     Dynamic
                                                                                                                                describe issues in terms of 3 to 5 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                         Variable
                                                                                                                                                                                                                                                                                                                                                                                Evaluation
 CanPrecede                                                                                 BaseBase - a weakness that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level weaknesses                                                                             434     Unrestricted
                                                                                                                           typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                    Upload of
                                                                                                                                                                                                                                                                                                                                                                                File with
                                                                                                                                                                                                                                                                                                                                                                                Dangerous
                                                                                                                                                                                                                                                                                                                                                                                Type
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Software Development" (CWE-699)
     Nature                                                       Type                                                     ID                                   Name
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 1215    Data Validation Issues
 + Modes Of Introduction
 Section HelpThe different Modes of Introduction provide information about how and when this weakness may be introduced. The Phase identifies a point in the life cycle at which introduction may occur,
 while the Note provides a typical scenario related to introduction during the given phase.
     Phase                                                                                              Note
 Implementation
 + Applicable Platforms
 Section HelpThis listing shows possible areas for which the given weakness could appear. These may be for specific named Languages, Operating Systems, Architectures, Paradigms, Technologies, or a
 class of such platforms. The platform is listed along with how frequently the given weakness appears for that instance.

 Languages

 Class: Not Language-Specific (Undetermined Prevalence)

 + Common Consequences
 Section HelpThis table specifies different individual consequences associated with the weakness. The Scope identifies the application security area that is violated, while the Impact describes the
 negative technical impact that arises if an adversary succeeds in exploiting this weakness. The Likelihood provides information about how likely the specific consequence is expected to be seen
 relative to the other consequences in the list. For example, there may be high likelihood that a weakness will be exploited to achieve a certain impact, but a low likelihood that it will be exploited
 to achieve a different impact.
       Scope                                                                                     Impact                                                                                 Likelihood
 Access Control     Technical Impact: Bypass Protection Mechanism

 + Observed Examples
        Reference                                                                                        Description
 CVE-2019-12799          chain: bypass of untrusted deserialization issue (CWE-502) by using an assumed-trusted class (CWE-183)
 CVE-2019-10458          sandbox bypass using a method that is on an allowlist
 CVE-2017-1000095        sandbox bypass using unsafe methods that are on an allowlist
 CVE-2019-10458          CI/CD pipeline feature has unsafe elements in allowlist, allowing bypass of script restrictions
 CVE-2017-1000095        Default allowlist includes unsafe methods, allowing bypass of sandbox
 + Weakness Ordinalities
 Ordinality                                                                                       Description
 Primary    (where the weakness exists independent of other weaknesses)
 + Detection Methods
 Automated Static Analysis

 Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without
 having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect "sources" (origins of input) with
 "sinks" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)

 Effectiveness: High

 + Memberships
 Section HelpThis MemberOf Relationships table shows additional CWE Categories and Views that reference this weakness as a member. This information is often useful in understanding where a weakness
 fits within the context of external information sources.
     Nature                                                       Type                                                     ID                                   Name
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 722     OWASP Top Ten 2004 Category A1 - Unvalidated Input
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 990     SFP Secondary Cluster: Tainted Input to Command
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 1348    OWASP Top Ten 2021 Category A04:2021 - Insecure Design
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 1397    Comprehensive Categorization: Comparison
 + Vulnerability Mapping Notes
 Usage: ALLOWED

 (this CWE ID could be used to map to real-world vulnerabilities)
 Reason: Acceptable-Use

 Rationale:

 This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.
 Comments:

 Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred
 level of abstraction.
 + Taxonomy Mappings
       Mapped Taxonomy Name          Node ID              Fit                                                                 Mapped Node Name
 PLOVER                                                                 Permissive Whitelist
 + Related Attack Patterns
    CAPEC-ID                                                                                     Attack Pattern Name
 CAPEC-120       Double Encoding
 CAPEC-3         Using Leading 'Ghost' Character Sequences to Bypass Input Filters
 CAPEC-43        Exploiting Multiple Input Interpretation Layers
 CAPEC-71        Using Unicode Encoding to Bypass Validation Logic
 + References
 [REF-62] Mark Dowd, John McDonald and Justin Schuh. "The Art of Software Security Assessment". Chapter 8, "Eliminating Metacharacters", Page 435. 1st Edition. Addison Wesley. 2006.
 + Content History
                                                                                           + Submissions
                 Submission Date                                                      Submitter                                                               Organization
 2006-07-19                                       PLOVER
 (CWE Draft 3, 2006-07-19)

                                                                                          + Modifications
                Modification Date                                                      Modifier                                                               Organization
 2008-07-01                                       Eric Dalci                                                                         Cigital
                                                  updated Potential_Mitigations, Time_of_Introduction
 2008-09-08                                       CWE Content Team                                                                   MITRE
                                                  updated Description, Relationships, Taxonomy_Mappings, Weakness_Ordinalities
 2009-03-10                                       CWE Content Team                                                                   MITRE
                                                  updated Relationships
 2009-07-27                                       CWE Content Team                                                                   MITRE
                                                  updated Potential_Mitigations
 2010-02-16                                       CWE Content Team                                                                   MITRE
                                                  updated Relationships
 2011-03-29                                       CWE Content Team                                                                   MITRE
                                                  updated Potential_Mitigations
 2011-06-01                                       CWE Content Team                                                                   MITRE
                                                  updated Common_Consequences
 2012-05-11                                       CWE Content Team                                                                   MITRE
                                                  updated References, Relationships
 2013-02-21                                       CWE Content Team                                                                   MITRE
                                                  updated Potential_Mitigations
 2014-06-23                                       CWE Content Team                                                                   MITRE
                                                  updated Relationships
 2014-07-30                                       CWE Content Team                                                                   MITRE
                                                  updated Relationships
 2017-11-08                                       CWE Content Team                                                                   MITRE
                                                  updated Applicable_Platforms
 2019-01-03                                       CWE Content Team                                                                   MITRE
                                                  updated Related_Attack_Patterns
 2019-06-20                                       CWE Content Team                                                                   MITRE
                                                  updated Relationships
 2020-02-24                                       CWE Content Team                                                                   MITRE
                                                  updated Alternate_Terms, Description, Observed_Examples, Relationships
 2020-06-25                                       CWE Content Team                                                                   MITRE
                                                  updated Alternate_Terms, Observed_Examples
 2021-10-28                                       CWE Content Team                                                                   MITRE
                                                  updated Relationships
 2023-04-27                                       CWE Content Team                                                                   MITRE
                                                  updated Detection_Factors, Relationships
 2023-06-29                                       CWE Content Team                                                                   MITRE
                                                  updated Mapping_Notes
                                                                                       + Previous Entry Names
                   Change Date                                                                                   Previous Entry Name
 2020-02-24                                       Permissive Whitelist
 More information is available — Please edit the custom filter or select a different filter.
Page Last Updated: February 29, 2024
 
      Site Map | Terms of Use | Manage Cookies | Cookie Notice | Privacy Policy | Contact Us | CWE X-Twitter CWE Mastodon CWE on LinkedIn CWE YouTube channel CWE Out-of-Bounds-Read Podcast CWE
      Blog on Medium blog

MITRE Use of the Common Weakness Enumeration (CWE™) and the associated references from this website are subject to the Terms of Use. CWE is sponsored by the U.S. Department of Homeland         HSSEDI
      Security (DHS) Cybersecurity and Infrastructure Security Agency (CISA) and managed by the Homeland Security Systems Engineering and Development Institute (HSSEDI) which is operated by
      The MITRE Corporation (MITRE). Copyright © 2006–2024, The MITRE Corporation. CWE, CWSS, CWRAF, and the CWE logo are trademarks of The MITRE Corporation.

