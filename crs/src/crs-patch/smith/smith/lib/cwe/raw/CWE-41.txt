CWE

Common Weakness Enumeration

A community-developed list of SW & HW weaknesses that can become vulnerabilities

New to CWE? click here!
CWE Most Important Hardware Weaknesses
CWE Top 25 Most Dangerous Weaknesses
Home > CWE List > CWE- Individual Dictionary Definition (4.14)                                                                                                   ID Lookup: [                    ] [Go]
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  • Home
  • About ▼
    About New to CWE User Stories History Documents FAQs Glossary Compatibility
  • CWE List ▼
    Latest Version Downloads Reports Visualizations Archive
  • Mapping ▼
    Root Cause Mapping Guidance Root Cause Mapping Quick Tips Root Cause Mapping Examples
  • Top-N Lists ▼
    Top 25 Software Top Hardware Top 10 KEV Weaknesses
  • Community ▼
    Community Working Groups & Special Interest Groups Board Board Meeting Minutes CWE Discussion List CWE Discussion Archives Contribute Weakness Content to CWE
  • News ▼
    Current News X-Twitter ● Mastodon ● LinkedIn ● YouTube YouTube Podcast Out of Bounds Read Podcast Medium Medium News Archive
  • Search

 
 CWE Glossary Definition                  x
 
 
 CWE-41: Improper Resolution of Path Equivalence
 
 Weakness ID: 41
 Vulnerability Mapping: ALLOWEDThis CWE ID may be used to map to real-world vulnerabilities
 Abstraction: BaseBase - a weakness that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level
 weaknesses typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.
 View customized information:
 Conceptual For users who are interested in more notional aspects of a weakness. Example: educators, technical writers, and project/program managers. Operational For users who are concerned with the
 practical application and details about the nature of a weakness and how to prevent it from happening. Example: tool developers, security researchers, pen-testers, incident response analysts. Mapping
 Friendly For users who are mapping an issue to CWE/CAPEC IDs, i.e., finding the most appropriate CWE for a specific issue (e.g., a CVE record). Example: tool developers, security researchers. 
 Complete For users who wish to see all available information for the CWE/CAPEC entry. Custom For users who want to customize what details are displayed.
 ×

 Edit Custom Filter

 Conceptual Operational Mapping Friendly Select All
 
 Reset Clear Submit Cancel
 + Description
 The product is vulnerable to file system contents disclosure through path equivalence. Path equivalence involves the use of special characters in file and directory names. The associated
 manipulations are intended to generate multiple names for the same object.
 + Extended Description
 Path equivalence is usually employed in order to circumvent access controls expressed using an incomplete set of file name or file path representations. This is different from path traversal, wherein
 the manipulations are performed to generate a name for a different object.
 + Relationships
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Research Concepts" (CWE-1000)
     Nature                                                                                                                                                                             Type                                                                                                                                                                           ID            Name
 ChildOf                                                                               ClassClass - a weakness that is described in a very abstract fashion, typically independent of any specific language or technology. More specific than a Pillar Weakness, but more general than a Base                                                                        706     Use of
                                                                                                                    Weakness. Class level weaknesses typically describe issues in terms of 1 or 2 of the following dimensions: behavior, property, and resource.                                                                                                             Incorrectly-Resolved
                                                                                                                                                                                                                                                                                                                                                                             Name or Reference
 ParentOf                                                                              VariantVariant - a weakness that is linked to a certain type of product, typically involving a specific language or technology. More specific than a Base weakness. Variant level weaknesses typically                                                                        42      Path Equivalence:
                                                                                                                               describe issues in terms of 3 to 5 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                       'filename.'
                                                                                                                                                                                                                                                                                                                                                                             (Trailing Dot)
 ParentOf                                                                              VariantVariant - a weakness that is linked to a certain type of product, typically involving a specific language or technology. More specific than a Base weakness. Variant level weaknesses typically                                                                        44      Path Equivalence:
                                                                                                                               describe issues in terms of 3 to 5 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                       'file.name'
                                                                                                                                                                                                                                                                                                                                                                             (Internal Dot)
 ParentOf                                                                              VariantVariant - a weakness that is linked to a certain type of product, typically involving a specific language or technology. More specific than a Base weakness. Variant level weaknesses typically                                                                        46      Path Equivalence:
                                                                                                                               describe issues in terms of 3 to 5 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                       'filename '
                                                                                                                                                                                                                                                                                                                                                                             (Trailing Space)
 ParentOf                                                                              VariantVariant - a weakness that is linked to a certain type of product, typically involving a specific language or technology. More specific than a Base weakness. Variant level weaknesses typically                                                                        47      Path Equivalence: '
                                                                                                                               describe issues in terms of 3 to 5 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                       filename' (Leading
                                                                                                                                                                                                                                                                                                                                                                             Space)
 ParentOf                                                                              VariantVariant - a weakness that is linked to a certain type of product, typically involving a specific language or technology. More specific than a Base weakness. Variant level weaknesses typically                                                                        48      Path Equivalence:
                                                                                                                               describe issues in terms of 3 to 5 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                       'file name'
                                                                                                                                                                                                                                                                                                                                                                             (Internal
                                                                                                                                                                                                                                                                                                                                                                             Whitespace)
 ParentOf                                                                              VariantVariant - a weakness that is linked to a certain type of product, typically involving a specific language or technology. More specific than a Base weakness. Variant level weaknesses typically                                                                        49      Path Equivalence:
                                                                                                                               describe issues in terms of 3 to 5 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                       'filename/'
                                                                                                                                                                                                                                                                                                                                                                             (Trailing Slash)
 ParentOf                                                                              VariantVariant - a weakness that is linked to a certain type of product, typically involving a specific language or technology. More specific than a Base weakness. Variant level weaknesses typically                                                                        50      Path Equivalence: '/
                                                                                                                               describe issues in terms of 3 to 5 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                       /multiple/leading/
                                                                                                                                                                                                                                                                                                                                                                             slash'
 ParentOf                                                                              VariantVariant - a weakness that is linked to a certain type of product, typically involving a specific language or technology. More specific than a Base weakness. Variant level weaknesses typically                                                                        51      Path Equivalence: '/
                                                                                                                               describe issues in terms of 3 to 5 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                       multiple//internal/
                                                                                                                                                                                                                                                                                                                                                                             slash'
 ParentOf                                                                              VariantVariant - a weakness that is linked to a certain type of product, typically involving a specific language or technology. More specific than a Base weakness. Variant level weaknesses typically                                                                        52      Path Equivalence: '/
                                                                                                                               describe issues in terms of 3 to 5 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                       multiple/trailing/
                                                                                                                                                                                                                                                                                                                                                                             slash//'
 ParentOf                                                                              VariantVariant - a weakness that is linked to a certain type of product, typically involving a specific language or technology. More specific than a Base weakness. Variant level weaknesses typically                                                                        53      Path Equivalence: '\
                                                                                                                               describe issues in terms of 3 to 5 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                       multiple\\internal\
                                                                                                                                                                                                                                                                                                                                                                             backslash'
 ParentOf                                                                              VariantVariant - a weakness that is linked to a certain type of product, typically involving a specific language or technology. More specific than a Base weakness. Variant level weaknesses typically                                                                        54      Path Equivalence:
                                                                                                                               describe issues in terms of 3 to 5 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                       'filedir\' (Trailing
                                                                                                                                                                                                                                                                                                                                                                             Backslash)
 ParentOf                                                                              VariantVariant - a weakness that is linked to a certain type of product, typically involving a specific language or technology. More specific than a Base weakness. Variant level weaknesses typically                                                                        55      Path Equivalence: '
                                                                                                                               describe issues in terms of 3 to 5 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                       /./' (Single Dot
                                                                                                                                                                                                                                                                                                                                                                             Directory)
 ParentOf                                                                              VariantVariant - a weakness that is linked to a certain type of product, typically involving a specific language or technology. More specific than a Base weakness. Variant level weaknesses typically                                                                        56      Path Equivalence:
                                                                                                                               describe issues in terms of 3 to 5 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                       'filedir*'
                                                                                                                                                                                                                                                                                                                                                                             (Wildcard)
 ParentOf                                                                              VariantVariant - a weakness that is linked to a certain type of product, typically involving a specific language or technology. More specific than a Base weakness. Variant level weaknesses typically                                                                        57      Path Equivalence:
                                                                                                                               describe issues in terms of 3 to 5 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                       'fakedir/../realdir/
                                                                                                                                                                                                                                                                                                                                                                             filename'
 ParentOf                                                                              VariantVariant - a weakness that is linked to a certain type of product, typically involving a specific language or technology. More specific than a Base weakness. Variant level weaknesses typically                                                                        58      Path Equivalence:
                                                                                                                               describe issues in terms of 3 to 5 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                       Windows 8.3 Filename
 PeerOf                                                                                    BaseBase - a weakness that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level weaknesses                                                                           1289    Improper Validation
                                                                                                                          typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                  of Unsafe
                                                                                                                                                                                                                                                                                                                                                                             Equivalence in Input
 CanFollow                                                                             ClassClass - a weakness that is described in a very abstract fashion, typically independent of any specific language or technology. More specific than a Pillar Weakness, but more general than a Base                                                                        20      Improper Input
                                                                                                                    Weakness. Class level weaknesses typically describe issues in terms of 1 or 2 of the following dimensions: behavior, property, and resource.                                                                                                             Validation
 CanFollow                                                                                 BaseBase - a weakness that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level weaknesses                                                                           73      External Control of
                                                                                                                          typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                  File Name or Path
 CanFollow                                                                             ClassClass - a weakness that is described in a very abstract fashion, typically independent of any specific language or technology. More specific than a Pillar Weakness, but more general than a Base                                                                        172     Encoding Error
                                                                                                                    Weakness. Class level weaknesses typically describe issues in terms of 1 or 2 of the following dimensions: behavior, property, and resource.
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Software Development" (CWE-699)
     Nature                                                       Type                                                     ID                                   Name
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 1219    File Handling Issues
 + Modes Of Introduction
 Section HelpThe different Modes of Introduction provide information about how and when this weakness may be introduced. The Phase identifies a point in the life cycle at which introduction may occur,
 while the Note provides a typical scenario related to introduction during the given phase.
     Phase                                                                                              Note
 Implementation
 + Applicable Platforms
 Section HelpThis listing shows possible areas for which the given weakness could appear. These may be for specific named Languages, Operating Systems, Architectures, Paradigms, Technologies, or a
 class of such platforms. The platform is listed along with how frequently the given weakness appears for that instance.

 Languages

 Class: Not Language-Specific (Undetermined Prevalence)

 + Common Consequences
 Section HelpThis table specifies different individual consequences associated with the weakness. The Scope identifies the application security area that is violated, while the Impact describes the
 negative technical impact that arises if an adversary succeeds in exploiting this weakness. The Likelihood provides information about how likely the specific consequence is expected to be seen
 relative to the other consequences in the list. For example, there may be high likelihood that a weakness will be exploited to achieve a certain impact, but a low likelihood that it will be exploited
 to achieve a different impact.
       Scope                                                                                     Impact                                                                                 Likelihood
 Confidentiality    Technical Impact: Read Files or Directories; Modify Files or Directories; Bypass Protection Mechanism
 Integrity
 Access Control     An attacker may be able to traverse the file system to unintended locations and read or overwrite the contents of unexpected files. If the files are used for a
                    security mechanism than an attacker may be able to bypass the mechanism.
 + Observed Examples
        Reference                                                                                        Description
 CVE-2000-1114           Source code disclosure using trailing dot
 CVE-2002-1986           Source code disclosure using trailing dot
 CVE-2004-2213           Source code disclosure using trailing dot or trailing encoding space "%20"
 CVE-2005-3293           Source code disclosure using trailing dot
 CVE-2004-0061           Bypass directory access restrictions using trailing dot in URL
 CVE-2000-1133           Bypass directory access restrictions using trailing dot in URL
 CVE-2001-1386           Bypass check for ".lnk" extension using ".lnk."
 CVE-2001-0693           Source disclosure via trailing encoded space "%20"
 CVE-2001-0778           Source disclosure via trailing encoded space "%20"
 CVE-2001-1248           Source disclosure via trailing encoded space "%20"
 CVE-2004-0280           Source disclosure via trailing encoded space "%20"
 CVE-2005-0622           Source disclosure via trailing encoded space "%20"
 CVE-2005-1656           Source disclosure via trailing encoded space "%20"
 CVE-2002-1603           Source disclosure via trailing encoded space "%20"
 CVE-2001-0054           Multi-Factor Vulnerability (MFV). directory traversal and other issues in FTP server using Web encodings such as "%20"; certain manipulations have unusual side effects.
 CVE-2002-1451           Trailing space ("+" in query string) leads to source code disclosure.
 CVE-2000-0293           Filenames with spaces allow arbitrary file deletion when the product does not properly quote them; some overlap with path traversal.
 CVE-2001-1567           "+" characters in query string converted to spaces before sensitive file/extension (internal space), leading to bypass of access restrictions to the file.
 CVE-2002-0253           Overlaps infoleak
 CVE-2001-0446           Application server allows remote attackers to read source code for .jsp files by appending a / to the requested URL.
 CVE-2004-0334           Bypass Basic Authentication for files using trailing "/"
 CVE-2001-0893           Read sensitive files with trailing "/"
 CVE-2001-0892           Web server allows remote attackers to view sensitive files under the document root (such as .htpasswd) via a GET request with a trailing /.
 CVE-2004-1814           Directory traversal vulnerability in server allows remote attackers to read protected files via .. (dot dot) sequences in an HTTP request.
 CVE-2002-1483           Read files with full pathname using multiple internal slash.
 CVE-1999-1456           Server allows remote attackers to read arbitrary files via a GET request with more than one leading / (slash) character in the filename.
 CVE-2004-0578           Server allows remote attackers to read arbitrary files via leading slash (//) characters in a URL request.
 CVE-2002-0275           Server allows remote attackers to bypass authentication and read restricted files via an extra / (slash) in the requested URL.
 CVE-2004-1032           Product allows local users to delete arbitrary files or create arbitrary empty files via a target filename with a large number of leading slash (/) characters.
 CVE-2002-1238           Server allows remote attackers to bypass access restrictions for files via an HTTP request with a sequence of multiple / (slash) characters such as http://www.example.com/
                         //file/.
 CVE-2004-1878           Product allows remote attackers to bypass authentication, obtain sensitive information, or gain access via a direct request to admin/user.pl preceded by // (double leading
                         slash).
 CVE-2005-1365           Server allows remote attackers to execute arbitrary commands via a URL with multiple leading "/" (slash) characters and ".." sequences.
 CVE-2000-1050           Access directory using multiple leading slash.
 CVE-2001-1072           Bypass access restrictions via multiple leading slash, which causes a regular expression to fail.
 CVE-2004-0235           Archive extracts to arbitrary files using multiple leading slash in filenames in the archive.
 CVE-2002-1078           Directory listings in web server using multiple trailing slash
 CVE-2004-0847           ASP.NET allows remote attackers to bypass authentication for .aspx files in restricted directories via a request containing a (1) "\" (backslash) or (2) "%5C" (encoded
                         backslash), aka "Path Validation Vulnerability."
 CVE-2000-0004           Server allows remote attackers to read source code for executable files by inserting a . (dot) into the URL.
 CVE-2002-0304           Server allows remote attackers to read password-protected files via a /./ in the HTTP request.
 CVE-1999-1083           Possibly (could be a cleansing error)
 CVE-2004-0815           "/./////etc" cleansed to ".///etc" then "/etc"
 CVE-2002-0112           Server allows remote attackers to view password protected files via /./ in the URL.
 CVE-2004-0696           List directories using desired path and "*"
 CVE-2002-0433           List files in web server using "*.ext"
 CVE-2001-1152           Proxy allows remote attackers to bypass denylist restrictions and connect to unauthorized web servers by modifying the requested URL, including (1) a // (double slash),
                         (2) a /SUBDIR/.. where the desired file is in the parentdir, (3) a /./, or (4) URL-encoded characters.
 CVE-2000-0191           application check access for restricted URL before canonicalization
 CVE-2005-1366           CGI source disclosure using "dirname/../cgi-bin"
 CVE-1999-0012           Multiple web servers allow restriction bypass using 8.3 names instead of long names
 CVE-2001-0795           Source code disclosure using 8.3 file name.
 CVE-2005-0471           Multi-Factor Vulnerability. Product generates temporary filenames using long filenames, which become predictable in 8.3 format.
 + Potential Mitigations
 Phase: Implementation

 Strategy: Input Validation

 Assume all input is malicious. Use an "accept known good" input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not
 strictly conform to specifications, or transform it into something that does.

 When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency
 across related fields, and conformance to business rules. As an example of business rule logic, "boat" may be syntactically valid because it only contains alphanumeric characters, but it is not
 valid if the input is only expected to contain colors such as "red" or "blue."

 Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers
 enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.

 Phase: Implementation

 Strategy: Output Encoding

 Use and specify an output encoding that can be handled by the downstream component that is reading the output. Common encodings include ISO-8859-1, UTF-7, and UTF-8. When an encoding is not
 specified, a downstream component may choose a different encoding, either by assuming a default encoding or automatically inferring which encoding is being used, which can be erroneous. When the
 encodings are inconsistent, the downstream component might treat some character or byte sequences as special, even if they are not special in the original encoding. Attackers might then be able
 to exploit this discrepancy and conduct injection attacks; they even might be able to bypass protection mechanisms that assume the original encoding is also being used by the downstream
 component.
 Phase: Implementation

 Strategy: Input Validation

 Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input
 twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked.
 + Detection Methods
 Automated Static Analysis - Binary or Bytecode

 According to SOAR, the following detection techniques may be useful:

 Cost effective for partial coverage:

   • Bytecode Weakness Analysis - including disassembler + source code weakness analysis

 Effectiveness: SOAR Partial

 Manual Static Analysis - Binary or Bytecode

 According to SOAR, the following detection techniques may be useful:

 Cost effective for partial coverage:

   • Binary / Bytecode disassembler - then use manual analysis for vulnerabilities & anomalies

 Effectiveness: SOAR Partial

 Dynamic Analysis with Automated Results Interpretation

 According to SOAR, the following detection techniques may be useful:

 Cost effective for partial coverage:

   • Web Application Scanner
   • Web Services Scanner
   • Database Scanners

 Effectiveness: SOAR Partial

 Dynamic Analysis with Manual Results Interpretation

 According to SOAR, the following detection techniques may be useful:

 Cost effective for partial coverage:

   • Fuzz Tester
   • Framework-based Fuzzer

 Effectiveness: SOAR Partial

 Manual Static Analysis - Source Code

 According to SOAR, the following detection techniques may be useful:

 Highly cost effective:

   • Focused Manual Spotcheck - Focused manual analysis of source
   • Manual Source Code Review (not inspections)

 Effectiveness: High

 Automated Static Analysis - Source Code

 According to SOAR, the following detection techniques may be useful:

 Cost effective for partial coverage:

   • Source code Weakness Analyzer
   • Context-configured Source Code Weakness Analyzer

 Effectiveness: SOAR Partial

 Architecture or Design Review

 According to SOAR, the following detection techniques may be useful:

 Highly cost effective:

   • Formal Methods / Correct-By-Construction

 Cost effective for partial coverage:

   • Inspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.)

 Effectiveness: High

 + Affected Resources
 
   • File or Directory

 + Memberships
 Section HelpThis MemberOf Relationships table shows additional CWE Categories and Views that reference this weakness as a member. This information is often useful in understanding where a weakness
 fits within the context of external information sources.
     Nature                                                                                                  Type                                                                                               ID         Name
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            723     OWASP Top Ten
                                                                                                                                                                                                                      2004 Category
                                                                                                                                                                                                                      A2 - Broken
                                                                                                                                                                                                                      Access Control
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            743     CERT C Secure
                                                                                                                                                                                                                      Coding Standard
                                                                                                                                                                                                                      (2008) Chapter
                                                                                                                                                                                                                      10 - Input
                                                                                                                                                                                                                      Output (FIO)
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            877     CERT C++ Secure
                                                                                                                                                                                                                      Coding Section
                                                                                                                                                                                                                      09 - Input
                                                                                                                                                                                                                      Output (FIO)
 MemberOf        ViewView - a subset of CWE entries that provides a way of examining CWE content. The two main view structures are Slices (flat lists) and Graphs (containing relationships between entries). 884     CWE
                                                                                                                                                                                                                      Cross-section
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            981     SFP Secondary
                                                                                                                                                                                                                      Cluster: Path
                                                                                                                                                                                                                      Traversal
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            1404    Comprehensive
                                                                                                                                                                                                                      Categorization:
                                                                                                                                                                                                                      File Handling
 + Vulnerability Mapping Notes
 Usage: ALLOWED

 (this CWE ID could be used to map to real-world vulnerabilities)
 Reason: Acceptable-Use

 Rationale:

 This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.
 Comments:

 Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred
 level of abstraction.
 + Notes
 
 Relationship

 Some of these manipulations could be effective in path traversal issues, too.
 + Taxonomy Mappings
       Mapped Taxonomy Name          Node ID       Fit                                                                 Mapped Node Name
 PLOVER                                                   Path Equivalence
 CERT C Secure Coding             FIO02-C                 Canonicalize path names originating from untrusted sources
 + Related Attack Patterns
    CAPEC-ID                                                                                     Attack Pattern Name
 CAPEC-3         Using Leading 'Ghost' Character Sequences to Bypass Input Filters
 + Content History
                                                                                           + Submissions
                Submission Date                                                      Submitter                                                                Organization
 2006-07-19                                    PLOVER
 (CWE Draft 3, 2006-07-19)

                                                                                          + Modifications
               Modification Date                                                     Modifier                                                                 Organization
 2008-07-01                                    Eric Dalci                                                                            Cigital
                                               updated Potential_Mitigations, Time_of_Introduction
 2008-09-08                                    CWE Content Team                                                                      MITRE
                                               updated Relationships, Other_Notes, Taxonomy_Mappings, Type
 2008-10-14                                    CWE Content Team                                                                      MITRE
                                               updated Description
 2008-11-24                                    CWE Content Team                                                                      MITRE
                                               updated Relationships, Taxonomy_Mappings
 2009-03-10                                    CWE Content Team                                                                      MITRE
                                               updated Relationships
 2009-05-27                                    CWE Content Team                                                                      MITRE
                                               updated Name
 2009-07-27                                    CWE Content Team                                                                      MITRE
                                               updated Potential_Mitigations
 2011-03-29                                    CWE Content Team                                                                      MITRE
                                               updated Other_Notes, Potential_Mitigations, Relationship_Notes
 2011-06-01                                    CWE Content Team                                                                      MITRE
                                               updated Common_Consequences
 2011-09-13                                    CWE Content Team                                                                      MITRE
                                               updated Relationships, Taxonomy_Mappings
 2012-05-11                                    CWE Content Team                                                                      MITRE
                                               updated Common_Consequences, Observed_Examples, Relationships
 2012-10-30                                    CWE Content Team                                                                      MITRE
                                               updated Potential_Mitigations
 2014-07-30                                    CWE Content Team                                                                      MITRE
                                               updated Detection_Factors, Relationships
 2017-11-08                                    CWE Content Team                                                                      MITRE
                                               updated Affected_Resources, Applicable_Platforms, Relationships, Taxonomy_Mappings
 2019-06-20                                    CWE Content Team                                                                      MITRE
                                               updated Related_Attack_Patterns
 2020-02-24                                    CWE Content Team                                                                      MITRE
                                               updated Potential_Mitigations, Relationships
 2020-06-25                                    CWE Content Team                                                                      MITRE
                                               updated Observed_Examples, Potential_Mitigations, Relationships
 2023-01-31                                    CWE Content Team                                                                      MITRE
                                               updated Description
 2023-04-27                                    CWE Content Team                                                                      MITRE
                                               updated Relationships
 2023-06-29                                    CWE Content Team                                                                      MITRE
                                               updated Mapping_Notes
 2023-10-26                                    CWE Content Team                                                                      MITRE
                                               updated Observed_Examples
 2024-02-29                                    CWE Content Team                                                                      MITRE
 (CWE 4.14, 2024-02-29)                        updated Observed_Examples
                                                                                       + Previous Entry Names
                  Change Date                                                                                   Previous Entry Name
 2008-04-11                                    Path Equivalence
 2009-05-27                                    Failure to Resolve Path Equivalence
 More information is available — Please edit the custom filter or select a different filter.
Page Last Updated: February 29, 2024
 
      Site Map | Terms of Use | Manage Cookies | Cookie Notice | Privacy Policy | Contact Us | CWE X-Twitter CWE Mastodon CWE on LinkedIn CWE YouTube channel CWE Out-of-Bounds-Read Podcast CWE
      Blog on Medium blog

MITRE Use of the Common Weakness Enumeration (CWE™) and the associated references from this website are subject to the Terms of Use. CWE is sponsored by the U.S. Department of Homeland         HSSEDI
      Security (DHS) Cybersecurity and Infrastructure Security Agency (CISA) and managed by the Homeland Security Systems Engineering and Development Institute (HSSEDI) which is operated by
      The MITRE Corporation (MITRE). Copyright © 2006–2024, The MITRE Corporation. CWE, CWSS, CWRAF, and the CWE logo are trademarks of The MITRE Corporation.

