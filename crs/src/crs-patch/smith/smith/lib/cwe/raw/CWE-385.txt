CWE

Common Weakness Enumeration

A community-developed list of SW & HW weaknesses that can become vulnerabilities

New to CWE? click here!
CWE Most Important Hardware Weaknesses
CWE Top 25 Most Dangerous Weaknesses
Home > CWE List > CWE- Individual Dictionary Definition (4.14)                                                                                                   ID Lookup: [                    ] [Go]
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  • Home
  • About ▼
    About New to CWE User Stories History Documents FAQs Glossary Compatibility
  • CWE List ▼
    Latest Version Downloads Reports Visualizations Archive
  • Mapping ▼
    Root Cause Mapping Guidance Root Cause Mapping Quick Tips Root Cause Mapping Examples
  • Top-N Lists ▼
    Top 25 Software Top Hardware Top 10 KEV Weaknesses
  • Community ▼
    Community Working Groups & Special Interest Groups Board Board Meeting Minutes CWE Discussion List CWE Discussion Archives Contribute Weakness Content to CWE
  • News ▼
    Current News X-Twitter ● Mastodon ● LinkedIn ● YouTube YouTube Podcast Out of Bounds Read Podcast Medium Medium News Archive
  • Search

 
 CWE Glossary Definition                  x
 
 
 CWE-385: Covert Timing Channel
 
 Weakness ID: 385
 Vulnerability Mapping: ALLOWEDThis CWE ID may be used to map to real-world vulnerabilities
 Abstraction: BaseBase - a weakness that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level
 weaknesses typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.
 View customized information:
 Conceptual For users who are interested in more notional aspects of a weakness. Example: educators, technical writers, and project/program managers. Operational For users who are concerned with the
 practical application and details about the nature of a weakness and how to prevent it from happening. Example: tool developers, security researchers, pen-testers, incident response analysts. Mapping
 Friendly For users who are mapping an issue to CWE/CAPEC IDs, i.e., finding the most appropriate CWE for a specific issue (e.g., a CVE record). Example: tool developers, security researchers. 
 Complete For users who wish to see all available information for the CWE/CAPEC entry. Custom For users who want to customize what details are displayed.
 ×

 Edit Custom Filter

 Conceptual Operational Mapping Friendly Select All
 
 Reset Clear Submit Cancel
 + Description
 Covert timing channels convey information by modulating some aspect of system behavior over time, so that the program receiving the information can observe system behavior and infer protected
 information.
 + Extended Description
 
 In some instances, knowing when data is transmitted between parties can provide a malicious user with privileged information. Also, externally monitoring the timing of operations can potentially
 reveal sensitive data. For example, a cryptographic operation can expose its internal state if the time it takes to perform the operation varies, based on the state.

 Covert channels are frequently classified as either storage or timing channels. Some examples of covert timing channels are the system's paging rate, the time a certain transaction requires to
 execute, and the time it takes to gain access to a shared bus.

 + Relationships
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Research Concepts" (CWE-1000)
     Nature                                                                                                                                                                             Type                                                                                                                                                                           ID       Name
 ChildOf                                                                               ClassClass - a weakness that is described in a very abstract fashion, typically independent of any specific language or technology. More specific than a Pillar Weakness, but more general than a Base                                                                        514     Covert
                                                                                                                    Weakness. Class level weaknesses typically describe issues in terms of 1 or 2 of the following dimensions: behavior, property, and resource.                                                                                                             Channel
 CanFollow                                                                                 BaseBase - a weakness that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level weaknesses                                                                           208     Observable
                                                                                                                          typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                  Timing
                                                                                                                                                                                                                                                                                                                                                                             Discrepancy
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Software Development" (CWE-699)
     Nature                                                       Type                                                     ID                                   Name
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 417     Communication Channel Errors
 + Modes Of Introduction
 Section HelpThe different Modes of Introduction provide information about how and when this weakness may be introduced. The Phase identifies a point in the life cycle at which introduction may occur,
 while the Note provides a typical scenario related to introduction during the given phase.
          Phase                                                                                             Note
 Architecture and Design
 Implementation
 + Applicable Platforms
 Section HelpThis listing shows possible areas for which the given weakness could appear. These may be for specific named Languages, Operating Systems, Architectures, Paradigms, Technologies, or a
 class of such platforms. The platform is listed along with how frequently the given weakness appears for that instance.

 Languages

 Class: Not Language-Specific (Undetermined Prevalence)

 + Common Consequences
 Section HelpThis table specifies different individual consequences associated with the weakness. The Scope identifies the application security area that is violated, while the Impact describes the
 negative technical impact that arises if an adversary succeeds in exploiting this weakness. The Likelihood provides information about how likely the specific consequence is expected to be seen
 relative to the other consequences in the list. For example, there may be high likelihood that a weakness will be exploited to achieve a certain impact, but a low likelihood that it will be exploited
 to achieve a different impact.
       Scope                                                                                     Impact                                                                                 Likelihood
 Confidentiality    Technical Impact: Read Application Data; Other
 Other
                    Information exposure.
 + Likelihood Of Exploit
 Medium
 + Demonstrative Examples
 
 Example 1

 In this example, the attacker observes how long an authentication takes when the user types in the correct password.

 When the attacker tries their own values, they can first try strings of various length. When they find a string of the right length, the computation will take a bit longer, because the for loop will
 run at least once. Additionally, with this code, the attacker can possibly learn one character of the password at a time, because when they guess the first character right, the computation will take
 longer than a wrong guesses. Such an attack can break even the most sophisticated password with a few hundred guesses.

 (bad code)
 Example Language: Python 
 def validate_password(actual_pw, typed_pw):
 if len(actual_pw) <> len(typed_pw):
 return 0

 for i in len(actual_pw):
 if actual_pw[i] <> typed_pw[i]:
 return 0

 return 1

 Note that in this example, the actual password must be handled in constant time as far as the attacker is concerned, even if the actual password is of an unusual length. This is one reason why it is
 good to use an algorithm that, among other things, stores a seeded cryptographic one-way hash of the password, then compare the hashes, which will always be of the same length.

 + Potential Mitigations
 Phase: Architecture and Design

 Whenever possible, specify implementation strategies that do not introduce time variances in operations.
 Phase: Implementation

 Often one can artificially manipulate the time which operations take or -- when operations occur -- can remove information from the attacker.
 Phase: Implementation

 It is reasonable to add artificial or random delays so that the amount of CPU time consumed is independent of the action being taken by the application.
 + Memberships
 Section HelpThis MemberOf Relationships table shows additional CWE Categories and Views that reference this weakness as a member. This information is often useful in understanding where a weakness
 fits within the context of external information sources.
     Nature                                                       Type                                                     ID                                   Name
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 968     SFP Secondary Cluster: Covert Channel
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 1415    Comprehensive Categorization: Resource Control
 + Vulnerability Mapping Notes
 Usage: ALLOWED

 (this CWE ID could be used to map to real-world vulnerabilities)
 Reason: Acceptable-Use

 Rationale:

 This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.
 Comments:

 Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred
 level of abstraction.
 + Notes
 
 Maintenance

 As of CWE 4.9, members of the CWE Hardware SIG are working to improve CWE's coverage of transient execution weaknesses, which include issues related to Spectre, Meltdown, and other attacks that
 create or exploit covert channels. As a result of that work, this entry might change in CWE 4.10.
 + Taxonomy Mappings
       Mapped Taxonomy Name          Node ID              Fit                                                                Mapped Node Name
 Landwehr                                                              Timing
 CLASP                                                                 Covert Timing Channel
 + Related Attack Patterns
    CAPEC-ID                                                                                     Attack Pattern Name
 CAPEC-462       Cross-Domain Search Timing
 + References
 [REF-18] Secure Software, Inc.. "The CLASP Application Security Process". 2005. <https://cwe.mitre.org/documents/sources/TheCLASPApplicationSecurityProcess.pdf>.
 + Content History
                                                                                            + Submissions
                  Submission Date                                                      Submitter                                                               Organization
 2006-07-19                                        Landwehr
 (CWE Draft 3, 2006-07-19)

                                                                                           + Modifications
                 Modification Date                                                      Modifier                                                               Organization
 2008-07-01                                        Eric Dalci                                                                         Cigital
                                                   updated Time_of_Introduction
 2008-09-08                                        CWE Content Team                                                                   MITRE
                                                   updated Common_Consequences, Relationships, Other_Notes, Taxonomy_Mappings
 2008-10-14                                        CWE Content Team                                                                   MITRE
                                                   updated Description
 2009-07-27                                        CWE Content Team                                                                   MITRE
                                                   updated Description, Other_Notes, Potential_Mitigations
 2010-09-27                                        CWE Content Team                                                                   MITRE
                                                   updated Common_Consequences, Description
 2011-03-29                                        CWE Content Team                                                                   MITRE
                                                   updated Description
 2011-06-01                                        CWE Content Team                                                                   MITRE
                                                   updated Common_Consequences
 2012-05-11                                        CWE Content Team                                                                   MITRE
                                                   updated Related_Attack_Patterns, Relationships
 2014-07-30                                        CWE Content Team                                                                   MITRE
                                                   updated Relationships
 2017-11-08                                        CWE Content Team                                                                   MITRE
                                                   updated Applicable_Platforms, Demonstrative_Examples
 2020-02-24                                        CWE Content Team                                                                   MITRE
                                                   updated References, Relationships
 2022-10-13                                        CWE Content Team                                                                   MITRE
                                                   updated Maintenance_Notes
 2023-04-27                                        CWE Content Team                                                                   MITRE
                                                   updated Relationships
 2023-06-29                                        CWE Content Team                                                                   MITRE
                                                   updated Mapping_Notes
 2024-02-29                                        CWE Content Team                                                                   MITRE
 (CWE 4.14, 2024-02-29)                            updated Demonstrative_Examples
 More information is available — Please edit the custom filter or select a different filter.
Page Last Updated: February 29, 2024
 
      Site Map | Terms of Use | Manage Cookies | Cookie Notice | Privacy Policy | Contact Us | CWE X-Twitter CWE Mastodon CWE on LinkedIn CWE YouTube channel CWE Out-of-Bounds-Read Podcast CWE
      Blog on Medium blog

MITRE Use of the Common Weakness Enumeration (CWE™) and the associated references from this website are subject to the Terms of Use. CWE is sponsored by the U.S. Department of Homeland         HSSEDI
      Security (DHS) Cybersecurity and Infrastructure Security Agency (CISA) and managed by the Homeland Security Systems Engineering and Development Institute (HSSEDI) which is operated by
      The MITRE Corporation (MITRE). Copyright © 2006–2024, The MITRE Corporation. CWE, CWSS, CWRAF, and the CWE logo are trademarks of The MITRE Corporation.

