CWE

Common Weakness Enumeration

A community-developed list of SW & HW weaknesses that can become vulnerabilities

New to CWE? click here!
CWE Most Important Hardware Weaknesses
CWE Top 25 Most Dangerous Weaknesses
Home > CWE List > CWE- Individual Dictionary Definition (4.14)                                                                                                   ID Lookup: [                    ] [Go]
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  • Home
  • About ▼
    About New to CWE User Stories History Documents FAQs Glossary Compatibility
  • CWE List ▼
    Latest Version Downloads Reports Visualizations Archive
  • Mapping ▼
    Root Cause Mapping Guidance Root Cause Mapping Quick Tips Root Cause Mapping Examples
  • Top-N Lists ▼
    Top 25 Software Top Hardware Top 10 KEV Weaknesses
  • Community ▼
    Community Working Groups & Special Interest Groups Board Board Meeting Minutes CWE Discussion List CWE Discussion Archives Contribute Weakness Content to CWE
  • News ▼
    Current News X-Twitter ● Mastodon ● LinkedIn ● YouTube YouTube Podcast Out of Bounds Read Podcast Medium Medium News Archive
  • Search

 
 CWE Glossary Definition                  x
 
 
 CWE-179: Incorrect Behavior Order: Early Validation
 
 Weakness ID: 179
 Vulnerability Mapping: ALLOWEDThis CWE ID may be used to map to real-world vulnerabilities
 Abstraction: BaseBase - a weakness that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level
 weaknesses typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.
 View customized information:
 Conceptual For users who are interested in more notional aspects of a weakness. Example: educators, technical writers, and project/program managers. Operational For users who are concerned with the
 practical application and details about the nature of a weakness and how to prevent it from happening. Example: tool developers, security researchers, pen-testers, incident response analysts. Mapping
 Friendly For users who are mapping an issue to CWE/CAPEC IDs, i.e., finding the most appropriate CWE for a specific issue (e.g., a CVE record). Example: tool developers, security researchers. 
 Complete For users who wish to see all available information for the CWE/CAPEC entry. Custom For users who want to customize what details are displayed.
 ×

 Edit Custom Filter

 Conceptual Operational Mapping Friendly Select All
 
 Reset Clear Submit Cancel
 + Description
 The product validates input before applying protection mechanisms that modify the input, which could allow an attacker to bypass the validation via dangerous inputs that only arise after the
 modification.
 + Extended Description
 Product needs to validate data at the proper time, after data has been canonicalized and cleansed. Early validation is susceptible to various manipulations that result in dangerous inputs that are
 produced by canonicalization and cleansing.
 + Relationships
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Research Concepts" (CWE-1000)
     Nature                                                                                                                                                                             Type                                                                                                                                                                           ID        Name
 ChildOf                                                                               ClassClass - a weakness that is described in a very abstract fashion, typically independent of any specific language or technology. More specific than a Pillar Weakness, but more general than a Base                                                                        20      Improper
                                                                                                                    Weakness. Class level weaknesses typically describe issues in terms of 1 or 2 of the following dimensions: behavior, property, and resource.                                                                                                             Input
                                                                                                                                                                                                                                                                                                                                                                             Validation
 ChildOf                                                                               ClassClass - a weakness that is described in a very abstract fashion, typically independent of any specific language or technology. More specific than a Pillar Weakness, but more general than a Base                                                                        696     Incorrect
                                                                                                                    Weakness. Class level weaknesses typically describe issues in terms of 1 or 2 of the following dimensions: behavior, property, and resource.                                                                                                             Behavior
                                                                                                                                                                                                                                                                                                                                                                             Order
 ParentOf                                                                              VariantVariant - a weakness that is linked to a certain type of product, typically involving a specific language or technology. More specific than a Base weakness. Variant level weaknesses typically                                                                        180     Incorrect
                                                                                                                               describe issues in terms of 3 to 5 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                       Behavior
                                                                                                                                                                                                                                                                                                                                                                             Order:
                                                                                                                                                                                                                                                                                                                                                                             Validate
                                                                                                                                                                                                                                                                                                                                                                             Before
                                                                                                                                                                                                                                                                                                                                                                             Canonicalize
 ParentOf                                                                              VariantVariant - a weakness that is linked to a certain type of product, typically involving a specific language or technology. More specific than a Base weakness. Variant level weaknesses typically                                                                        181     Incorrect
                                                                                                                               describe issues in terms of 3 to 5 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                       Behavior
                                                                                                                                                                                                                                                                                                                                                                             Order:
                                                                                                                                                                                                                                                                                                                                                                             Validate
                                                                                                                                                                                                                                                                                                                                                                             Before
                                                                                                                                                                                                                                                                                                                                                                             Filter
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Software Development" (CWE-699)
     Nature                                                       Type                                                     ID                                   Name
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 1215    Data Validation Issues
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 438     Behavioral Problems
 + Modes Of Introduction
 Section HelpThe different Modes of Introduction provide information about how and when this weakness may be introduced. The Phase identifies a point in the life cycle at which introduction may occur,
 while the Note provides a typical scenario related to introduction during the given phase.
     Phase                                                                                              Note
 Implementation Since early validation errors usually arise from improperly implemented defensive mechanisms, it is likely that these will be introduced more frequently as secure programming
                becomes implemented more widely.
 + Applicable Platforms
 Section HelpThis listing shows possible areas for which the given weakness could appear. These may be for specific named Languages, Operating Systems, Architectures, Paradigms, Technologies, or a
 class of such platforms. The platform is listed along with how frequently the given weakness appears for that instance.

 Languages

 Class: Not Language-Specific (Undetermined Prevalence)

 + Common Consequences
 Section HelpThis table specifies different individual consequences associated with the weakness. The Scope identifies the application security area that is violated, while the Impact describes the
 negative technical impact that arises if an adversary succeeds in exploiting this weakness. The Likelihood provides information about how likely the specific consequence is expected to be seen
 relative to the other consequences in the list. For example, there may be high likelihood that a weakness will be exploited to achieve a certain impact, but a low likelihood that it will be exploited
 to achieve a different impact.
       Scope                                                                                     Impact                                                                                 Likelihood
                    Technical Impact: Bypass Protection Mechanism; Execute Unauthorized Code or Commands
 Access Control
 Integrity          An attacker could include dangerous input that bypasses validation protection mechanisms which can be used to launch various attacks including injection attacks,
                    execute arbitrary code or cause other unintended behavior.
 + Demonstrative Examples
 
 Example 1

 The following code attempts to validate a given input path by checking it against an allowlist and then return the canonical path. In this specific case, the path is considered valid if it starts
 with the string "/safe_dir/".

 (bad code)
 Example Language: Java 
 String path = getInputPath();
 if (path.startsWith("/safe_dir/"))
 {
 File f = new File(path);
 return f.getCanonicalPath();
 }

 The problem with the above code is that the validation step occurs before canonicalization occurs. An attacker could provide an input path of "/safe_dir/../" that would pass the validation step.
 However, the canonicalization process sees the double dot as a traversal to the parent directory and hence when canonicized the path would become just "/".

 To avoid this problem, validation should occur after canonicalization takes place. In this case canonicalization occurs during the initialization of the File object. The code below fixes the issue.

 (good code)
 Example Language: Java 
 String path = getInputPath();
 File f = new File(path);
 if (f.getCanonicalPath().startsWith("/safe_dir/"))
 {
 return f.getCanonicalPath();
 }


 Example 2

 This script creates a subdirectory within a user directory and sets the user as the owner.

 (bad code)
 Example Language: PHP 
 function createDir($userName,$dirName){
 $userDir = '/users/'. $userName;
 if(strpos($dirName,'..') !== false){
 echo 'Directory name contains invalid sequence';
 return;
 }
 //filter out '~' because other scripts identify user directories by this prefix
 $dirName = str_replace('~','',$dirName);
 $newDir = $userDir . $dirName;
 mkdir($newDir, 0700);
 chown($newDir,$userName);
 }

 While the script attempts to screen for '..' sequences, an attacker can submit a directory path including ".~.", which will then become ".." after the filtering step. This allows a Path Traversal (
 CWE-21) attack to occur.

 + Observed Examples
        Reference                                                                                        Description
 CVE-2002-0433           Product allows remote attackers to view restricted files via an HTTP request containing a "*" (wildcard or asterisk) character.
 CVE-2003-0332           Product modifies the first two letters of a filename extension after performing a security check, which allows remote attackers to bypass authentication via a filename
                         with a .ats extension instead of a .hts extension.
 CVE-2002-0802           Database consumes an extra character when processing a character that cannot be converted, which could remove an escape character from the query and make the application
                         subject to SQL injection attacks.
 CVE-2000-0191           Overlaps "fakechild/../realchild"
 CVE-2004-2363           Product checks URI for "<" and other literal characters, but does it before hex decoding the URI, so "%3E" and other sequences are allowed.
 CVE-2002-0934           Directory traversal vulnerability allows remote attackers to read or modify arbitrary files via invalid characters between two . (dot) characters, which are filtered and
                         result in a ".." sequence.
 CVE-2003-0282           Directory traversal vulnerability allows attackers to overwrite arbitrary files via invalid characters between two . (dot) characters, which are filtered and result in a
                         ".." sequence.
 + Potential Mitigations
 Phase: Implementation

 Strategy: Input Validation

 Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input
 twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked.
 + Memberships
 Section HelpThis MemberOf Relationships table shows additional CWE Categories and Views that reference this weakness as a member. This information is often useful in understanding where a weakness
 fits within the context of external information sources.
     Nature                                                                                                  Type                                                                                               ID         Name
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            722     OWASP Top Ten
                                                                                                                                                                                                                      2004 Category
                                                                                                                                                                                                                      A1 -
                                                                                                                                                                                                                      Unvalidated
                                                                                                                                                                                                                      Input
 MemberOf        ViewView - a subset of CWE entries that provides a way of examining CWE content. The two main view structures are Slices (flat lists) and Graphs (containing relationships between entries). 884     CWE
                                                                                                                                                                                                                      Cross-section
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            992     SFP Secondary
                                                                                                                                                                                                                      Cluster: Faulty
                                                                                                                                                                                                                      Input
                                                                                                                                                                                                                      Transformation
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            1410    Comprehensive
                                                                                                                                                                                                                      Categorization:
                                                                                                                                                                                                                      Insufficient
                                                                                                                                                                                                                      Control Flow
                                                                                                                                                                                                                      Management
 + Vulnerability Mapping Notes
 Usage: ALLOWED

 (this CWE ID could be used to map to real-world vulnerabilities)
 Reason: Acceptable-Use

 Rationale:

 This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.
 Comments:

 Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred
 level of abstraction.
 + Notes
 
 Research Gap

 These errors are mostly reported in path traversal vulnerabilities, but the concept applies whenever validation occurs.
 + Taxonomy Mappings
       Mapped Taxonomy Name          Node ID             Fit                                                                 Mapped Node Name
 PLOVER                                                               Early Validation Errors
 + Related Attack Patterns
    CAPEC-ID                                                                                     Attack Pattern Name
 CAPEC-3         Using Leading 'Ghost' Character Sequences to Bypass Input Filters
 CAPEC-43        Exploiting Multiple Input Interpretation Layers
 CAPEC-71        Using Unicode Encoding to Bypass Validation Logic
 + References
 [REF-62] Mark Dowd, John McDonald and Justin Schuh. "The Art of Software Security Assessment". Chapter 8, "Escaping Metacharacters", Page 439. 1st Edition. Addison Wesley. 2006.
 + Content History
                                                                                           + Submissions
             Submission Date                                                    Submitter                                                                   Organization
 2006-07-19                               PLOVER
 (CWE Draft 3, 2006-07-19)

                                                                                          + Modifications
            Modification Date                                                    Modifier                                                                   Organization
 2008-07-01                               Eric Dalci                                                                             Cigital
                                          updated Potential_Mitigations, Time_of_Introduction
 2008-08-15                                                                                                                      Veracode
                                          Suggested OWASP Top Ten 2004 mapping
 2008-09-08                               CWE Content Team                                                                       MITRE
                                          updated Modes_of_Introduction, Relationships, Taxonomy_Mappings
 2008-10-14                               CWE Content Team                                                                       MITRE
                                          updated Description
 2009-03-10                               CWE Content Team                                                                       MITRE
                                          updated Relationships
 2010-06-21                               CWE Content Team                                                                       MITRE
                                          updated Research_Gaps
 2011-03-29                               CWE Content Team                                                                       MITRE
                                          updated Potential_Mitigations
 2011-06-01                               CWE Content Team                                                                       MITRE
                                          updated Common_Consequences
 2012-05-11                               CWE Content Team                                                                       MITRE
                                          updated Common_Consequences, Demonstrative_Examples, Observed_Examples, References, Relationships
 2014-07-30                               CWE Content Team                                                                       MITRE
                                          updated Relationships
 2017-01-19                               CWE Content Team                                                                       MITRE
                                          updated Relationships
 2017-11-08                               CWE Content Team                                                                       MITRE
                                          updated Applicable_Platforms
 2020-02-24                               CWE Content Team                                                                       MITRE
                                          updated Relationships
 2020-06-25                               CWE Content Team                                                                       MITRE
                                          updated Demonstrative_Examples, Potential_Mitigations, Relationships
 2023-01-31                               CWE Content Team                                                                       MITRE
                                          updated Description
 2023-04-27                               CWE Content Team                                                                       MITRE
                                          updated Relationships
 2023-06-29                               CWE Content Team                                                                       MITRE
                                          updated Mapping_Notes
                                                                                       + Previous Entry Names
               Change Date                                                                                   Previous Entry Name
 2008-04-11                               Early Validation Errors
 More information is available — Please edit the custom filter or select a different filter.
Page Last Updated: February 29, 2024
 
      Site Map | Terms of Use | Manage Cookies | Cookie Notice | Privacy Policy | Contact Us | CWE X-Twitter CWE Mastodon CWE on LinkedIn CWE YouTube channel CWE Out-of-Bounds-Read Podcast CWE
      Blog on Medium blog

MITRE Use of the Common Weakness Enumeration (CWE™) and the associated references from this website are subject to the Terms of Use. CWE is sponsored by the U.S. Department of Homeland         HSSEDI
      Security (DHS) Cybersecurity and Infrastructure Security Agency (CISA) and managed by the Homeland Security Systems Engineering and Development Institute (HSSEDI) which is operated by
      The MITRE Corporation (MITRE). Copyright © 2006–2024, The MITRE Corporation. CWE, CWSS, CWRAF, and the CWE logo are trademarks of The MITRE Corporation.

