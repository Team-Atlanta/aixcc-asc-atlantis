CWE

Common Weakness Enumeration

A community-developed list of SW & HW weaknesses that can become vulnerabilities

New to CWE? click here!
CWE Most Important Hardware Weaknesses
CWE Top 25 Most Dangerous Weaknesses
Home > CWE List > CWE- Individual Dictionary Definition (4.14)                                                                                                   ID Lookup: [                    ] [Go]
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  • Home
  • About ▼
    About New to CWE User Stories History Documents FAQs Glossary Compatibility
  • CWE List ▼
    Latest Version Downloads Reports Visualizations Archive
  • Mapping ▼
    Root Cause Mapping Guidance Root Cause Mapping Quick Tips Root Cause Mapping Examples
  • Top-N Lists ▼
    Top 25 Software Top Hardware Top 10 KEV Weaknesses
  • Community ▼
    Community Working Groups & Special Interest Groups Board Board Meeting Minutes CWE Discussion List CWE Discussion Archives Contribute Weakness Content to CWE
  • News ▼
    Current News X-Twitter ● Mastodon ● LinkedIn ● YouTube YouTube Podcast Out of Bounds Read Podcast Medium Medium News Archive
  • Search

 
 CWE Glossary Definition                  x
 
 
 CWE-360: Trust of System Event Data
 
 Weakness ID: 360
 Vulnerability Mapping: ALLOWEDThis CWE ID may be used to map to real-world vulnerabilities
 Abstraction: BaseBase - a weakness that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level
 weaknesses typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.
 View customized information:
 Conceptual For users who are interested in more notional aspects of a weakness. Example: educators, technical writers, and project/program managers. Operational For users who are concerned with the
 practical application and details about the nature of a weakness and how to prevent it from happening. Example: tool developers, security researchers, pen-testers, incident response analysts. Mapping
 Friendly For users who are mapping an issue to CWE/CAPEC IDs, i.e., finding the most appropriate CWE for a specific issue (e.g., a CVE record). Example: tool developers, security researchers. 
 Complete For users who wish to see all available information for the CWE/CAPEC entry. Custom For users who want to customize what details are displayed.
 ×

 Edit Custom Filter

 Conceptual Operational Mapping Friendly Select All
 
 Reset Clear Submit Cancel
 + Description
 Security based on event locations are insecure and can be spoofed.
 + Extended Description
 Events are a messaging system which may provide control data to programs listening for events. Events often do not have any type of authentication framework to allow them to be verified from a
 trusted source. Any application, in Windows, on a given desktop can send a message to any window on the same desktop. There is no authentication framework for these messages. Therefore, any message
 can be used to manipulate any process on the desktop if the process does not check the validity and safeness of those messages.
 + Relationships
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Research Concepts" (CWE-1000)
     Nature                                                                                                                                                                             Type                                                                                                                                                                           ID        Name
 ChildOf                                                                               ClassClass - a weakness that is described in a very abstract fashion, typically independent of any specific language or technology. More specific than a Pillar Weakness, but more general than a Base                                                                        345     Insufficient
                                                                                                                    Weakness. Class level weaknesses typically describe issues in terms of 1 or 2 of the following dimensions: behavior, property, and resource.                                                                                                             Verification
                                                                                                                                                                                                                                                                                                                                                                             of Data
                                                                                                                                                                                                                                                                                                                                                                             Authenticity
 ParentOf                                                                              VariantVariant - a weakness that is linked to a certain type of product, typically involving a specific language or technology. More specific than a Base weakness. Variant level weaknesses typically                                                                        422     Unprotected
                                                                                                                               describe issues in terms of 3 to 5 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                       Windows
                                                                                                                                                                                                                                                                                                                                                                             Messaging
                                                                                                                                                                                                                                                                                                                                                                             Channel
                                                                                                                                                                                                                                                                                                                                                                             ('Shatter')
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Software Development" (CWE-699)
     Nature                                                       Type                                                     ID                                   Name
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 1006    Bad Coding Practices
 + Modes Of Introduction
 Section HelpThe different Modes of Introduction provide information about how and when this weakness may be introduced. The Phase identifies a point in the life cycle at which introduction may occur,
 while the Note provides a typical scenario related to introduction during the given phase.
          Phase                                                                                             Note
 Architecture and Design
 Implementation
 + Applicable Platforms
 Section HelpThis listing shows possible areas for which the given weakness could appear. These may be for specific named Languages, Operating Systems, Architectures, Paradigms, Technologies, or a
 class of such platforms. The platform is listed along with how frequently the given weakness appears for that instance.

 Languages

 Class: Not Language-Specific (Undetermined Prevalence)

 + Common Consequences
 Section HelpThis table specifies different individual consequences associated with the weakness. The Scope identifies the application security area that is violated, while the Impact describes the
 negative technical impact that arises if an adversary succeeds in exploiting this weakness. The Likelihood provides information about how likely the specific consequence is expected to be seen
 relative to the other consequences in the list. For example, there may be high likelihood that a weakness will be exploited to achieve a certain impact, but a low likelihood that it will be exploited
 to achieve a different impact.
       Scope                                                                                     Impact                                                                                 Likelihood
 Integrity          Technical Impact: Gain Privileges or Assume Identity; Execute Unauthorized Code or Commands
 Confidentiality
 Availability       If one trusts the system-event information and executes commands based on it, one could potentially take actions based on a spoofed identity.
 Access Control
 + Likelihood Of Exploit
 High
 + Demonstrative Examples
 
 Example 1

 This example code prints out secret information when an authorized user activates a button:

 (bad code)
 Example Language: Java 
 public void actionPerformed(ActionEvent e) {
 if (e.getSource() == button) {
 System.out.println("print out secret information");
 }
 }

 This code does not attempt to prevent unauthorized users from activating the button. Even if the button is rendered non-functional to unauthorized users in the application UI, an attacker can easily
 send a false button press event to the application window and expose the secret information.

 + Observed Examples
        Reference                                                                                        Description
 CVE-2004-0213           Attacker uses Shatter attack to bypass GUI-enforced protection for CVE-2003-0908.
 + Potential Mitigations
 Phase: Architecture and Design

 Never trust or rely any of the information in an Event for security.
 + Memberships
 Section HelpThis MemberOf Relationships table shows additional CWE Categories and Views that reference this weakness as a member. This information is often useful in understanding where a weakness
 fits within the context of external information sources.
     Nature                                                       Type                                                     ID                                   Name
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 949     SFP Secondary Cluster: Faulty Endpoint Authentication
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 1411    Comprehensive Categorization: Insufficient Verification of Data
                                                                                                                                 Authenticity
 + Vulnerability Mapping Notes
 Usage: ALLOWED

 (this CWE ID could be used to map to real-world vulnerabilities)
 Reason: Acceptable-Use

 Rationale:

 This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.
 Comments:

 Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred
 level of abstraction.
 + Taxonomy Mappings
       Mapped Taxonomy Name          Node ID           Fit                                                                 Mapped Node Name
 CLASP                                                            Trust of system event data
 Software Fault Patterns          SFP29                           Faulty endpoint authentication
 + References
 [REF-18] Secure Software, Inc.. "The CLASP Application Security Process". 2005. <https://cwe.mitre.org/documents/sources/TheCLASPApplicationSecurityProcess.pdf>.
 + Content History
                                                                                            + Submissions
                  Submission Date                                                      Submitter                                                               Organization
 2006-07-19                                        CLASP
 (CWE Draft 3, 2006-07-19)

                                                                                           + Modifications
                 Modification Date                                                      Modifier                                                               Organization
 2008-07-01                                        Eric Dalci                                                                         Cigital
                                                   updated Time_of_Introduction
 2008-09-08                                        CWE Content Team                                                                   MITRE
                                                   updated Common_Consequences, Relationships, Other_Notes, Taxonomy_Mappings
 2010-02-16                                        CWE Content Team                                                                   MITRE
                                                   updated Description, Other_Notes
 2011-06-01                                        CWE Content Team                                                                   MITRE
                                                   updated Common_Consequences
 2012-05-11                                        CWE Content Team                                                                   MITRE
                                                   updated Relationships
 2012-10-30                                        CWE Content Team                                                                   MITRE
                                                   updated Demonstrative_Examples
 2013-02-21                                        CWE Content Team                                                                   MITRE
                                                   updated Potential_Mitigations
 2014-07-30                                        CWE Content Team                                                                   MITRE
                                                   updated Relationships, Taxonomy_Mappings
 2017-11-08                                        CWE Content Team                                                                   MITRE
                                                   updated Applicable_Platforms
 2020-02-24                                        CWE Content Team                                                                   MITRE
                                                   updated References, Relationships
 2023-04-27                                        CWE Content Team                                                                   MITRE
                                                   updated Relationships
 2023-06-29                                        CWE Content Team                                                                   MITRE
                                                   updated Mapping_Notes
 2023-10-26                                        CWE Content Team                                                                   MITRE
                                                   updated Observed_Examples
 More information is available — Please edit the custom filter or select a different filter.
Page Last Updated: February 29, 2024
 
      Site Map | Terms of Use | Manage Cookies | Cookie Notice | Privacy Policy | Contact Us | CWE X-Twitter CWE Mastodon CWE on LinkedIn CWE YouTube channel CWE Out-of-Bounds-Read Podcast CWE
      Blog on Medium blog

MITRE Use of the Common Weakness Enumeration (CWE™) and the associated references from this website are subject to the Terms of Use. CWE is sponsored by the U.S. Department of Homeland         HSSEDI
      Security (DHS) Cybersecurity and Infrastructure Security Agency (CISA) and managed by the Homeland Security Systems Engineering and Development Institute (HSSEDI) which is operated by
      The MITRE Corporation (MITRE). Copyright © 2006–2024, The MITRE Corporation. CWE, CWSS, CWRAF, and the CWE logo are trademarks of The MITRE Corporation.

