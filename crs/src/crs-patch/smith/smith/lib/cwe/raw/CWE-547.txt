CWE

Common Weakness Enumeration

A community-developed list of SW & HW weaknesses that can become vulnerabilities

New to CWE? click here!
CWE Most Important Hardware Weaknesses
CWE Top 25 Most Dangerous Weaknesses
Home > CWE List > CWE- Individual Dictionary Definition (4.14)                                                                                                   ID Lookup: [                    ] [Go]
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  • Home
  • About ▼
    About New to CWE User Stories History Documents FAQs Glossary Compatibility
  • CWE List ▼
    Latest Version Downloads Reports Visualizations Archive
  • Mapping ▼
    Root Cause Mapping Guidance Root Cause Mapping Quick Tips Root Cause Mapping Examples
  • Top-N Lists ▼
    Top 25 Software Top Hardware Top 10 KEV Weaknesses
  • Community ▼
    Community Working Groups & Special Interest Groups Board Board Meeting Minutes CWE Discussion List CWE Discussion Archives Contribute Weakness Content to CWE
  • News ▼
    Current News X-Twitter ● Mastodon ● LinkedIn ● YouTube YouTube Podcast Out of Bounds Read Podcast Medium Medium News Archive
  • Search

 
 CWE Glossary Definition                  x
 
 
 CWE-547: Use of Hard-coded, Security-relevant Constants
 
 Weakness ID: 547
 Vulnerability Mapping: ALLOWEDThis CWE ID may be used to map to real-world vulnerabilities
 Abstraction: BaseBase - a weakness that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level
 weaknesses typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.
 View customized information:
 Conceptual For users who are interested in more notional aspects of a weakness. Example: educators, technical writers, and project/program managers. Operational For users who are concerned with the
 practical application and details about the nature of a weakness and how to prevent it from happening. Example: tool developers, security researchers, pen-testers, incident response analysts. Mapping
 Friendly For users who are mapping an issue to CWE/CAPEC IDs, i.e., finding the most appropriate CWE for a specific issue (e.g., a CVE record). Example: tool developers, security researchers. 
 Complete For users who wish to see all available information for the CWE/CAPEC entry. Custom For users who want to customize what details are displayed.
 ×

 Edit Custom Filter

 Conceptual Operational Mapping Friendly Select All
 
 Reset Clear Submit Cancel
 + Description
 The product uses hard-coded constants instead of symbolic names for security-critical values, which increases the likelihood of mistakes during code maintenance or security policy change.
 + Extended Description
 If the developer does not find all occurrences of the hard-coded constants, an incorrect policy decision may be made if one of the constants is not changed. Making changes to these values will
 require code changes that may be difficult or impossible once the system is released to the field. In addition, these hard-coded values may become available to attackers if the code is ever
 disclosed.
 + Relationships
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Research Concepts" (CWE-1000)
     Nature                                                                                                                                                                             Type                                                                                                                                                                           ID        Name
 ChildOf                                                                               ClassClass - a weakness that is described in a very abstract fashion, typically independent of any specific language or technology. More specific than a Pillar Weakness, but more general than a Base                                                                        1078    Inappropriate
                                                                                                                    Weakness. Class level weaknesses typically describe issues in terms of 1 or 2 of the following dimensions: behavior, property, and resource.                                                                                                             Source Code
                                                                                                                                                                                                                                                                                                                                                                             Style or
                                                                                                                                                                                                                                                                                                                                                                             Formatting
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Software Development" (CWE-699)
     Nature                                                       Type                                                     ID                                   Name
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 1006    Bad Coding Practices
 + Modes Of Introduction
 Section HelpThe different Modes of Introduction provide information about how and when this weakness may be introduced. The Phase identifies a point in the life cycle at which introduction may occur,
 while the Note provides a typical scenario related to introduction during the given phase.
     Phase                                                                                              Note
 Implementation
 + Common Consequences
 Section HelpThis table specifies different individual consequences associated with the weakness. The Scope identifies the application security area that is violated, while the Impact describes the
 negative technical impact that arises if an adversary succeeds in exploiting this weakness. The Likelihood provides information about how likely the specific consequence is expected to be seen
 relative to the other consequences in the list. For example, there may be high likelihood that a weakness will be exploited to achieve a certain impact, but a low likelihood that it will be exploited
 to achieve a different impact.
       Scope                                                                                     Impact                                                                                 Likelihood
                    Technical Impact: Varies by Context; Quality Degradation
 Other
                    The existence of hardcoded constants could cause unexpected behavior and the introduction of weaknesses during code maintenance or when making changes to the
                    code if all occurrences are not modified. The use of hardcoded constants is an indication of poor quality.
 + Demonstrative Examples
 
 Example 1

 The usage of symbolic names instead of hard-coded constants is preferred.

 The following is an example of using a hard-coded constant instead of a symbolic name.

 (bad code)
 Example Language: C 
 char buffer[1024];
 ...
 fgets(buffer, 1024, stdin);

 If the buffer value needs to be changed, then it has to be altered in more than one place. If the developer forgets or does not find all occurrences, in this example it could lead to a buffer
 overflow.

 (good code)
 Example Language: C 
 enum { MAX_BUFFER_SIZE = 1024 };
 ...
 char buffer[MAX_BUFFER_SIZE];
 ...
 fgets(buffer, MAX_BUFFER_SIZE, stdin);

 In this example the developer will only need to change one value and all references to the buffer size are updated, as a symbolic name is used instead of a hard-coded constant.

 + Potential Mitigations
 Phase: Implementation

 Avoid using hard-coded constants. Configuration files offer a more flexible solution.
 + Weakness Ordinalities
 Ordinality                                                                                       Description
 Indirect   (where the weakness is a quality issue that might indirectly make it easier to introduce security-relevant weaknesses or make them more difficult to detect)
 + Detection Methods
 Automated Static Analysis

 Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without
 having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect "sources" (origins of input) with
 "sinks" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)

 Effectiveness: High

 + Memberships
 Section HelpThis MemberOf Relationships table shows additional CWE Categories and Views that reference this weakness as a member. This information is often useful in understanding where a weakness
 fits within the context of external information sources.
     Nature                                                                                                  Type                                                                                               ID          Name
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            736     CERT C Secure
                                                                                                                                                                                                                      Coding Standard
                                                                                                                                                                                                                      (2008) Chapter 3
                                                                                                                                                                                                                      - Declarations
                                                                                                                                                                                                                      and
                                                                                                                                                                                                                      Initialization
                                                                                                                                                                                                                      (DCL)
 MemberOf        ViewView - a subset of CWE entries that provides a way of examining CWE content. The two main view structures are Slices (flat lists) and Graphs (containing relationships between entries). 884     CWE
                                                                                                                                                                                                                      Cross-section
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            950     SFP Secondary
                                                                                                                                                                                                                      Cluster:
                                                                                                                                                                                                                      Hardcoded
                                                                                                                                                                                                                      Sensitive Data
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            1349    OWASP Top Ten
                                                                                                                                                                                                                      2021 Category
                                                                                                                                                                                                                      A05:2021 -
                                                                                                                                                                                                                      Security
                                                                                                                                                                                                                      Misconfiguration
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            1412    Comprehensive
                                                                                                                                                                                                                      Categorization:
                                                                                                                                                                                                                      Poor Coding
                                                                                                                                                                                                                      Practices
 + Vulnerability Mapping Notes
 Usage: ALLOWED

 (this CWE ID could be used to map to real-world vulnerabilities)
 Reason: Acceptable-Use

 Rationale:

 This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.
 Comments:

 Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred
 level of abstraction.
 + Taxonomy Mappings
       Mapped Taxonomy Name          Node ID      Fit                                                                Mapped Node Name
 CERT C Secure Coding             DCL06-C              Use meaningful symbolic constants to represent literal values in program logic
 + Content History
                                                                                           + Submissions
                 Submission Date                                                                  Submitter                                                              Organization
 2006-07-19                                       Anonymous Tool Vendor (under NDA)
 (CWE Draft 3, 2006-07-19)

                                                                                          + Modifications
                Modification Date                                                                 Modifier                                                               Organization
 2008-07-01                                       Eric Dalci                                                                                                Cigital
                                                  updated Potential_Mitigations, Time_of_Introduction
 2008-09-08                                       CWE Content Team                                                                                          MITRE
                                                  updated Description, Relationships, Taxonomy_Mappings
 2008-11-24                                       CWE Content Team                                                                                          MITRE
                                                  updated Description, Potential_Mitigations, Relationships, Taxonomy_Mappings
 2011-06-01                                       CWE Content Team                                                                                          MITRE
                                                  updated Common_Consequences
 2011-06-27                                       CWE Content Team                                                                                          MITRE
                                                  updated Common_Consequences
 2012-05-11                                       CWE Content Team                                                                                          MITRE
                                                  updated Common_Consequences, Relationships
 2012-10-30                                       CWE Content Team                                                                                          MITRE
                                                  updated Potential_Mitigations
 2014-07-30                                       CWE Content Team                                                                                          MITRE
                                                  updated Relationships
 2017-11-08                                       CWE Content Team                                                                                          MITRE
                                                  updated Demonstrative_Examples, Relationships, Taxonomy_Mappings
 2019-01-03                                       CWE Content Team                                                                                          MITRE
                                                  updated Relationships, Weakness_Ordinalities
 2020-02-24                                       CWE Content Team                                                                                          MITRE
                                                  updated Relationships
 2021-10-28                                       CWE Content Team                                                                                          MITRE
                                                  updated Relationships
 2023-01-31                                       CWE Content Team                                                                                          MITRE
                                                  updated Description
 2023-04-27                                       CWE Content Team                                                                                          MITRE
                                                  updated Detection_Factors, Relationships, Type
 2023-06-29                                       CWE Content Team                                                                                          MITRE
                                                  updated Demonstrative_Examples, Mapping_Notes
 2024-02-29                                       CWE Content Team                                                                                          MITRE
 (CWE 4.14, 2024-02-29)                           updated Demonstrative_Examples
                                                                                       + Previous Entry Names
                   Change Date                                                                                   Previous Entry Name
 2008-04-11                                       Security-relevant Constants
 More information is available — Please edit the custom filter or select a different filter.
Page Last Updated: February 29, 2024
 
      Site Map | Terms of Use | Manage Cookies | Cookie Notice | Privacy Policy | Contact Us | CWE X-Twitter CWE Mastodon CWE on LinkedIn CWE YouTube channel CWE Out-of-Bounds-Read Podcast CWE
      Blog on Medium blog

MITRE Use of the Common Weakness Enumeration (CWE™) and the associated references from this website are subject to the Terms of Use. CWE is sponsored by the U.S. Department of Homeland         HSSEDI
      Security (DHS) Cybersecurity and Infrastructure Security Agency (CISA) and managed by the Homeland Security Systems Engineering and Development Institute (HSSEDI) which is operated by
      The MITRE Corporation (MITRE). Copyright © 2006–2024, The MITRE Corporation. CWE, CWSS, CWRAF, and the CWE logo are trademarks of The MITRE Corporation.

