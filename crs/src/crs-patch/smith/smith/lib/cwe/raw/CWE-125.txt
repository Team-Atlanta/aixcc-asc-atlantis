CWE

Common Weakness Enumeration

A community-developed list of SW & HW weaknesses that can become vulnerabilities

New to CWE? click here!
CWE Most Important Hardware Weaknesses
CWE Top 25 Most Dangerous Weaknesses
Home > CWE List > CWE- Individual Dictionary Definition (4.14)                                                                                                   ID Lookup: [                    ] [Go]
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  • Home
  • About ▼
    About New to CWE User Stories History Documents FAQs Glossary Compatibility
  • CWE List ▼
    Latest Version Downloads Reports Visualizations Archive
  • Mapping ▼
    Root Cause Mapping Guidance Root Cause Mapping Quick Tips Root Cause Mapping Examples
  • Top-N Lists ▼
    Top 25 Software Top Hardware Top 10 KEV Weaknesses
  • Community ▼
    Community Working Groups & Special Interest Groups Board Board Meeting Minutes CWE Discussion List CWE Discussion Archives Contribute Weakness Content to CWE
  • News ▼
    Current News X-Twitter ● Mastodon ● LinkedIn ● YouTube YouTube Podcast Out of Bounds Read Podcast Medium Medium News Archive
  • Search

 
 CWE Glossary Definition                  x
 
 
 CWE-125: Out-of-bounds Read
 
 Weakness ID: 125
 Vulnerability Mapping: ALLOWEDThis CWE ID may be used to map to real-world vulnerabilities
 Abstraction: BaseBase - a weakness that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level
 weaknesses typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.
 View customized information:
 Conceptual For users who are interested in more notional aspects of a weakness. Example: educators, technical writers, and project/program managers. Operational For users who are concerned with the
 practical application and details about the nature of a weakness and how to prevent it from happening. Example: tool developers, security researchers, pen-testers, incident response analysts. Mapping
 Friendly For users who are mapping an issue to CWE/CAPEC IDs, i.e., finding the most appropriate CWE for a specific issue (e.g., a CVE record). Example: tool developers, security researchers. 
 Complete For users who wish to see all available information for the CWE/CAPEC entry. Custom For users who want to customize what details are displayed.
 ×

 Edit Custom Filter

 Conceptual Operational Mapping Friendly Select All
 
 Reset Clear Submit Cancel
 + Description
 The product reads data past the end, or before the beginning, of the intended buffer.
 + Extended Description
 Typically, this can allow attackers to read sensitive information from other memory locations or cause a crash. A crash can occur when the code reads a variable amount of data and assumes that a
 sentinel exists to stop the read operation, such as a NUL in a string. The expected sentinel might not be located in the out-of-bounds memory, causing excessive data to be read, leading to a
 segmentation fault or a buffer overflow. The product may modify an index or perform pointer arithmetic that references a memory location that is outside of the boundaries of the buffer. A subsequent
 read operation then produces undefined or unexpected results.
 + Relationships
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Research Concepts" (CWE-1000)
     Nature                                                                                                                                                                             Type                                                                                                                                                                           ID        Name
 ChildOf                                                                               ClassClass - a weakness that is described in a very abstract fashion, typically independent of any specific language or technology. More specific than a Pillar Weakness, but more general than a Base                                                                        119     Improper
                                                                                                                    Weakness. Class level weaknesses typically describe issues in terms of 1 or 2 of the following dimensions: behavior, property, and resource.                                                                                                             Restriction
                                                                                                                                                                                                                                                                                                                                                                             of Operations
                                                                                                                                                                                                                                                                                                                                                                             within the
                                                                                                                                                                                                                                                                                                                                                                             Bounds of a
                                                                                                                                                                                                                                                                                                                                                                             Memory Buffer
 ParentOf                                                                              VariantVariant - a weakness that is linked to a certain type of product, typically involving a specific language or technology. More specific than a Base weakness. Variant level weaknesses typically                                                                        126     Buffer
                                                                                                                               describe issues in terms of 3 to 5 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                       Over-read
 ParentOf                                                                              VariantVariant - a weakness that is linked to a certain type of product, typically involving a specific language or technology. More specific than a Base weakness. Variant level weaknesses typically                                                                        127     Buffer
                                                                                                                               describe issues in terms of 3 to 5 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                       Under-read
 CanFollow                                                                                 BaseBase - a weakness that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level weaknesses                                                                           822     Untrusted
                                                                                                                          typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                  Pointer
                                                                                                                                                                                                                                                                                                                                                                             Dereference
 CanFollow                                                                                 BaseBase - a weakness that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level weaknesses                                                                           823     Use of
                                                                                                                          typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                  Out-of-range
                                                                                                                                                                                                                                                                                                                                                                             Pointer
                                                                                                                                                                                                                                                                                                                                                                             Offset
 CanFollow                                                                                 BaseBase - a weakness that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level weaknesses                                                                           824     Access of
                                                                                                                          typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                  Uninitialized
                                                                                                                                                                                                                                                                                                                                                                             Pointer
 CanFollow                                                                                 BaseBase - a weakness that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level weaknesses                                                                           825     Expired
                                                                                                                          typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                  Pointer
                                                                                                                                                                                                                                                                                                                                                                             Dereference
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Software Development" (CWE-699)
     Nature                                                       Type                                                     ID                                   Name
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 1218    Memory Buffer Errors
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Weaknesses for Simplified Mapping of Published Vulnerabilities" (CWE-1003)
     Nature                                                                                                                                                                             Type                                                                                                                                                                           ID       Name
 ChildOf                                                                               ClassClass - a weakness that is described in a very abstract fashion, typically independent of any specific language or technology. More specific than a Pillar Weakness, but more general than a Base                                                                        119     Improper
                                                                                                                    Weakness. Class level weaknesses typically describe issues in terms of 1 or 2 of the following dimensions: behavior, property, and resource.                                                                                                             Restriction
                                                                                                                                                                                                                                                                                                                                                                             of
                                                                                                                                                                                                                                                                                                                                                                             Operations
                                                                                                                                                                                                                                                                                                                                                                             within the
                                                                                                                                                                                                                                                                                                                                                                             Bounds of a
                                                                                                                                                                                                                                                                                                                                                                             Memory
                                                                                                                                                                                                                                                                                                                                                                             Buffer
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "CISQ Quality Measures (2020)" (CWE-1305)
     Nature                                                                                                                                                                             Type                                                                                                                                                                           ID       Name
 ChildOf                                                                               ClassClass - a weakness that is described in a very abstract fashion, typically independent of any specific language or technology. More specific than a Pillar Weakness, but more general than a Base                                                                        119     Improper
                                                                                                                    Weakness. Class level weaknesses typically describe issues in terms of 1 or 2 of the following dimensions: behavior, property, and resource.                                                                                                             Restriction
                                                                                                                                                                                                                                                                                                                                                                             of
                                                                                                                                                                                                                                                                                                                                                                             Operations
                                                                                                                                                                                                                                                                                                                                                                             within the
                                                                                                                                                                                                                                                                                                                                                                             Bounds of a
                                                                                                                                                                                                                                                                                                                                                                             Memory
                                                                                                                                                                                                                                                                                                                                                                             Buffer
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "CISQ Data Protection Measures" (CWE-1340)
     Nature                                                                                                                                                                             Type                                                                                                                                                                           ID       Name
 ChildOf                                                                               ClassClass - a weakness that is described in a very abstract fashion, typically independent of any specific language or technology. More specific than a Pillar Weakness, but more general than a Base                                                                        119     Improper
                                                                                                                    Weakness. Class level weaknesses typically describe issues in terms of 1 or 2 of the following dimensions: behavior, property, and resource.                                                                                                             Restriction
                                                                                                                                                                                                                                                                                                                                                                             of
                                                                                                                                                                                                                                                                                                                                                                             Operations
                                                                                                                                                                                                                                                                                                                                                                             within the
                                                                                                                                                                                                                                                                                                                                                                             Bounds of a
                                                                                                                                                                                                                                                                                                                                                                             Memory
                                                                                                                                                                                                                                                                                                                                                                             Buffer
 + Modes Of Introduction
 Section HelpThe different Modes of Introduction provide information about how and when this weakness may be introduced. The Phase identifies a point in the life cycle at which introduction may occur,
 while the Note provides a typical scenario related to introduction during the given phase.
     Phase                                                                                              Note
 Implementation
 + Applicable Platforms
 Section HelpThis listing shows possible areas for which the given weakness could appear. These may be for specific named Languages, Operating Systems, Architectures, Paradigms, Technologies, or a
 class of such platforms. The platform is listed along with how frequently the given weakness appears for that instance.

 Languages

 C (Undetermined Prevalence)

 C++ (Undetermined Prevalence)

 Technologies

 Class: ICS/OT (Often Prevalent)

 + Common Consequences
 Section HelpThis table specifies different individual consequences associated with the weakness. The Scope identifies the application security area that is violated, while the Impact describes the
 negative technical impact that arises if an adversary succeeds in exploiting this weakness. The Likelihood provides information about how likely the specific consequence is expected to be seen
 relative to the other consequences in the list. For example, there may be high likelihood that a weakness will be exploited to achieve a certain impact, but a low likelihood that it will be exploited
 to achieve a different impact.
       Scope                                                                                     Impact                                                                                 Likelihood
 Confidentiality    Technical Impact: Read Memory

                    Technical Impact: Bypass Protection Mechanism
 Confidentiality
                    By reading out-of-bounds memory, an attacker might be able to get secret values, such as memory addresses, which can be bypass protection mechanisms such as ASLR
                    in order to improve the reliability and likelihood of exploiting a separate weakness to achieve code execution instead of just denial of service.
 + Demonstrative Examples
 
 Example 1

 In the following code, the method retrieves a value from an array at a specific array index location that is given as an input parameter to the method

 (bad code)
 Example Language: C 
 int getValueFromArray(int *array, int len, int index) {

 int value;

 // check that the array index is less than the maximum

 // length of the array
 if (index < len) {

 // get the value at the specified index of the array
 value = array[index];
 }
 // if array index is invalid then output error message

 // and return value indicating error
 else {
 printf("Value is: %d\n", array[index]);
 value = -1;
 }

 return value;
 }

 However, this method only verifies that the given array index is less than the maximum length of the array but does not check for the minimum value (CWE-839). This will allow a negative value to be
 accepted as the input array index, which will result in a out of bounds read (CWE-125) and may allow access to sensitive memory. The input array index should be checked to verify that is within the
 maximum and minimum range required for the array (CWE-129). In this example the if statement should be modified to include a minimum range check, as shown below.

 (good code)
 Example Language: C 

 ...

 // check that the array index is within the correct

 // range of values for the array
 if (index >= 0 && index < len) {

 ...
 + Observed Examples
        Reference                                                                                        Description
 CVE-2020-11899          Out-of-bounds read in IP stack used in embedded systems, as exploited in the wild per CISA KEV.
 CVE-2014-0160           Chain: "Heartbleed" bug receives an inconsistent length parameter (CWE-130) enabling an out-of-bounds read (CWE-126), returning memory that could include private
                         cryptographic keys and other sensitive data.
 CVE-2021-40985          HTML conversion package has a buffer under-read, allowing a crash
 CVE-2018-10887          Chain: unexpected sign extension (CWE-194) leads to integer overflow (CWE-190), causing an out-of-bounds read (CWE-125)
 CVE-2009-2523           Chain: product does not handle when an input string is not NULL terminated (CWE-170), leading to buffer over-read (CWE-125) or heap-based buffer overflow (CWE-122).
 CVE-2018-16069          Chain: series of floating-point precision errors (CWE-1339) in a web browser rendering engine causes out-of-bounds read (CWE-125), giving access to cross-origin data
 CVE-2004-0112           out-of-bounds read due to improper length check
 CVE-2004-0183           packet with large number of specified elements cause out-of-bounds read.
 CVE-2004-0221           packet with large number of specified elements cause out-of-bounds read.
 CVE-2004-0184           out-of-bounds read, resultant from integer underflow
 CVE-2004-1940           large length value causes out-of-bounds read
 CVE-2004-0421           malformed image causes out-of-bounds read
 CVE-2008-4113           OS kernel trusts userland-supplied length value, allowing reading of sensitive information
 + Potential Mitigations
 Phase: Implementation

 Strategy: Input Validation

 Assume all input is malicious. Use an "accept known good" input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not
 strictly conform to specifications, or transform it into something that does.

 When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency
 across related fields, and conformance to business rules. As an example of business rule logic, "boat" may be syntactically valid because it only contains alphanumeric characters, but it is not
 valid if the input is only expected to contain colors such as "red" or "blue."

 Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers
 enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.

 To reduce the likelihood of introducing an out-of-bounds read, ensure that you validate and ensure correct calculations for any length argument, buffer size calculation, or offset. Be especially
 careful of relying on a sentinel (i.e. special character such as NUL) in untrusted inputs.

 Phase: Architecture and Design

 Strategy: Language Selection

 Use a language that provides appropriate memory abstractions.
 + Weakness Ordinalities
 Ordinality                                                                                       Description
 Primary    (where the weakness exists independent of other weaknesses)
 + Detection Methods
 Fuzzing

 Fuzz testing (fuzzing) is a powerful technique for generating large numbers of diverse inputs - either randomly or algorithmically - and dynamically invoking the code with those inputs. Even with
 random inputs, it is often capable of generating unexpected results such as crashes, memory corruption, or resource consumption. Fuzzing effectively produces repeatable test cases that clearly
 indicate bugs, which helps developers to diagnose the issues.

 Effectiveness: High

 Automated Static Analysis

 Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without
 having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect "sources" (origins of input) with
 "sinks" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)

 Effectiveness: High

 + Memberships
 Section HelpThis MemberOf Relationships table shows additional CWE Categories and Views that reference this weakness as a member. This information is often useful in understanding where a weakness
 fits within the context of external information sources.
     Nature                                                                                                  Type                                                                                               ID         Name
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            970     SFP Secondary
                                                                                                                                                                                                                      Cluster: Faulty
                                                                                                                                                                                                                      Buffer Access
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            1157    SEI CERT C
                                                                                                                                                                                                                      Coding Standard
                                                                                                                                                                                                                      - Guidelines
                                                                                                                                                                                                                      03. Expressions
                                                                                                                                                                                                                      (EXP)
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            1160    SEI CERT C
                                                                                                                                                                                                                      Coding Standard
                                                                                                                                                                                                                      - Guidelines
                                                                                                                                                                                                                      06. Arrays
                                                                                                                                                                                                                      (ARR)
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            1161    SEI CERT C
                                                                                                                                                                                                                      Coding Standard
                                                                                                                                                                                                                      - Guidelines
                                                                                                                                                                                                                      07. Characters
                                                                                                                                                                                                                      and Strings
                                                                                                                                                                                                                      (STR)
 MemberOf        ViewView - a subset of CWE entries that provides a way of examining CWE content. The two main view structures are Slices (flat lists) and Graphs (containing relationships between entries). 1200    Weaknesses in
                                                                                                                                                                                                                      the 2019 CWE
                                                                                                                                                                                                                      Top 25 Most
                                                                                                                                                                                                                      Dangerous
                                                                                                                                                                                                                      Software Errors
 MemberOf        ViewView - a subset of CWE entries that provides a way of examining CWE content. The two main view structures are Slices (flat lists) and Graphs (containing relationships between entries). 1337    Weaknesses in
                                                                                                                                                                                                                      the 2021 CWE
                                                                                                                                                                                                                      Top 25 Most
                                                                                                                                                                                                                      Dangerous
                                                                                                                                                                                                                      Software
                                                                                                                                                                                                                      Weaknesses
 MemberOf        ViewView - a subset of CWE entries that provides a way of examining CWE content. The two main view structures are Slices (flat lists) and Graphs (containing relationships between entries). 1350    Weaknesses in
                                                                                                                                                                                                                      the 2020 CWE
                                                                                                                                                                                                                      Top 25 Most
                                                                                                                                                                                                                      Dangerous
                                                                                                                                                                                                                      Software
                                                                                                                                                                                                                      Weaknesses
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            1366    ICS
                                                                                                                                                                                                                      Communications:
                                                                                                                                                                                                                      Frail Security
                                                                                                                                                                                                                      in Protocols
 MemberOf        ViewView - a subset of CWE entries that provides a way of examining CWE content. The two main view structures are Slices (flat lists) and Graphs (containing relationships between entries). 1387    Weaknesses in
                                                                                                                                                                                                                      the 2022 CWE
                                                                                                                                                                                                                      Top 25 Most
                                                                                                                                                                                                                      Dangerous
                                                                                                                                                                                                                      Software
                                                                                                                                                                                                                      Weaknesses
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            1399    Comprehensive
                                                                                                                                                                                                                      Categorization:
                                                                                                                                                                                                                      Memory Safety
 MemberOf        ViewView - a subset of CWE entries that provides a way of examining CWE content. The two main view structures are Slices (flat lists) and Graphs (containing relationships between entries). 1425    Weaknesses in
                                                                                                                                                                                                                      the 2023 CWE
                                                                                                                                                                                                                      Top 25 Most
                                                                                                                                                                                                                      Dangerous
                                                                                                                                                                                                                      Software
                                                                                                                                                                                                                      Weaknesses
 + Vulnerability Mapping Notes
 Usage: ALLOWED

 (this CWE ID could be used to map to real-world vulnerabilities)
 Reason: Acceptable-Use

 Rationale:

 This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.
 Comments:

 Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred
 level of abstraction.
 + Taxonomy Mappings
       Mapped Taxonomy Name          Node ID              Fit                                                                 Mapped Node Name
 PLOVER                                                                 Out-of-bounds Read
 CERT C Secure Coding             ARR30-C        Imprecise              Do not form or use out-of-bounds pointers or array subscripts
 CERT C Secure Coding             ARR38-C        Imprecise              Guarantee that library functions do not form invalid pointers
 CERT C Secure Coding             EXP39-C        Imprecise              Do not access a variable through a pointer of an incompatible type
 CERT C Secure Coding             STR31-C        Imprecise              Guarantee that storage for strings has sufficient space for character data and the null terminator
 CERT C Secure Coding             STR32-C        CWE More Abstract      Do not pass a non-null-terminated character sequence to a library function that expects a string
 Software Fault Patterns          SFP8                                  Faulty Buffer Access
 + Related Attack Patterns
    CAPEC-ID                                                                                     Attack Pattern Name
 CAPEC-540       Overread Buffers
 + References
 [REF-1034] Raoul Strackx, Yves Younan, Pieter Philippaerts, Frank Piessens, Sven Lachmund and Thomas Walter. "Breaking the memory secrecy assumption". ACM. 2009-03-31. <https://dl.acm.org/doi/
 10.1145/1519144.1519145>. URL validated: 2023-04-07.
 [REF-1035] Fermin J. Serna. "The info leak era on software exploitation". 2012-07-25. <https://media.blackhat.com/bh-us-12/Briefings/Serna/BH_US_12_Serna_Leak_Era_Slides.pdf>.
 [REF-44] Michael Howard, David LeBlanc and John Viega. "24 Deadly Sins of Software Security". "Sin 5: Buffer Overruns." Page 89. McGraw-Hill. 2010.
 + Content History
                                                                                            + Submissions
             Submission Date                                                     Submitter                                                                   Organization
 2006-07-19                               PLOVER
 (CWE Draft 3, 2006-07-19)

                                                                                           + Modifications
            Modification Date                                                     Modifier                                                                   Organization
 2008-09-08                               CWE Content Team                                                                         MITRE
                                          updated Applicable_Platforms, Relationships, Taxonomy_Mappings, Weakness_Ordinalities
 2009-10-29                               CWE Content Team                                                                         MITRE
                                          updated Description
 2010-09-27                               CWE Content Team                                                                         MITRE
                                          updated Relationships
 2011-06-01                               CWE Content Team                                                                         MITRE
                                          updated Common_Consequences
 2012-05-11                               CWE Content Team                                                                         MITRE
                                          updated Demonstrative_Examples, References, Relationships
 2014-06-23                               CWE Content Team                                                                         MITRE
                                          updated Related_Attack_Patterns
 2014-07-30                               CWE Content Team                                                                         MITRE
                                          updated Relationships, Taxonomy_Mappings
 2015-12-07                               CWE Content Team                                                                         MITRE
                                          updated Relationships
 2017-11-08                               CWE Content Team                                                                         MITRE
                                          updated Causal_Nature, Observed_Examples, Taxonomy_Mappings
 2018-03-27                               CWE Content Team                                                                         MITRE
                                          updated Description
 2019-01-03                               CWE Content Team                                                                         MITRE
                                          updated Relationships
 2019-06-20                               CWE Content Team                                                                         MITRE
                                          updated Description, Related_Attack_Patterns
 2019-09-19                               CWE Content Team                                                                         MITRE
                                          updated Common_Consequences, Observed_Examples, Potential_Mitigations, References, Relationships
 2020-02-24                               CWE Content Team                                                                         MITRE
                                          updated Potential_Mitigations, Relationships, Taxonomy_Mappings
 2020-06-25                               CWE Content Team                                                                         MITRE
                                          updated Observed_Examples, Potential_Mitigations
 2020-08-20                               CWE Content Team                                                                         MITRE
                                          updated Observed_Examples, Potential_Mitigations, Relationships
 2020-12-10                               CWE Content Team                                                                         MITRE
                                          updated Related_Attack_Patterns, Relationships
 2021-07-20                               CWE Content Team                                                                         MITRE
                                          updated Observed_Examples, Relationships
 2022-04-28                               CWE Content Team                                                                         MITRE
                                          updated Research_Gaps
 2022-06-28                               CWE Content Team                                                                         MITRE
                                          updated Observed_Examples, Relationships
 2022-10-13                               CWE Content Team                                                                         MITRE
                                          updated Applicable_Platforms, Relationships, Taxonomy_Mappings
 2023-01-31                               CWE Content Team                                                                         MITRE
                                          updated Description
 2023-04-27                               CWE Content Team                                                                         MITRE
                                          updated Detection_Factors, References, Relationships
 2023-06-29                               CWE Content Team                                                                         MITRE
                                          updated Mapping_Notes, Relationships
 2023-10-26                               CWE Content Team                                                                         MITRE
                                          updated Observed_Examples
 More information is available — Please edit the custom filter or select a different filter.
Page Last Updated: February 29, 2024
 
      Site Map | Terms of Use | Manage Cookies | Cookie Notice | Privacy Policy | Contact Us | CWE X-Twitter CWE Mastodon CWE on LinkedIn CWE YouTube channel CWE Out-of-Bounds-Read Podcast CWE
      Blog on Medium blog

MITRE Use of the Common Weakness Enumeration (CWE™) and the associated references from this website are subject to the Terms of Use. CWE is sponsored by the U.S. Department of Homeland         HSSEDI
      Security (DHS) Cybersecurity and Infrastructure Security Agency (CISA) and managed by the Homeland Security Systems Engineering and Development Institute (HSSEDI) which is operated by
      The MITRE Corporation (MITRE). Copyright © 2006–2024, The MITRE Corporation. CWE, CWSS, CWRAF, and the CWE logo are trademarks of The MITRE Corporation.

