CWE

Common Weakness Enumeration

A community-developed list of SW & HW weaknesses that can become vulnerabilities

New to CWE? click here!
CWE Most Important Hardware Weaknesses
CWE Top 25 Most Dangerous Weaknesses
Home > CWE List > CWE- Individual Dictionary Definition (4.14)                                                                                                   ID Lookup: [                    ] [Go]
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  • Home
  • About ▼
    About New to CWE User Stories History Documents FAQs Glossary Compatibility
  • CWE List ▼
    Latest Version Downloads Reports Visualizations Archive
  • Mapping ▼
    Root Cause Mapping Guidance Root Cause Mapping Quick Tips Root Cause Mapping Examples
  • Top-N Lists ▼
    Top 25 Software Top Hardware Top 10 KEV Weaknesses
  • Community ▼
    Community Working Groups & Special Interest Groups Board Board Meeting Minutes CWE Discussion List CWE Discussion Archives Contribute Weakness Content to CWE
  • News ▼
    Current News X-Twitter ● Mastodon ● LinkedIn ● YouTube YouTube Podcast Out of Bounds Read Podcast Medium Medium News Archive
  • Search

 
 CWE Glossary Definition                  x
 
 
 CWE-617: Reachable Assertion
 
 Weakness ID: 617
 Vulnerability Mapping: ALLOWEDThis CWE ID may be used to map to real-world vulnerabilities
 Abstraction: BaseBase - a weakness that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level
 weaknesses typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.
 View customized information:
 Conceptual For users who are interested in more notional aspects of a weakness. Example: educators, technical writers, and project/program managers. Operational For users who are concerned with the
 practical application and details about the nature of a weakness and how to prevent it from happening. Example: tool developers, security researchers, pen-testers, incident response analysts. Mapping
 Friendly For users who are mapping an issue to CWE/CAPEC IDs, i.e., finding the most appropriate CWE for a specific issue (e.g., a CVE record). Example: tool developers, security researchers. 
 Complete For users who wish to see all available information for the CWE/CAPEC entry. Custom For users who want to customize what details are displayed.
 ×

 Edit Custom Filter

 Conceptual Operational Mapping Friendly Select All
 
 Reset Clear Submit Cancel
 + Description
 The product contains an assert() or similar statement that can be triggered by an attacker, which leads to an application exit or other behavior that is more severe than necessary.
 + Extended Description
 
 While assertion is good for catching logic errors and reducing the chances of reaching more serious vulnerability conditions, it can still lead to a denial of service.

 For example, if a server handles multiple simultaneous connections, and an assert() occurs in one single connection that causes all other connections to be dropped, this is a reachable assertion that
 leads to a denial of service.

 + Alternate Terms
 assertion failure
 + Relationships
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Research Concepts" (CWE-1000)
     Nature                                                                                                                                                                             Type                                                                                                                                                                           ID          Name
 ChildOf                                                                               ClassClass - a weakness that is described in a very abstract fashion, typically independent of any specific language or technology. More specific than a Pillar Weakness, but more general than a Base                                                                        670     Always-Incorrect
                                                                                                                    Weakness. Class level weaknesses typically describe issues in terms of 1 or 2 of the following dimensions: behavior, property, and resource.                                                                                                             Control Flow
                                                                                                                                                                                                                                                                                                                                                                             Implementation
 CanFollow                                                                                 BaseBase - a weakness that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level weaknesses                                                                           193     Off-by-one Error
                                                                                                                          typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Software Development" (CWE-699)
     Nature                                                       Type                                                     ID                                   Name
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 389     Error Conditions, Return Values, Status Codes
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Weaknesses for Simplified Mapping of Published Vulnerabilities" (CWE-1003)
     Nature                                                                                                                                                                             Type                                                                                                                                                                           ID          Name
 ChildOf                                                                               ClassClass - a weakness that is described in a very abstract fashion, typically independent of any specific language or technology. More specific than a Pillar Weakness, but more general than a Base                                                                        670     Always-Incorrect
                                                                                                                    Weakness. Class level weaknesses typically describe issues in terms of 1 or 2 of the following dimensions: behavior, property, and resource.                                                                                                             Control Flow
                                                                                                                                                                                                                                                                                                                                                                             Implementation
 + Modes Of Introduction
 Section HelpThe different Modes of Introduction provide information about how and when this weakness may be introduced. The Phase identifies a point in the life cycle at which introduction may occur,
 while the Note provides a typical scenario related to introduction during the given phase.
     Phase                                                                                              Note
 Implementation
 + Common Consequences
 Section HelpThis table specifies different individual consequences associated with the weakness. The Scope identifies the application security area that is violated, while the Impact describes the
 negative technical impact that arises if an adversary succeeds in exploiting this weakness. The Likelihood provides information about how likely the specific consequence is expected to be seen
 relative to the other consequences in the list. For example, there may be high likelihood that a weakness will be exploited to achieve a certain impact, but a low likelihood that it will be exploited
 to achieve a different impact.
       Scope                                                                                     Impact                                                                                 Likelihood
                    Technical Impact: DoS: Crash, Exit, or Restart
 Availability
                    An attacker that can trigger an assert statement can still lead to a denial of service if the relevant code can be triggered by an attacker, and if the scope of
                    the assert() extends beyond the attacker's own session.
 + Demonstrative Examples
 
 Example 1

 In the excerpt below, an AssertionError (an unchecked exception) is thrown if the user hasn't entered an email address in an HTML form.

 (bad code)
 Example Language: Java 
 String email = request.getParameter("email_address");
 assert email != null;
 + Observed Examples
        Reference                                                                                        Description
 CVE-2023-49286          Chain: function in web caching proxy does not correctly check a return value (CWE-253) leading to a reachable assertion (CWE-617)
 CVE-2006-6767           FTP server allows remote attackers to cause a denial of service (daemon abort) via crafted commands which trigger an assertion failure.
 CVE-2006-6811           Chat client allows remote attackers to cause a denial of service (crash) via a long message string when connecting to a server, which causes an assertion failure.
 CVE-2006-5779           Product allows remote attackers to cause a denial of service (daemon crash) via LDAP BIND requests with long authcid names, which triggers an assertion failure.
 CVE-2006-4095           Product allows remote attackers to cause a denial of service (crash) via certain queries, which cause an assertion failure.
 CVE-2006-4574           Chain: security monitoring product has an off-by-one error that leads to unexpected length values, triggering an assertion.
 CVE-2004-0270           Anti-virus product has assert error when line length is non-numeric.
 + Potential Mitigations
 Phase: Implementation

 Make sensitive open/close operation non reachable by directly user-controlled data (e.g. open/close resources)
 Phase: Implementation

 Strategy: Input Validation

 Perform input validation on user data.
 + Weakness Ordinalities
 Ordinality                                                                                       Description
 Resultant  (where the weakness is typically related to the presence of some other weaknesses)
 + Detection Methods
 Automated Static Analysis

 Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without
 having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect "sources" (origins of input) with
 "sinks" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)

 Effectiveness: High

 + Memberships
 Section HelpThis MemberOf Relationships table shows additional CWE Categories and Views that reference this weakness as a member. This information is often useful in understanding where a weakness
 fits within the context of external information sources.
     Nature                                                                                                  Type                                                                                               ID         Name
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            850     The CERT Oracle
                                                                                                                                                                                                                      Secure Coding
                                                                                                                                                                                                                      Standard for
                                                                                                                                                                                                                      Java (2011)
                                                                                                                                                                                                                      Chapter 7 -
                                                                                                                                                                                                                      Methods (MET)
 MemberOf        ViewView - a subset of CWE entries that provides a way of examining CWE content. The two main view structures are Slices (flat lists) and Graphs (containing relationships between entries). 884     CWE
                                                                                                                                                                                                                      Cross-section
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            1001    SFP Secondary
                                                                                                                                                                                                                      Cluster: Use of
                                                                                                                                                                                                                      an Improper API
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            1140    SEI CERT Oracle
                                                                                                                                                                                                                      Secure Coding
                                                                                                                                                                                                                      Standard for
                                                                                                                                                                                                                      Java -
                                                                                                                                                                                                                      Guidelines 06.
                                                                                                                                                                                                                      Methods (MET)
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            1410    Comprehensive
                                                                                                                                                                                                                      Categorization:
                                                                                                                                                                                                                      Insufficient
                                                                                                                                                                                                                      Control Flow
                                                                                                                                                                                                                      Management
 + Vulnerability Mapping Notes
 Usage: ALLOWED

 (this CWE ID could be used to map to real-world vulnerabilities)
 Reason: Acceptable-Use

 Rationale:

 This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.
 Comments:

 Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred
 level of abstraction.
 + Taxonomy Mappings
       Mapped Taxonomy Name          Node ID          Fit                                                                 Mapped Node Name
 The CERT Oracle Secure Coding    MET01-J                       Never use assertions to validate method arguments
 Standard for Java (2011)
 Software Fault Patterns          SFP3                          Use of an improper API
 + Content History
                                                                                            + Submissions
               Submission Date                                                     Submitter                                                                 Organization
 2007-05-07                                  CWE Content Team                                                                      MITRE
 (CWE Draft 6, 2007-05-07)

                                                                                           + Modifications
              Modification Date                                                    Modifier                                                                  Organization
 2008-07-01                                  Sean Eidemiller                                                                       Cigital
                                             added/updated demonstrative examples
 2008-07-01                                  Eric Dalci                                                                            Cigital
                                             updated Potential_Mitigations, Time_of_Introduction
 2008-09-08                                  CWE Content Team                                                                      MITRE
                                             updated Description, Relationships, Observed_Example, Other_Notes, Weakness_Ordinalities
 2011-06-01                                  CWE Content Team                                                                      MITRE
                                             updated Common_Consequences
 2012-05-11                                  CWE Content Team                                                                      MITRE
                                             updated Common_Consequences, Observed_Examples, Relationships, Taxonomy_Mappings
 2012-10-30                                  CWE Content Team                                                                      MITRE
                                             updated Potential_Mitigations
 2014-06-23                                  CWE Content Team                                                                      MITRE
                                             updated Common_Consequences, Description, Other_Notes
 2014-07-30                                  CWE Content Team                                                                      MITRE
                                             updated Relationships, Taxonomy_Mappings
 2017-01-19                                  CWE Content Team                                                                      MITRE
                                             updated Relationships
 2017-11-08                                  CWE Content Team                                                                      MITRE
                                             updated Relationships
 2019-01-03                                  CWE Content Team                                                                      MITRE
                                             updated Relationships, Taxonomy_Mappings
 2019-06-20                                  CWE Content Team                                                                      MITRE
                                             updated Relationships, Type
 2019-09-19                                  CWE Content Team                                                                      MITRE
                                             updated Alternate_Terms
 2023-04-27                                  CWE Content Team                                                                      MITRE
                                             updated Detection_Factors, Relationships
 2023-06-29                                  CWE Content Team                                                                      MITRE
                                             updated Mapping_Notes
 2023-10-26                                  CWE Content Team                                                                      MITRE
                                             updated Demonstrative_Examples
 2024-02-29                                  CWE Content Team                                                                      MITRE
 (CWE 4.14, 2024-02-29)                      updated Observed_Examples
 More information is available — Please edit the custom filter or select a different filter.
Page Last Updated: February 29, 2024
 
      Site Map | Terms of Use | Manage Cookies | Cookie Notice | Privacy Policy | Contact Us | CWE X-Twitter CWE Mastodon CWE on LinkedIn CWE YouTube channel CWE Out-of-Bounds-Read Podcast CWE
      Blog on Medium blog

MITRE Use of the Common Weakness Enumeration (CWE™) and the associated references from this website are subject to the Terms of Use. CWE is sponsored by the U.S. Department of Homeland         HSSEDI
      Security (DHS) Cybersecurity and Infrastructure Security Agency (CISA) and managed by the Homeland Security Systems Engineering and Development Institute (HSSEDI) which is operated by
      The MITRE Corporation (MITRE). Copyright © 2006–2024, The MITRE Corporation. CWE, CWSS, CWRAF, and the CWE logo are trademarks of The MITRE Corporation.

