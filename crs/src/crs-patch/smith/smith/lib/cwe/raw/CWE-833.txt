CWE

Common Weakness Enumeration

A community-developed list of SW & HW weaknesses that can become vulnerabilities

New to CWE? click here!
CWE Most Important Hardware Weaknesses
CWE Top 25 Most Dangerous Weaknesses
Home > CWE List > CWE- Individual Dictionary Definition (4.14)                                                                                                   ID Lookup: [                    ] [Go]
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  • Home
  • About ▼
    About New to CWE User Stories History Documents FAQs Glossary Compatibility
  • CWE List ▼
    Latest Version Downloads Reports Visualizations Archive
  • Mapping ▼
    Root Cause Mapping Guidance Root Cause Mapping Quick Tips Root Cause Mapping Examples
  • Top-N Lists ▼
    Top 25 Software Top Hardware Top 10 KEV Weaknesses
  • Community ▼
    Community Working Groups & Special Interest Groups Board Board Meeting Minutes CWE Discussion List CWE Discussion Archives Contribute Weakness Content to CWE
  • News ▼
    Current News X-Twitter ● Mastodon ● LinkedIn ● YouTube YouTube Podcast Out of Bounds Read Podcast Medium Medium News Archive
  • Search

 
 CWE Glossary Definition                  x
 
 
 CWE-833: Deadlock
 
 Weakness ID: 833
 Vulnerability Mapping: ALLOWEDThis CWE ID may be used to map to real-world vulnerabilities
 Abstraction: BaseBase - a weakness that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level
 weaknesses typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.
 View customized information:
 Conceptual For users who are interested in more notional aspects of a weakness. Example: educators, technical writers, and project/program managers. Operational For users who are concerned with the
 practical application and details about the nature of a weakness and how to prevent it from happening. Example: tool developers, security researchers, pen-testers, incident response analysts. Mapping
 Friendly For users who are mapping an issue to CWE/CAPEC IDs, i.e., finding the most appropriate CWE for a specific issue (e.g., a CVE record). Example: tool developers, security researchers. 
 Complete For users who wish to see all available information for the CWE/CAPEC entry. Custom For users who want to customize what details are displayed.
 ×

 Edit Custom Filter

 Conceptual Operational Mapping Friendly Select All
 
 Reset Clear Submit Cancel
 + Description
 The product contains multiple threads or executable segments that are waiting for each other to release a necessary lock, resulting in deadlock.
 + Relationships
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Research Concepts" (CWE-1000)
     Nature                                                                                                                                                                             Type                                                                                                                                                                           ID      Name
 ChildOf                                                                               ClassClass - a weakness that is described in a very abstract fashion, typically independent of any specific language or technology. More specific than a Pillar Weakness, but more general than a Base                                                                        667     Improper
                                                                                                                    Weakness. Class level weaknesses typically describe issues in terms of 1 or 2 of the following dimensions: behavior, property, and resource.                                                                                                             Locking
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Software Development" (CWE-699)
     Nature                                                       Type                                                     ID                                   Name
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 411     Resource Locking Problems
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "CISQ Quality Measures (2020)" (CWE-1305)
     Nature                                                                                                                                                                             Type                                                                                                                                                                           ID         Name
 ChildOf                                                                               ClassClass - a weakness that is described in a very abstract fashion, typically independent of any specific language or technology. More specific than a Pillar Weakness, but more general than a Base                                                                        662     Improper
                                                                                                                    Weakness. Class level weaknesses typically describe issues in terms of 1 or 2 of the following dimensions: behavior, property, and resource.                                                                                                             Synchronization
 + Common Consequences
 Section HelpThis table specifies different individual consequences associated with the weakness. The Scope identifies the application security area that is violated, while the Impact describes the
 negative technical impact that arises if an adversary succeeds in exploiting this weakness. The Likelihood provides information about how likely the specific consequence is expected to be seen
 relative to the other consequences in the list. For example, there may be high likelihood that a weakness will be exploited to achieve a certain impact, but a low likelihood that it will be exploited
 to achieve a different impact.
       Scope                                                                                     Impact                                                                                 Likelihood
                    Technical Impact: DoS: Resource Consumption (CPU); DoS: Resource Consumption (Other); DoS: Crash, Exit, or Restart
 Availability
                    Each thread of execution will "hang" and prevent tasks from completing. In some cases, CPU consumption may occur if a lock check occurs in a tight loop.
 + Observed Examples
        Reference                                                                                        Description
 CVE-1999-1476           A bug in some Intel Pentium processors allow DoS (hang) via an invalid "CMPXCHG8B" instruction, causing a deadlock
 CVE-2009-2857           OS deadlock
 CVE-2009-1961           OS deadlock involving 3 separate functions
 CVE-2009-2699           deadlock in library
 CVE-2009-4272           deadlock triggered by packets that force collisions in a routing table
 CVE-2002-1850           read/write deadlock between web server and script
 CVE-2004-0174           web server deadlock involving multiple listening connections
 CVE-2009-1388           multiple simultaneous calls to the same function trigger deadlock.
 CVE-2006-5158           chain: other weakness leads to NULL pointer dereference (CWE-476) or deadlock (CWE-833).
 CVE-2006-4342           deadlock when an operation is performed on a resource while it is being removed.
 CVE-2006-2374           Deadlock in device driver triggered by using file handle of a related device.
 CVE-2006-2275           Deadlock when large number of small messages cannot be processed quickly enough.
 CVE-2005-3847           OS kernel has deadlock triggered by a signal during a core dump.
 CVE-2005-3106           Race condition leads to deadlock.
 CVE-2005-2456           Chain: array index error (CWE-129) leads to deadlock (CWE-833)
 + Memberships
 Section HelpThis MemberOf Relationships table shows additional CWE Categories and Views that reference this weakness as a member. This information is often useful in understanding where a weakness
 fits within the context of external information sources.
     Nature                                                       Type                                                     ID                                   Name
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 853     The CERT Oracle Secure Coding Standard for Java (2011) Chapter 10 -
                                                                                                                                 Locking (LCK)
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 1401    Comprehensive Categorization: Concurrency
 + Vulnerability Mapping Notes
 Usage: ALLOWED

 (this CWE ID could be used to map to real-world vulnerabilities)
 Reason: Acceptable-Use

 Rationale:

 This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.
 Comments:

 Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred
 level of abstraction.
 + Taxonomy Mappings
       Mapped Taxonomy Name          Node ID        Fit                                                                 Mapped Node Name
 The CERT Oracle Secure Coding    LCK08-J                   Ensure actively held locks are released on exceptional conditions
 Standard for Java (2011)
 + Related Attack Patterns
    CAPEC-ID                                                                                     Attack Pattern Name
 CAPEC-25        Forced Deadlock
 + References
 [REF-62] Mark Dowd, John McDonald and Justin Schuh. "The Art of Software Security Assessment". Chapter 13, "Synchronization Problems", section "Starvation and Deadlocks", Page 760. 1st Edition.
 Addison Wesley. 2006.
 [REF-783] Robert C. Seacord. "Secure Coding in C and C++". Chapter 7, "Concurrency", section "Mutual Exclusion and Deadlock", Page 248. Addison Wesley. 2006.
 + Content History
                                                                                            + Submissions
                   Submission Date                                                        Submitter                                                             Organization
 2010-12-12                                           CWE Content Team                                                                  MITRE
 (CWE 1.11, 2010-12-13)

                                                                                           + Modifications
                  Modification Date                                                       Modifier                                                              Organization
 2011-06-01                                           CWE Content Team                                                                  MITRE
                                                      updated Common_Consequences, Relationships, Taxonomy_Mappings
 2012-05-11                                           CWE Content Team                                                                  MITRE
                                                      updated References
 2017-05-03                                           CWE Content Team                                                                  MITRE
                                                      updated Related_Attack_Patterns
 2018-03-27                                           CWE Content Team                                                                  MITRE
                                                      updated References
 2019-01-03                                           CWE Content Team                                                                  MITRE
                                                      updated Taxonomy_Mappings
 2020-02-24                                           CWE Content Team                                                                  MITRE
                                                      updated Relationships
 2020-08-20                                           CWE Content Team                                                                  MITRE
                                                      updated Relationships
 2021-07-20                                           CWE Content Team                                                                  MITRE
                                                      updated Observed_Examples
 2023-01-31                                           CWE Content Team                                                                  MITRE
                                                      updated Description
 2023-04-27                                           CWE Content Team                                                                  MITRE
                                                      updated Relationships
 2023-06-29                                           CWE Content Team                                                                  MITRE
                                                      updated Mapping_Notes
 More information is available — Please edit the custom filter or select a different filter.
Page Last Updated: February 29, 2024
 
      Site Map | Terms of Use | Manage Cookies | Cookie Notice | Privacy Policy | Contact Us | CWE X-Twitter CWE Mastodon CWE on LinkedIn CWE YouTube channel CWE Out-of-Bounds-Read Podcast CWE
      Blog on Medium blog

MITRE Use of the Common Weakness Enumeration (CWE™) and the associated references from this website are subject to the Terms of Use. CWE is sponsored by the U.S. Department of Homeland         HSSEDI
      Security (DHS) Cybersecurity and Infrastructure Security Agency (CISA) and managed by the Homeland Security Systems Engineering and Development Institute (HSSEDI) which is operated by
      The MITRE Corporation (MITRE). Copyright © 2006–2024, The MITRE Corporation. CWE, CWSS, CWRAF, and the CWE logo are trademarks of The MITRE Corporation.

