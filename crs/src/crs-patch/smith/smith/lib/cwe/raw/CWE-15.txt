CWE

Common Weakness Enumeration

A community-developed list of SW & HW weaknesses that can become vulnerabilities

New to CWE? click here!
CWE Most Important Hardware Weaknesses
CWE Top 25 Most Dangerous Weaknesses
Home > CWE List > CWE- Individual Dictionary Definition (4.14)                                                                                                   ID Lookup: [                    ] [Go]
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  • Home
  • About ▼
    About New to CWE User Stories History Documents FAQs Glossary Compatibility
  • CWE List ▼
    Latest Version Downloads Reports Visualizations Archive
  • Mapping ▼
    Root Cause Mapping Guidance Root Cause Mapping Quick Tips Root Cause Mapping Examples
  • Top-N Lists ▼
    Top 25 Software Top Hardware Top 10 KEV Weaknesses
  • Community ▼
    Community Working Groups & Special Interest Groups Board Board Meeting Minutes CWE Discussion List CWE Discussion Archives Contribute Weakness Content to CWE
  • News ▼
    Current News X-Twitter ● Mastodon ● LinkedIn ● YouTube YouTube Podcast Out of Bounds Read Podcast Medium Medium News Archive
  • Search

 
 CWE Glossary Definition                  x
 
 
 CWE-15: External Control of System or Configuration Setting
 
 Weakness ID: 15
 Vulnerability Mapping: ALLOWEDThis CWE ID may be used to map to real-world vulnerabilities
 Abstraction: BaseBase - a weakness that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level
 weaknesses typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.
 View customized information:
 Conceptual For users who are interested in more notional aspects of a weakness. Example: educators, technical writers, and project/program managers. Operational For users who are concerned with the
 practical application and details about the nature of a weakness and how to prevent it from happening. Example: tool developers, security researchers, pen-testers, incident response analysts. Mapping
 Friendly For users who are mapping an issue to CWE/CAPEC IDs, i.e., finding the most appropriate CWE for a specific issue (e.g., a CVE record). Example: tool developers, security researchers. 
 Complete For users who wish to see all available information for the CWE/CAPEC entry. Custom For users who want to customize what details are displayed.
 ×

 Edit Custom Filter

 Conceptual Operational Mapping Friendly Select All
 
 Reset Clear Submit Cancel
 + Description
 One or more system settings or configuration elements can be externally controlled by a user.
 + Extended Description
 Allowing external control of system settings can disrupt service or cause an application to behave in unexpected, and potentially malicious ways.
 + Relationships
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Research Concepts" (CWE-1000)
     Nature                                                                                                                                                                             Type                                                                                                                                                                           ID       Name
 ChildOf                                                                               ClassClass - a weakness that is described in a very abstract fashion, typically independent of any specific language or technology. More specific than a Pillar Weakness, but more general than a Base                                                                        610     Externally
                                                                                                                    Weakness. Class level weaknesses typically describe issues in terms of 1 or 2 of the following dimensions: behavior, property, and resource.                                                                                                             Controlled
                                                                                                                                                                                                                                                                                                                                                                             Reference
                                                                                                                                                                                                                                                                                                                                                                             to a
                                                                                                                                                                                                                                                                                                                                                                             Resource
                                                                                                                                                                                                                                                                                                                                                                             in Another
                                                                                                                                                                                                                                                                                                                                                                             Sphere
 ChildOf                                                                               ClassClass - a weakness that is described in a very abstract fashion, typically independent of any specific language or technology. More specific than a Pillar Weakness, but more general than a Base                                                                        642     External
                                                                                                                    Weakness. Class level weaknesses typically describe issues in terms of 1 or 2 of the following dimensions: behavior, property, and resource.                                                                                                             Control of
                                                                                                                                                                                                                                                                                                                                                                             Critical
                                                                                                                                                                                                                                                                                                                                                                             State Data
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Software Development" (CWE-699)
     Nature                                                       Type                                                     ID                                   Name
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 371     State Issues
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Architectural Concepts" (CWE-1008)
     Nature                                                       Type                                                     ID                                   Name
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 1011    Authorize Actors
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Seven Pernicious Kingdoms" (CWE-700)
     Nature                                                                                                                                                                             Type                                                                                                                                                                           ID       Name
 ChildOf                                                                               ClassClass - a weakness that is described in a very abstract fashion, typically independent of any specific language or technology. More specific than a Pillar Weakness, but more general than a Base                                                                        20      Improper
                                                                                                                    Weakness. Class level weaknesses typically describe issues in terms of 1 or 2 of the following dimensions: behavior, property, and resource.                                                                                                             Input
                                                                                                                                                                                                                                                                                                                                                                             Validation
 + Modes Of Introduction
 Section HelpThe different Modes of Introduction provide information about how and when this weakness may be introduced. The Phase identifies a point in the life cycle at which introduction may occur,
 while the Note provides a typical scenario related to introduction during the given phase.
     Phase                                                                                              Note
 Implementation Setting manipulation vulnerabilities occur when an attacker can control values that govern the behavior of the system, manage specific resources, or in some way affect the
                functionality of the application.
 Implementation REALIZATION: This weakness is caused during implementation of an architectural security tactic.
 + Applicable Platforms
 Section HelpThis listing shows possible areas for which the given weakness could appear. These may be for specific named Languages, Operating Systems, Architectures, Paradigms, Technologies, or a
 class of such platforms. The platform is listed along with how frequently the given weakness appears for that instance.

 Technologies

 Class: Not Technology-Specific (Undetermined Prevalence)

 Class: ICS/OT (Undetermined Prevalence)

 + Common Consequences
 Section HelpThis table specifies different individual consequences associated with the weakness. The Scope identifies the application security area that is violated, while the Impact describes the
 negative technical impact that arises if an adversary succeeds in exploiting this weakness. The Likelihood provides information about how likely the specific consequence is expected to be seen
 relative to the other consequences in the list. For example, there may be high likelihood that a weakness will be exploited to achieve a certain impact, but a low likelihood that it will be exploited
 to achieve a different impact.
       Scope                                                                                     Impact                                                                                 Likelihood
 Other              Technical Impact: Varies by Context

 + Demonstrative Examples
 
 Example 1

 The following C code accepts a number as one of its command line parameters and sets it as the host ID of the current machine.

 (bad code)
 Example Language: C 
 ...
 sethostid(argv[1]);
 ...

 Although a process must be privileged to successfully invoke sethostid(), unprivileged users may be able to invoke the program. The code in this example allows user input to directly control the
 value of a system setting. If an attacker provides a malicious value for host ID, the attacker can misidentify the affected machine on the network or cause other unintended behavior.

 Example 2

 The following Java code snippet reads a string from an HttpServletRequest and sets it as the active catalog for a database Connection.

 (bad code)
 Example Language: Java 
 ...
 conn.setCatalog(request.getParameter("catalog"));
 ...

 In this example, an attacker could cause an error by providing a nonexistent catalog name or connect to an unauthorized portion of the database.

 + Potential Mitigations
 Phase: Architecture and Design

 Strategy: Separation of Privilege

 Compartmentalize the system to have "safe" areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always be careful when
 interfacing with a compartment outside of the safe area.

 Ensure that appropriate compartmentalization is built into the system design, and the compartmentalization allows for and reinforces privilege separation functionality. Architects and designers
 should rely on the principle of least privilege to decide the appropriate time to use privileges and the time to drop privileges.

 Phases: Implementation; Architecture and Design

 Because setting manipulation covers a diverse set of functions, any attempt at illustrating it will inevitably be incomplete. Rather than searching for a tight-knit relationship between the
 functions addressed in the setting manipulation category, take a step back and consider the sorts of system values that an attacker should not be allowed to control.
 Phases: Implementation; Architecture and Design

 In general, do not allow user-provided or otherwise untrusted data to control sensitive values. The leverage that an attacker gains by controlling these values is not always immediately obvious,
 but do not underestimate the creativity of the attacker.
 + Detection Methods
 Automated Static Analysis

 Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without
 having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect "sources" (origins of input) with
 "sinks" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)

 Effectiveness: High

 + Memberships
 Section HelpThis MemberOf Relationships table shows additional CWE Categories and Views that reference this weakness as a member. This information is often useful in understanding where a weakness
 fits within the context of external information sources.
     Nature                                                       Type                                                     ID                                   Name
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 994     SFP Secondary Cluster: Tainted Input to Variable
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 1349    OWASP Top Ten 2021 Category A05:2021 - Security Misconfiguration
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 1368    ICS Dependencies (& Architecture): External Digital Systems
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 1403    Comprehensive Categorization: Exposed Resource
 + Vulnerability Mapping Notes
 Usage: ALLOWED

 (this CWE ID could be used to map to real-world vulnerabilities)
 Reason: Acceptable-Use

 Rationale:

 This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.
 Comments:

 Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred
 level of abstraction.
 + Taxonomy Mappings
       Mapped Taxonomy Name          Node ID             Fit                                                                Mapped Node Name
 7 Pernicious Kingdoms                                               Setting Manipulation
 Software Fault Patterns          SFP25                              Tainted input to variable
 + Related Attack Patterns
    CAPEC-ID                                                                                     Attack Pattern Name
 CAPEC-13        Subverting Environment Variable Values
 CAPEC-146       XML Schema Poisoning
 CAPEC-176       Configuration/Environment Manipulation
 CAPEC-203       Manipulate Registry Information
 CAPEC-270       Modification of Registry Run Keys
 CAPEC-271       Schema Poisoning
 CAPEC-579       Replace Winlogon Helper DLL
 CAPEC-69        Target Programs with Elevated Privileges
 CAPEC-76        Manipulating Web Input to File System Calls
 CAPEC-77        Manipulating User-Controlled Variables
 + References
 [REF-6] Katrina Tsipenyuk, Brian Chess and Gary McGraw. "Seven Pernicious Kingdoms: A Taxonomy of Software Security Errors". NIST Workshop on Software Security Assurance Tools Techniques and
 Metrics. NIST. 2005-11-07. <https://samate.nist.gov/SSATTM_Content/papers/Seven%20Pernicious%20Kingdoms%20-%20Taxonomy%20of%20Sw%20Security%20Errors%20-%20Tsipenyuk%20-%20Chess%20-%20McGraw.pdf>.
 + Content History
                                                                                           + Submissions
                   Submission Date                                                            Submitter                                                            Organization
 2006-07-19                                           7 Pernicious Kingdoms
 (CWE Draft 3, 2006-07-19)

                                                                                          + Modifications
                  Modification Date                                                           Modifier                                                             Organization
 2008-07-01                                           Eric Dalci                                                                                Cigital
                                                      updated Time_of_Introduction
 2008-09-08                                           CWE Content Team                                                                          MITRE
                                                      updated Relationships, Other_Notes, Taxonomy_Mappings
 2008-10-14                                           CWE Content Team                                                                          MITRE
                                                      updated Description
 2009-01-12                                           CWE Content Team                                                                          MITRE
                                                      updated Relationships
 2009-05-27                                           CWE Content Team                                                                          MITRE
                                                      updated Demonstrative_Examples
 2009-10-29                                           CWE Content Team                                                                          MITRE
                                                      updated Modes_of_Introduction, Other_Notes
 2010-04-05                                           CWE Content Team                                                                          MITRE
                                                      updated Related_Attack_Patterns
 2011-06-01                                           CWE Content Team                                                                          MITRE
                                                      updated Common_Consequences, Relationships, Taxonomy_Mappings
 2011-06-27                                           CWE Content Team                                                                          MITRE
                                                      updated Common_Consequences
 2012-05-11                                           CWE Content Team                                                                          MITRE
                                                      updated Relationships, Taxonomy_Mappings
 2012-10-30                                           CWE Content Team                                                                          MITRE
                                                      updated Potential_Mitigations
 2013-02-21                                           CWE Content Team                                                                          MITRE
                                                      updated Potential_Mitigations
 2014-07-30                                           CWE Content Team                                                                          MITRE
                                                      updated Relationships, Taxonomy_Mappings
 2017-01-19                                           CWE Content Team                                                                          MITRE
                                                      updated Relationships
 2017-11-08                                           CWE Content Team                                                                          MITRE
                                                      updated Modes_of_Introduction, Relationships
 2019-01-03                                           CWE Content Team                                                                          MITRE
                                                      updated Related_Attack_Patterns
 2019-06-20                                           CWE Content Team                                                                          MITRE
                                                      updated Related_Attack_Patterns
 2020-02-24                                           CWE Content Team                                                                          MITRE
                                                      updated References, Relationships
 2020-12-10                                           CWE Content Team                                                                          MITRE
                                                      updated Potential_Mitigations
 2021-10-28                                           CWE Content Team                                                                          MITRE
                                                      updated Relationships
 2023-01-31                                           CWE Content Team                                                                          MITRE
                                                      updated Applicable_Platforms, Related_Attack_Patterns, Relationships
 2023-04-27                                           CWE Content Team                                                                          MITRE
                                                      updated Detection_Factors, Relationships
 2023-06-29                                           CWE Content Team                                                                          MITRE
                                                      updated Mapping_Notes
                                                                                       + Previous Entry Names
                     Change Date                                                                                   Previous Entry Name
 2008-04-11                                           Setting Manipulation
 More information is available — Please edit the custom filter or select a different filter.
Page Last Updated: February 29, 2024
 
      Site Map | Terms of Use | Manage Cookies | Cookie Notice | Privacy Policy | Contact Us | CWE X-Twitter CWE Mastodon CWE on LinkedIn CWE YouTube channel CWE Out-of-Bounds-Read Podcast CWE
      Blog on Medium blog

MITRE Use of the Common Weakness Enumeration (CWE™) and the associated references from this website are subject to the Terms of Use. CWE is sponsored by the U.S. Department of Homeland         HSSEDI
      Security (DHS) Cybersecurity and Infrastructure Security Agency (CISA) and managed by the Homeland Security Systems Engineering and Development Institute (HSSEDI) which is operated by
      The MITRE Corporation (MITRE). Copyright © 2006–2024, The MITRE Corporation. CWE, CWSS, CWRAF, and the CWE logo are trademarks of The MITRE Corporation.

