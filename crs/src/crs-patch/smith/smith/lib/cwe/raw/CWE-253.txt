CWE

Common Weakness Enumeration

A community-developed list of SW & HW weaknesses that can become vulnerabilities

New to CWE? click here!
CWE Most Important Hardware Weaknesses
CWE Top 25 Most Dangerous Weaknesses
Home > CWE List > CWE- Individual Dictionary Definition (4.14)                                                                                                   ID Lookup: [                    ] [Go]
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  • Home
  • About ▼
    About New to CWE User Stories History Documents FAQs Glossary Compatibility
  • CWE List ▼
    Latest Version Downloads Reports Visualizations Archive
  • Mapping ▼
    Root Cause Mapping Guidance Root Cause Mapping Quick Tips Root Cause Mapping Examples
  • Top-N Lists ▼
    Top 25 Software Top Hardware Top 10 KEV Weaknesses
  • Community ▼
    Community Working Groups & Special Interest Groups Board Board Meeting Minutes CWE Discussion List CWE Discussion Archives Contribute Weakness Content to CWE
  • News ▼
    Current News X-Twitter ● Mastodon ● LinkedIn ● YouTube YouTube Podcast Out of Bounds Read Podcast Medium Medium News Archive
  • Search

 
 CWE Glossary Definition                  x
 
 
 CWE-253: Incorrect Check of Function Return Value
 
 Weakness ID: 253
 Vulnerability Mapping: ALLOWEDThis CWE ID may be used to map to real-world vulnerabilities
 Abstraction: BaseBase - a weakness that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level
 weaknesses typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.
 View customized information:
 Conceptual For users who are interested in more notional aspects of a weakness. Example: educators, technical writers, and project/program managers. Operational For users who are concerned with the
 practical application and details about the nature of a weakness and how to prevent it from happening. Example: tool developers, security researchers, pen-testers, incident response analysts. Mapping
 Friendly For users who are mapping an issue to CWE/CAPEC IDs, i.e., finding the most appropriate CWE for a specific issue (e.g., a CVE record). Example: tool developers, security researchers. 
 Complete For users who wish to see all available information for the CWE/CAPEC entry. Custom For users who want to customize what details are displayed.
 ×

 Edit Custom Filter

 Conceptual Operational Mapping Friendly Select All
 
 Reset Clear Submit Cancel
 + Description
 The product incorrectly checks a return value from a function, which prevents it from detecting errors or exceptional conditions.
 + Extended Description
 Important and common functions will return some value about the success of its actions. This will alert the program whether or not to handle any errors caused by that function.
 + Relationships
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Research Concepts" (CWE-1000)
     Nature                                                                                                                                                                             Type                                                                                                                                                                           ID        Name
 ChildOf                                                                               ClassClass - a weakness that is described in a very abstract fashion, typically independent of any specific language or technology. More specific than a Pillar Weakness, but more general than a Base                                                                        754     Improper
                                                                                                                    Weakness. Class level weaknesses typically describe issues in terms of 1 or 2 of the following dimensions: behavior, property, and resource.                                                                                                             Check for
                                                                                                                                                                                                                                                                                                                                                                             Unusual or
                                                                                                                                                                                                                                                                                                                                                                             Exceptional
                                                                                                                                                                                                                                                                                                                                                                             Conditions
 ChildOf                                                                               ClassClass - a weakness that is described in a very abstract fashion, typically independent of any specific language or technology. More specific than a Pillar Weakness, but more general than a Base                                                                        573     Improper
                                                                                                                    Weakness. Class level weaknesses typically describe issues in terms of 1 or 2 of the following dimensions: behavior, property, and resource.                                                                                                             Following of
                                                                                                                                                                                                                                                                                                                                                                             Specification
                                                                                                                                                                                                                                                                                                                                                                             by Caller
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Software Development" (CWE-699)
     Nature                                                       Type                                                     ID                                   Name
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 389     Error Conditions, Return Values, Status Codes
 + Modes Of Introduction
 Section HelpThe different Modes of Introduction provide information about how and when this weakness may be introduced. The Phase identifies a point in the life cycle at which introduction may occur,
 while the Note provides a typical scenario related to introduction during the given phase.
     Phase                                                                                              Note
 Implementation
 + Applicable Platforms
 Section HelpThis listing shows possible areas for which the given weakness could appear. These may be for specific named Languages, Operating Systems, Architectures, Paradigms, Technologies, or a
 class of such platforms. The platform is listed along with how frequently the given weakness appears for that instance.

 Languages

 Class: Not Language-Specific (Undetermined Prevalence)

 + Common Consequences
 Section HelpThis table specifies different individual consequences associated with the weakness. The Scope identifies the application security area that is violated, while the Impact describes the
 negative technical impact that arises if an adversary succeeds in exploiting this weakness. The Likelihood provides information about how likely the specific consequence is expected to be seen
 relative to the other consequences in the list. For example, there may be high likelihood that a weakness will be exploited to achieve a certain impact, but a low likelihood that it will be exploited
 to achieve a different impact.
       Scope                                                                                     Impact                                                                                 Likelihood
 Availability       Technical Impact: Unexpected State; DoS: Crash, Exit, or Restart
 Integrity
                    An unexpected return value could place the system in a state that could lead to a crash or other unintended behaviors.
 + Likelihood Of Exploit
 Low
 + Demonstrative Examples
 
 Example 1

 This code attempts to allocate memory for 4 integers and checks if the allocation succeeds.

 (bad code)
 Example Language: C 
 tmp = malloc(sizeof(int) * 4);
 if (tmp < 0 ) {
 perror("Failure");
 //should have checked if the call returned 0
 }

 The code assumes that only a negative return value would indicate an error, but malloc() may return a null pointer when there is an error. The value of tmp could then be equal to 0, and the error
 would be missed.

 + Observed Examples
        Reference                                                                                        Description
 CVE-2023-49286          Chain: function in web caching proxy does not correctly check a return value (CWE-253) leading to a reachable assertion (CWE-617)
 + Potential Mitigations
 Phase: Architecture and Design

 Strategy: Language Selection

 Use a language or compiler that uses exceptions and requires the catching of those exceptions.
 Phase: Implementation

 Properly check all functions which return a value.
 Phase: Implementation

 When designing any function make sure you return a value or throw an exception in case of an error.
 + Memberships
 Section HelpThis MemberOf Relationships table shows additional CWE Categories and Views that reference this weakness as a member. This information is often useful in understanding where a weakness
 fits within the context of external information sources.
     Nature                                                                                                  Type                                                                                               ID         Name
 MemberOf        ViewView - a subset of CWE entries that provides a way of examining CWE content. The two main view structures are Slices (flat lists) and Graphs (containing relationships between entries). 884     CWE
                                                                                                                                                                                                                      Cross-section
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            962     SFP Secondary
                                                                                                                                                                                                                      Cluster:
                                                                                                                                                                                                                      Unchecked
                                                                                                                                                                                                                      Status
                                                                                                                                                                                                                      Condition
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            1167    SEI CERT C
                                                                                                                                                                                                                      Coding Standard
                                                                                                                                                                                                                      - Guidelines
                                                                                                                                                                                                                      12. Error
                                                                                                                                                                                                                      Handling (ERR)
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            1171    SEI CERT C
                                                                                                                                                                                                                      Coding Standard
                                                                                                                                                                                                                      - Guidelines
                                                                                                                                                                                                                      50. POSIX (POS)
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            1412    Comprehensive
                                                                                                                                                                                                                      Categorization:
                                                                                                                                                                                                                      Poor Coding
                                                                                                                                                                                                                      Practices
 + Vulnerability Mapping Notes
 Usage: ALLOWED

 (this CWE ID could be used to map to real-world vulnerabilities)
 Reason: Acceptable-Use

 Rationale:

 This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.
 Comments:

 Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred
 level of abstraction.
 + Taxonomy Mappings
       Mapped Taxonomy Name          Node ID                Fit                                                                 Mapped Node Name
 CLASP                                                                      Misinterpreted function return value
 Software Fault Patterns          SFP4                                      Unchecked Status Condition
 CERT C Secure Coding             ERR33-C        Imprecise                  Detect and handle standard library errors
 CERT C Secure Coding             POS54-C        Imprecise                  Detect and handle POSIX library errors
 + References
 [REF-62] Mark Dowd, John McDonald and Justin Schuh. "The Art of Software Security Assessment". Chapter 7, "Return Value Testing and Interpretation", Page 340. 1st Edition. Addison Wesley. 2006.
 [REF-18] Secure Software, Inc.. "The CLASP Application Security Process". 2005. <https://cwe.mitre.org/documents/sources/TheCLASPApplicationSecurityProcess.pdf>.
 + Content History
                                                                                           + Submissions
               Submission Date                                                      Submitter                                                                Organization
 2006-07-19                                   CLASP
 (CWE Draft 3, 2006-07-19)

                                                                                          + Modifications
              Modification Date                                                     Modifier                                                                 Organization
 2008-09-08                                   CWE Content Team                                                                      MITRE
                                              updated Common_Consequences, Relationships, Other_Notes, Taxonomy_Mappings
 2008-11-24                                   CWE Content Team                                                                      MITRE
                                              updated Demonstrative_Examples
 2009-03-10                                   CWE Content Team                                                                      MITRE
                                              updated Description, Name, Relationships
 2011-06-01                                   CWE Content Team                                                                      MITRE
                                              updated Common_Consequences
 2012-05-11                                   CWE Content Team                                                                      MITRE
                                              updated Common_Consequences, Demonstrative_Examples, References, Relationships
 2012-10-30                                   CWE Content Team                                                                      MITRE
                                              updated Potential_Mitigations
 2014-06-23                                   CWE Content Team                                                                      MITRE
                                              updated Description, Other_Notes
 2014-07-30                                   CWE Content Team                                                                      MITRE
                                              updated Relationships, Taxonomy_Mappings
 2017-11-08                                   CWE Content Team                                                                      MITRE
                                              updated Applicable_Platforms, Demonstrative_Examples, Relationships, Taxonomy_Mappings
 2019-01-03                                   CWE Content Team                                                                      MITRE
                                              updated Relationships
 2020-02-24                                   CWE Content Team                                                                      MITRE
                                              updated References
 2023-01-31                                   CWE Content Team                                                                      MITRE
                                              updated Description
 2023-04-27                                   CWE Content Team                                                                      MITRE
                                              updated Relationships
 2023-06-29                                   CWE Content Team                                                                      MITRE
                                              updated Mapping_Notes
 2024-02-29                                   CWE Content Team                                                                      MITRE
 (CWE 4.14, 2024-02-29)                       updated Observed_Examples
                                                                                       + Previous Entry Names
                 Change Date                                                                                   Previous Entry Name
 2009-03-10                                   Misinterpreted Function Return Value
 More information is available — Please edit the custom filter or select a different filter.
Page Last Updated: February 29, 2024
 
      Site Map | Terms of Use | Manage Cookies | Cookie Notice | Privacy Policy | Contact Us | CWE X-Twitter CWE Mastodon CWE on LinkedIn CWE YouTube channel CWE Out-of-Bounds-Read Podcast CWE
      Blog on Medium blog

MITRE Use of the Common Weakness Enumeration (CWE™) and the associated references from this website are subject to the Terms of Use. CWE is sponsored by the U.S. Department of Homeland         HSSEDI
      Security (DHS) Cybersecurity and Infrastructure Security Agency (CISA) and managed by the Homeland Security Systems Engineering and Development Institute (HSSEDI) which is operated by
      The MITRE Corporation (MITRE). Copyright © 2006–2024, The MITRE Corporation. CWE, CWSS, CWRAF, and the CWE logo are trademarks of The MITRE Corporation.

