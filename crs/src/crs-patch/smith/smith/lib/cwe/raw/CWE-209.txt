CWE

Common Weakness Enumeration

A community-developed list of SW & HW weaknesses that can become vulnerabilities

New to CWE? click here!
CWE Most Important Hardware Weaknesses
CWE Top 25 Most Dangerous Weaknesses
Home > CWE List > CWE- Individual Dictionary Definition (4.14)                                                                                                   ID Lookup: [                    ] [Go]
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  • Home
  • About ▼
    About New to CWE User Stories History Documents FAQs Glossary Compatibility
  • CWE List ▼
    Latest Version Downloads Reports Visualizations Archive
  • Mapping ▼
    Root Cause Mapping Guidance Root Cause Mapping Quick Tips Root Cause Mapping Examples
  • Top-N Lists ▼
    Top 25 Software Top Hardware Top 10 KEV Weaknesses
  • Community ▼
    Community Working Groups & Special Interest Groups Board Board Meeting Minutes CWE Discussion List CWE Discussion Archives Contribute Weakness Content to CWE
  • News ▼
    Current News X-Twitter ● Mastodon ● LinkedIn ● YouTube YouTube Podcast Out of Bounds Read Podcast Medium Medium News Archive
  • Search

 
 CWE Glossary Definition                  x
 
 
 CWE-209: Generation of Error Message Containing Sensitive Information
 
 Weakness ID: 209
 Vulnerability Mapping: ALLOWEDThis CWE ID may be used to map to real-world vulnerabilities
 Abstraction: BaseBase - a weakness that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level
 weaknesses typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.
 View customized information:
 Conceptual For users who are interested in more notional aspects of a weakness. Example: educators, technical writers, and project/program managers. Operational For users who are concerned with the
 practical application and details about the nature of a weakness and how to prevent it from happening. Example: tool developers, security researchers, pen-testers, incident response analysts. Mapping
 Friendly For users who are mapping an issue to CWE/CAPEC IDs, i.e., finding the most appropriate CWE for a specific issue (e.g., a CVE record). Example: tool developers, security researchers. 
 Complete For users who wish to see all available information for the CWE/CAPEC entry. Custom For users who want to customize what details are displayed.
 ×

 Edit Custom Filter

 Conceptual Operational Mapping Friendly Select All
 
 Reset Clear Submit Cancel
 + Description
 The product generates an error message that includes sensitive information about its environment, users, or associated data.
 + Extended Description
 
 The sensitive information may be valuable information on its own (such as a password), or it may be useful for launching other, more serious attacks. The error message may be created in different
 ways:

   • self-generated: the source code explicitly constructs the error message and delivers it
   • externally-generated: the external environment, such as a language interpreter, handles the error and constructs its own message, whose contents are not under direct control by the programmer

 An attacker may use the contents of error messages to help launch another, more focused attack. For example, an attempt to exploit a path traversal weakness (CWE-22) might yield the full pathname of
 the installed application. In turn, this could be used to select the proper number of ".." sequences to navigate to the targeted file. An attack using SQL injection (CWE-89) might not initially
 succeed, but an error message could reveal the malformed query, which would expose query logic and possibly even passwords or other sensitive information used within the query.

 + Relationships
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Research Concepts" (CWE-1000)
     Nature                                                                                                                                                                             Type                                                                                                                                                                           ID            Name
 ChildOf                                                                               ClassClass - a weakness that is described in a very abstract fashion, typically independent of any specific language or technology. More specific than a Pillar Weakness, but more general than a Base                                                                        755     Improper Handling of
                                                                                                                    Weakness. Class level weaknesses typically describe issues in terms of 1 or 2 of the following dimensions: behavior, property, and resource.                                                                                                             Exceptional
                                                                                                                                                                                                                                                                                                                                                                             Conditions
 ChildOf                                                                               ClassClass - a weakness that is described in a very abstract fashion, typically independent of any specific language or technology. More specific than a Pillar Weakness, but more general than a Base                                                                        200     Exposure of
                                                                                                                    Weakness. Class level weaknesses typically describe issues in terms of 1 or 2 of the following dimensions: behavior, property, and resource.                                                                                                             Sensitive
                                                                                                                                                                                                                                                                                                                                                                             Information to an
                                                                                                                                                                                                                                                                                                                                                                             Unauthorized Actor
 ParentOf                                                                                  BaseBase - a weakness that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level weaknesses                                                                           210     Self-generated Error
                                                                                                                          typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                  Message Containing
                                                                                                                                                                                                                                                                                                                                                                             Sensitive
                                                                                                                                                                                                                                                                                                                                                                             Information
 ParentOf                                                                                  BaseBase - a weakness that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level weaknesses                                                                           211     Externally-Generated
                                                                                                                          typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                  Error Message
                                                                                                                                                                                                                                                                                                                                                                             Containing Sensitive
                                                                                                                                                                                                                                                                                                                                                                             Information
 ParentOf                                                                              VariantVariant - a weakness that is linked to a certain type of product, typically involving a specific language or technology. More specific than a Base weakness. Variant level weaknesses typically                                                                        550     Server-generated
                                                                                                                               describe issues in terms of 3 to 5 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                       Error Message
                                                                                                                                                                                                                                                                                                                                                                             Containing Sensitive
                                                                                                                                                                                                                                                                                                                                                                             Information
 PeerOf                                                                                    BaseBase - a weakness that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level weaknesses                                                                           1295    Debug Messages
                                                                                                                          typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                  Revealing
                                                                                                                                                                                                                                                                                                                                                                             Unnecessary
                                                                                                                                                                                                                                                                                                                                                                             Information
 CanFollow                                                                             VariantVariant - a weakness that is linked to a certain type of product, typically involving a specific language or technology. More specific than a Base weakness. Variant level weaknesses typically                                                                        600     Uncaught Exception
                                                                                                                               describe issues in terms of 3 to 5 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                       in Servlet
 CanFollow                                                                                 BaseBase - a weakness that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level weaknesses                                                                           756     Missing Custom Error
                                                                                                                          typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                  Page
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Software Development" (CWE-699)
     Nature                                                       Type                                                     ID                                   Name
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 199     Information Management Errors
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 389     Error Conditions, Return Values, Status Codes
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Weaknesses for Simplified Mapping of Published Vulnerabilities" (CWE-1003)
     Nature                                                                                                                                                                             Type                                                                                                                                                                           ID        Name
 ChildOf                                                                               ClassClass - a weakness that is described in a very abstract fashion, typically independent of any specific language or technology. More specific than a Pillar Weakness, but more general than a Base                                                                        200     Exposure of
                                                                                                                    Weakness. Class level weaknesses typically describe issues in terms of 1 or 2 of the following dimensions: behavior, property, and resource.                                                                                                             Sensitive
                                                                                                                                                                                                                                                                                                                                                                             Information
                                                                                                                                                                                                                                                                                                                                                                             to an
                                                                                                                                                                                                                                                                                                                                                                             Unauthorized
                                                                                                                                                                                                                                                                                                                                                                             Actor
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Architectural Concepts" (CWE-1008)
     Nature                                                       Type                                                     ID                                   Name
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 1015    Limit Access
 + Modes Of Introduction
 Section HelpThe different Modes of Introduction provide information about how and when this weakness may be introduced. The Phase identifies a point in the life cycle at which introduction may occur,
 while the Note provides a typical scenario related to introduction during the given phase.
          Phase                                                                                             Note
 Architecture and Design
 Implementation          REALIZATION: This weakness is caused during implementation of an architectural security tactic.
 System Configuration
 Operation
 + Applicable Platforms
 Section HelpThis listing shows possible areas for which the given weakness could appear. These may be for specific named Languages, Operating Systems, Architectures, Paradigms, Technologies, or a
 class of such platforms. The platform is listed along with how frequently the given weakness appears for that instance.

 Languages

 PHP (Often Prevalent)

 Java (Often Prevalent)

 Class: Not Language-Specific (Undetermined Prevalence)

 + Common Consequences
 Section HelpThis table specifies different individual consequences associated with the weakness. The Scope identifies the application security area that is violated, while the Impact describes the
 negative technical impact that arises if an adversary succeeds in exploiting this weakness. The Likelihood provides information about how likely the specific consequence is expected to be seen
 relative to the other consequences in the list. For example, there may be high likelihood that a weakness will be exploited to achieve a certain impact, but a low likelihood that it will be exploited
 to achieve a different impact.
       Scope                                                                                     Impact                                                                                 Likelihood
                    Technical Impact: Read Application Data
 Confidentiality
                    Often this will either reveal sensitive information which may be used for a later attack or private information stored in the server.
 + Likelihood Of Exploit
 High
 + Demonstrative Examples
 
 Example 1

 In the following example, sensitive information might be printed depending on the exception that occurs.

 (bad code)
 Example Language: Java 
 try {
 /.../
 }
 catch (Exception e) {
 System.out.println(e);
 }

 If an exception related to SQL is handled by the catch, then the output might contain sensitive information such as SQL query structure or private information. If this output is redirected to a web
 user, this may represent a security problem.

 Example 2

 This code tries to open a database connection, and prints any exceptions that occur.

 (bad code)
 Example Language: PHP 
 try {
 openDbConnection();
 }
 //print exception message that includes exception message and configuration file location
 catch (Exception $e) {
 echo 'Caught exception: ', $e->getMessage(), '\n';
 echo 'Check credentials in config file at: ', $Mysql_config_location, '\n';
 }

 If an exception occurs, the printed message exposes the location of the configuration file the script is using. An attacker can use this information to target the configuration file (perhaps
 exploiting a Path Traversal weakness). If the file can be read, the attacker could gain credentials for accessing the database. The attacker may also be able to replace the file with a malicious one,
 causing the application to use an arbitrary database.

 Example 3

 The following code generates an error message that leaks the full pathname of the configuration file.

 (bad code)
 Example Language: Perl 
 $ConfigDir = "/home/myprog/config";
 $uname = GetUserInput("username");

 # avoid CWE-22, CWE-78, others.
 ExitError("Bad hacker!") if ($uname !~ /^\w+$/);
 $file = "$ConfigDir/$uname.txt";
 if (! (-e $file)) {
 ExitError("Error: $file does not exist");
 }
 ...

 If this code is running on a server, such as a web application, then the person making the request should not know what the full pathname of the configuration directory is. By submitting a username
 that does not produce a $file that exists, an attacker could get this pathname. It could then be used to exploit path traversal or symbolic link following problems that may exist elsewhere in the
 application.

 Example 4

 In the example below, the method getUserBankAccount retrieves a bank account object from a database using the supplied username and account number to query the database. If an SQLException is raised
 when querying the database, an error message is created and output to a log file.

 (bad code)
 Example Language: Java 
 public BankAccount getUserBankAccount(String username, String accountNumber) {
 BankAccount userAccount = null;
 String query = null;
 try {
 if (isAuthorizedUser(username)) {
 query = "SELECT * FROM accounts WHERE owner = "
 + username + " AND accountID = " + accountNumber;
 DatabaseManager dbManager = new DatabaseManager();
 Connection conn = dbManager.getConnection();
 Statement stmt = conn.createStatement();
 ResultSet queryResult = stmt.executeQuery(query);
 userAccount = (BankAccount)queryResult.getObject(accountNumber);
 }
 } catch (SQLException ex) {
 String logMessage = "Unable to retrieve account information from database,\nquery: " + query;
 Logger.getLogger(BankManager.class.getName()).log(Level.SEVERE, logMessage, ex);
 }
 return userAccount;
 }

 The error message that is created includes information about the database query that may contain sensitive information about the database or query logic. In this case, the error message will expose
 the table name and column names used in the database. This data could be used to simplify other attacks, such as SQL injection (CWE-89) to directly access the database.

 + Observed Examples
        Reference                                                                                        Description
 CVE-2008-2049           POP3 server reveals a password in an error message after multiple APOP commands are sent. Might be resultant from another weakness.
 CVE-2007-5172           Program reveals password in error message if attacker can trigger certain database errors.
 CVE-2008-4638           Composite: application running with high privileges (CWE-250) allows user to specify a restricted file to process, which generates a parsing error that leaks the contents
                         of the file (CWE-209).
 CVE-2008-1579           Existence of user names can be determined by requesting a nonexistent blog and reading the error message.
 CVE-2007-1409           Direct request to library file in web application triggers pathname leak in error message.
 CVE-2008-3060           Malformed input to login page causes leak of full path when IMAP call fails.
 CVE-2005-0603           Malformed regexp syntax leads to information exposure in error message.
 CVE-2017-9615           verbose logging stores admin credentials in a world-readablelog file
 CVE-2018-1999036        SSH password for private key stored in build log
 + Potential Mitigations
 Phase: Implementation

 Ensure that error messages only contain minimal details that are useful to the intended audience and no one else. The messages need to strike the balance between being too cryptic (which can
 confuse users) or being too detailed (which may reveal more than intended). The messages should not reveal the methods that were used to determine the error. Attackers can use detailed
 information to refine or optimize their original attack, thereby increasing their chances of success.

 If errors must be captured in some detail, record them in log messages, but consider what could occur if the log messages can be viewed by attackers. Highly sensitive information such as
 passwords should never be saved to log files.

 Avoid inconsistent messaging that might accidentally tip off an attacker about internal state, such as whether a user account exists or not.

 Phase: Implementation

 Handle exceptions internally and do not display errors containing potentially sensitive information to a user.
 Phase: Implementation

 Strategy: Attack Surface Reduction

 Use naming conventions and strong types to make it easier to spot when sensitive data is being used. When creating structures, objects, or other complex entities, separate the sensitive and
 non-sensitive data as much as possible.

 Effectiveness: Defense in Depth

 Note: This makes it easier to spot places in the code where data is being used that is unencrypted.
 Phases: Implementation; Build and Compilation

 Strategy: Compilation or Build Hardening

 Debugging information should not make its way into a production release.
 Phases: Implementation; Build and Compilation

 Strategy: Environment Hardening

 Debugging information should not make its way into a production release.
 Phase: System Configuration

 Where available, configure the environment to use less verbose error messages. For example, in PHP, disable the display_errors setting during configuration, or at runtime using the
 error_reporting() function.
 Phase: System Configuration

 Create default error pages or messages that do not leak any information.
 + Weakness Ordinalities
 Ordinality                                                                                       Description
 Primary    (where the weakness exists independent of other weaknesses)
 Resultant  (where the weakness is typically related to the presence of some other weaknesses)
 + Detection Methods
 Manual Analysis

 This weakness generally requires domain-specific interpretation using manual analysis. However, the number of potential error conditions may be too large to cover completely within limited time
 constraints.

 Effectiveness: High

 Automated Analysis

 Automated methods may be able to detect certain idioms automatically, such as exposed stack traces or pathnames, but violation of business rules or privacy requirements is not typically feasible.

 Effectiveness: Moderate

 Automated Dynamic Analysis

 This weakness can be detected using dynamic tools and techniques that interact with the software using large test suites with many diverse inputs, such as fuzz testing (fuzzing), robustness
 testing, and fault injection. The software's operation may slow down, but it should not become unstable, crash, or generate incorrect results.

 Error conditions may be triggered with a stress-test by calling the software simultaneously from a large number of threads or processes, and look for evidence of any unexpected behavior.

 Effectiveness: Moderate

 Manual Dynamic Analysis

 Identify error conditions that are not likely to occur during normal usage and trigger them. For example, run the program under low memory conditions, run with insufficient privileges or
 permissions, interrupt a transaction before it is completed, or disable connectivity to basic network services such as DNS. Monitor the software for any unexpected behavior. If you trigger an
 unhandled exception or similar error that was discovered and handled by the application's environment, it may still indicate unexpected conditions that were not handled by the application itself.
 Automated Static Analysis

 Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without
 having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect "sources" (origins of input) with
 "sinks" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)
 + Memberships
 Section HelpThis MemberOf Relationships table shows additional CWE Categories and Views that reference this weakness as a member. This information is often useful in understanding where a weakness
 fits within the context of external information sources.
     Nature                                                                                                  Type                                                                                               ID          Name
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            717     OWASP Top Ten
                                                                                                                                                                                                                      2007 Category A6
                                                                                                                                                                                                                      - Information
                                                                                                                                                                                                                      Leakage and
                                                                                                                                                                                                                      Improper Error
                                                                                                                                                                                                                      Handling
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            728     OWASP Top Ten
                                                                                                                                                                                                                      2004 Category A7
                                                                                                                                                                                                                      - Improper Error
                                                                                                                                                                                                                      Handling
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            731     OWASP Top Ten
                                                                                                                                                                                                                      2004 Category
                                                                                                                                                                                                                      A10 - Insecure
                                                                                                                                                                                                                      Configuration
                                                                                                                                                                                                                      Management
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            751     2009 Top 25 -
                                                                                                                                                                                                                      Insecure
                                                                                                                                                                                                                      Interaction
                                                                                                                                                                                                                      Between
                                                                                                                                                                                                                      Components
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            801     2010 Top 25 -
                                                                                                                                                                                                                      Insecure
                                                                                                                                                                                                                      Interaction
                                                                                                                                                                                                                      Between
                                                                                                                                                                                                                      Components
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            815     OWASP Top Ten
                                                                                                                                                                                                                      2010 Category A6
                                                                                                                                                                                                                      - Security
                                                                                                                                                                                                                      Misconfiguration
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            851     The CERT Oracle
                                                                                                                                                                                                                      Secure Coding
                                                                                                                                                                                                                      Standard for
                                                                                                                                                                                                                      Java (2011)
                                                                                                                                                                                                                      Chapter 8 -
                                                                                                                                                                                                                      Exceptional
                                                                                                                                                                                                                      Behavior (ERR)
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            867     2011 Top 25 -
                                                                                                                                                                                                                      Weaknesses On
                                                                                                                                                                                                                      the Cusp
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            880     CERT C++ Secure
                                                                                                                                                                                                                      Coding Section
                                                                                                                                                                                                                      12 - Exceptions
                                                                                                                                                                                                                      and Error
                                                                                                                                                                                                                      Handling (ERR)
 MemberOf        ViewView - a subset of CWE entries that provides a way of examining CWE content. The two main view structures are Slices (flat lists) and Graphs (containing relationships between entries). 884     CWE
                                                                                                                                                                                                                      Cross-section
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            933     OWASP Top Ten
                                                                                                                                                                                                                      2013 Category A5
                                                                                                                                                                                                                      - Security
                                                                                                                                                                                                                      Misconfiguration
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            963     SFP Secondary
                                                                                                                                                                                                                      Cluster: Exposed
                                                                                                                                                                                                                      Data
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            1032    OWASP Top Ten
                                                                                                                                                                                                                      2017 Category A6
                                                                                                                                                                                                                      - Security
                                                                                                                                                                                                                      Misconfiguration
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            1348    OWASP Top Ten
                                                                                                                                                                                                                      2021 Category
                                                                                                                                                                                                                      A04:2021 -
                                                                                                                                                                                                                      Insecure Design
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            1417    Comprehensive
                                                                                                                                                                                                                      Categorization:
                                                                                                                                                                                                                      Sensitive
                                                                                                                                                                                                                      Information
                                                                                                                                                                                                                      Exposure
 + Vulnerability Mapping Notes
 Usage: ALLOWED

 (this CWE ID could be used to map to real-world vulnerabilities)
 Reason: Acceptable-Use

 Rationale:

 This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.
 Comments:

 Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred
 level of abstraction.
 + Taxonomy Mappings
       Mapped Taxonomy Name          Node ID                  Fit                                                                 Mapped Node Name
 CLASP                                                                          Accidental leaking of sensitive information through error messages
 OWASP Top Ten 2007               A6             CWE More Specific              Information Leakage and Improper Error Handling
 OWASP Top Ten 2004               A7             CWE More Specific              Improper Error Handling
 OWASP Top Ten 2004               A10            CWE More Specific              Insecure Configuration Management
 The CERT Oracle Secure Coding    ERR01-J                                       Do not allow exceptions to expose sensitive information
 Standard for Java (2011)
 Software Fault Patterns          SFP23                                         Exposed Data
 + Related Attack Patterns
    CAPEC-ID                                                                                     Attack Pattern Name
 CAPEC-215       Fuzzing for application mapping
 CAPEC-463       Padding Oracle Crypto Attack
 CAPEC-54        Query System for Information
 CAPEC-7         Blind SQL Injection
 + References
 [REF-174] Web Application Security Consortium. "Information Leakage". <http://projects.webappsec.org/w/page/13246936/Information%20Leakage>. URL validated: 2023-04-07.
 [REF-175] Brian Chess and Jacob West. "Secure Programming with Static Analysis". Section 9.2, Page 326. Addison-Wesley. 2007.
 [REF-176] Michael Howard and David LeBlanc. "Writing Secure Code". Chapter 16, "General Good Practices." Page 415. 1st Edition. Microsoft Press. 2001-11-13.
 [REF-44] Michael Howard, David LeBlanc and John Viega. "24 Deadly Sins of Software Security". "Sin 11: Failure to Handle Errors Correctly." Page 183. McGraw-Hill. 2010.
 [REF-44] Michael Howard, David LeBlanc and John Viega. "24 Deadly Sins of Software Security". "Sin 12: Information Leakage." Page 191. McGraw-Hill. 2010.
 [REF-179] Johannes Ullrich. "Top 25 Series - Rank 16 - Information Exposure Through an Error Message". SANS Software Security Institute. 2010-03-17. <http://software-security.sans.org/blog/2010/
 03/17/top-25-series-rank-16-information-exposure-through-an-error-message>.
 [REF-62] Mark Dowd, John McDonald and Justin Schuh. "The Art of Software Security Assessment". Chapter 3, "Overly Verbose Error Messages", Page 75. 1st Edition. Addison Wesley. 2006.
 [REF-18] Secure Software, Inc.. "The CLASP Application Security Process". 2005. <https://cwe.mitre.org/documents/sources/TheCLASPApplicationSecurityProcess.pdf>.
 + Content History
                                                                                           + Submissions
        Submission Date                                                  Submitter                                                                        Organization
 2006-07-19                    CLASP
 (CWE Draft 3, 2006-07-19)

                                                                                          + Contributions
       Contribution Date                                                Contributor                                                                       Organization
 2022-07-11                    Nick Johnston
                               Identified incorrect language tag in demonstrative example.
                                                                                          + Modifications
       Modification Date                                                 Modifier                                                                         Organization
 2008-07-01                    Eric Dalci                                                                                    Cigital
                               updated Time_of_Introduction
 2008-08-15                                                                                                                  Veracode
                               Suggested OWASP Top Ten 2004 mapping
 2008-09-08                    CWE Content Team                                                                              MITRE
                               updated Applicable_Platforms, Common_Consequences, Relationships, Other_Notes, Taxonomy_Mappings
 2008-10-14                    CWE Content Team                                                                              MITRE
                               updated Relationships
 2009-01-12                    CWE Content Team                                                                              MITRE
                               updated Demonstrative_Examples, Description, Name, Observed_Examples, Other_Notes, Potential_Mitigations, Relationships, Time_of_Introduction
 2009-03-10                    CWE Content Team                                                                              MITRE
                               updated Demonstrative_Examples, Potential_Mitigations, Relationships
 2009-12-28                    CWE Content Team                                                                              MITRE
                               updated Demonstrative_Examples, Name, Potential_Mitigations, References, Time_of_Introduction
 2010-02-16                    CWE Content Team                                                                              MITRE
                               updated Detection_Factors, References, Relationships
 2010-04-05                    CWE Content Team                                                                              MITRE
                               updated Related_Attack_Patterns
 2010-06-21                    CWE Content Team                                                                              MITRE
                               updated Common_Consequences, Detection_Factors, Potential_Mitigations, References
 2010-09-09                                                                                                                  Veracode
                               Suggested OWASP Top Ten mapping
 2010-09-27                    CWE Content Team                                                                              MITRE
                               updated Potential_Mitigations, Relationships
 2011-03-29                    CWE Content Team                                                                              MITRE
                               updated Demonstrative_Examples, Observed_Examples, Relationships
 2011-06-01                    CWE Content Team                                                                              MITRE
                               updated Relationships, Taxonomy_Mappings
 2011-06-27                    CWE Content Team                                                                              MITRE
                               updated Relationships
 2011-09-13                    CWE Content Team                                                                              MITRE
                               updated Relationships, Taxonomy_Mappings
 2012-05-11                    CWE Content Team                                                                              MITRE
                               updated References, Related_Attack_Patterns, Relationships
 2013-07-17                    CWE Content Team                                                                              MITRE
                               updated References
 2014-06-23                    CWE Content Team                                                                              MITRE
                               updated Relationships
 2014-07-30                    CWE Content Team                                                                              MITRE
                               updated Relationships, Taxonomy_Mappings
 2017-11-08                    CWE Content Team                                                                              MITRE
                               updated Applicable_Platforms, Modes_of_Introduction, References, Relationships, Taxonomy_Mappings
 2018-03-27                    CWE Content Team                                                                              MITRE
                               updated References, Relationships
 2019-01-03                    CWE Content Team                                                                              MITRE
                               updated Taxonomy_Mappings
 2019-06-20                    CWE Content Team                                                                              MITRE
                               updated Relationships
 2019-09-19                    CWE Content Team                                                                              MITRE
                               updated Demonstrative_Examples, Observed_Examples
 2020-02-24                    CWE Content Team                                                                              MITRE
                               updated Applicable_Platforms, Description, Name, Observed_Examples, References, Relationships, Weakness_Ordinalities
 2020-12-10                    CWE Content Team                                                                              MITRE
                               updated Potential_Mitigations, Related_Attack_Patterns
 2021-07-20                    CWE Content Team                                                                              MITRE
                               updated Relationships
 2021-10-28                    CWE Content Team                                                                              MITRE
                               updated Relationships
 2022-10-13                    CWE Content Team                                                                              MITRE
                               updated Demonstrative_Examples
 2023-01-31                    CWE Content Team                                                                              MITRE
                               updated Description
 2023-04-27                    CWE Content Team                                                                              MITRE
                               updated Detection_Factors, References, Relationships
 2023-06-29                    CWE Content Team                                                                              MITRE
                               updated Mapping_Notes
                                                                                       + Previous Entry Names
          Change Date                                                                                   Previous Entry Name
 2009-01-12                    Error Message Information Leaks
 2009-12-28                    Error Message Information Leak
 2020-02-24                    Information Exposure Through an Error Message
 More information is available — Please edit the custom filter or select a different filter.
Page Last Updated: February 29, 2024
 
      Site Map | Terms of Use | Manage Cookies | Cookie Notice | Privacy Policy | Contact Us | CWE X-Twitter CWE Mastodon CWE on LinkedIn CWE YouTube channel CWE Out-of-Bounds-Read Podcast CWE
      Blog on Medium blog

MITRE Use of the Common Weakness Enumeration (CWE™) and the associated references from this website are subject to the Terms of Use. CWE is sponsored by the U.S. Department of Homeland         HSSEDI
      Security (DHS) Cybersecurity and Infrastructure Security Agency (CISA) and managed by the Homeland Security Systems Engineering and Development Institute (HSSEDI) which is operated by
      The MITRE Corporation (MITRE). Copyright © 2006–2024, The MITRE Corporation. CWE, CWSS, CWRAF, and the CWE logo are trademarks of The MITRE Corporation.

