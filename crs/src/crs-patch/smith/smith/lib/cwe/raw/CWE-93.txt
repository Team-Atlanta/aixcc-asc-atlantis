CWE

Common Weakness Enumeration

A community-developed list of SW & HW weaknesses that can become vulnerabilities

New to CWE? click here!
CWE Most Important Hardware Weaknesses
CWE Top 25 Most Dangerous Weaknesses
Home > CWE List > CWE- Individual Dictionary Definition (4.14)                                                                                                   ID Lookup: [                    ] [Go]
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  • Home
  • About ▼
    About New to CWE User Stories History Documents FAQs Glossary Compatibility
  • CWE List ▼
    Latest Version Downloads Reports Visualizations Archive
  • Mapping ▼
    Root Cause Mapping Guidance Root Cause Mapping Quick Tips Root Cause Mapping Examples
  • Top-N Lists ▼
    Top 25 Software Top Hardware Top 10 KEV Weaknesses
  • Community ▼
    Community Working Groups & Special Interest Groups Board Board Meeting Minutes CWE Discussion List CWE Discussion Archives Contribute Weakness Content to CWE
  • News ▼
    Current News X-Twitter ● Mastodon ● LinkedIn ● YouTube YouTube Podcast Out of Bounds Read Podcast Medium Medium News Archive
  • Search

 
 CWE Glossary Definition                  x
 
 
 CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection')
 
 Weakness ID: 93
 Vulnerability Mapping: ALLOWEDThis CWE ID may be used to map to real-world vulnerabilities
 Abstraction: BaseBase - a weakness that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level
 weaknesses typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.
 View customized information:
 Conceptual For users who are interested in more notional aspects of a weakness. Example: educators, technical writers, and project/program managers. Operational For users who are concerned with the
 practical application and details about the nature of a weakness and how to prevent it from happening. Example: tool developers, security researchers, pen-testers, incident response analysts. Mapping
 Friendly For users who are mapping an issue to CWE/CAPEC IDs, i.e., finding the most appropriate CWE for a specific issue (e.g., a CVE record). Example: tool developers, security researchers. 
 Complete For users who wish to see all available information for the CWE/CAPEC entry. Custom For users who want to customize what details are displayed.
 ×

 Edit Custom Filter

 Conceptual Operational Mapping Friendly Select All
 
 Reset Clear Submit Cancel
 + Description
 The product uses CRLF (carriage return line feeds) as a special element, e.g. to separate lines or records, but it does not neutralize or incorrectly neutralizes CRLF sequences from inputs.
 + Relationships
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Research Concepts" (CWE-1000)
     Nature                                                                                                                                                                             Type                                                                                                                                                                           ID         Name
 ChildOf                                                                               ClassClass - a weakness that is described in a very abstract fashion, typically independent of any specific language or technology. More specific than a Pillar Weakness, but more general than a Base                                                                        74      Improper
                                                                                                                    Weakness. Class level weaknesses typically describe issues in terms of 1 or 2 of the following dimensions: behavior, property, and resource.                                                                                                             Neutralization
                                                                                                                                                                                                                                                                                                                                                                             of Special
                                                                                                                                                                                                                                                                                                                                                                             Elements in
                                                                                                                                                                                                                                                                                                                                                                             Output Used by
                                                                                                                                                                                                                                                                                                                                                                             a Downstream
                                                                                                                                                                                                                                                                                                                                                                             Component
                                                                                                                                                                                                                                                                                                                                                                             ('Injection')
 ParentOf                                                                              VariantVariant - a weakness that is linked to a certain type of product, typically involving a specific language or technology. More specific than a Base weakness. Variant level weaknesses typically                                                                        113     Improper
                                                                                                                               describe issues in terms of 3 to 5 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                       Neutralization
                                                                                                                                                                                                                                                                                                                                                                             of CRLF
                                                                                                                                                                                                                                                                                                                                                                             Sequences in
                                                                                                                                                                                                                                                                                                                                                                             HTTP Headers
                                                                                                                                                                                                                                                                                                                                                                             ('HTTP Request
                                                                                                                                                                                                                                                                                                                                                                             /Response
                                                                                                                                                                                                                                                                                                                                                                             Splitting')
 CanPrecede                                                                                BaseBase - a weakness that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level weaknesses                                                                           117     Improper
                                                                                                                          typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                  Output
                                                                                                                                                                                                                                                                                                                                                                             Neutralization
                                                                                                                                                                                                                                                                                                                                                                             for Logs
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Software Development" (CWE-699)
     Nature                                                       Type                                                     ID                                   Name
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 137     Data Neutralization Issues
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Architectural Concepts" (CWE-1008)
     Nature                                                       Type                                                     ID                                   Name
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 1019    Validate Inputs
 + Modes Of Introduction
 Section HelpThe different Modes of Introduction provide information about how and when this weakness may be introduced. The Phase identifies a point in the life cycle at which introduction may occur,
 while the Note provides a typical scenario related to introduction during the given phase.
     Phase                                                                                              Note
 Implementation REALIZATION: This weakness is caused during implementation of an architectural security tactic.
 + Applicable Platforms
 Section HelpThis listing shows possible areas for which the given weakness could appear. These may be for specific named Languages, Operating Systems, Architectures, Paradigms, Technologies, or a
 class of such platforms. The platform is listed along with how frequently the given weakness appears for that instance.

 Languages

 Class: Not Language-Specific (Undetermined Prevalence)

 + Common Consequences
 Section HelpThis table specifies different individual consequences associated with the weakness. The Scope identifies the application security area that is violated, while the Impact describes the
 negative technical impact that arises if an adversary succeeds in exploiting this weakness. The Likelihood provides information about how likely the specific consequence is expected to be seen
 relative to the other consequences in the list. For example, there may be high likelihood that a weakness will be exploited to achieve a certain impact, but a low likelihood that it will be exploited
 to achieve a different impact.
       Scope                                                                                     Impact                                                                                 Likelihood
 Integrity          Technical Impact: Modify Application Data

 + Demonstrative Examples
 
 Example 1

 If user input data that eventually makes it to a log message isn't checked for CRLF characters, it may be possible for an attacker to forge entries in a log file.

 (bad code)
 Example Language: Java 
 logger.info("User's street address: " + request.getParameter("streetAddress"));
 + Observed Examples
        Reference                                                                                        Description
 CVE-2002-1771           CRLF injection enables spam proxy (add mail headers) using email address or name.
 CVE-2002-1783           CRLF injection in API function arguments modify headers for outgoing requests.
 CVE-2004-1513           Spoofed entries in web server log file via carriage returns
 CVE-2006-4624           Chain: inject fake log entries with fake timestamps using CRLF injection
 CVE-2005-1951           Chain: Application accepts CRLF in an object ID, allowing HTTP response splitting.
 CVE-2004-1687           Chain: HTTP response splitting via CRLF in parameter related to URL.
 + Potential Mitigations
 Phase: Implementation

 Avoid using CRLF as a special sequence.
 Phase: Implementation

 Appropriately filter or quote CRLF sequences in user-controlled input.
 + Weakness Ordinalities
 Ordinality                                                                                       Description
 Primary    (where the weakness exists independent of other weaknesses)
 + Detection Methods
 Automated Static Analysis

 Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without
 having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect "sources" (origins of input) with
 "sinks" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)

 Effectiveness: High

 + Memberships
 Section HelpThis MemberOf Relationships table shows additional CWE Categories and Views that reference this weakness as a member. This information is often useful in understanding where a weakness
 fits within the context of external information sources.
     Nature                                                       Type                                                     ID                                   Name
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 713     OWASP Top Ten 2007 Category A2 - Injection Flaws
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 990     SFP Secondary Cluster: Tainted Input to Command
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 1347    OWASP Top Ten 2021 Category A03:2021 - Injection
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 1409    Comprehensive Categorization: Injection
 + Vulnerability Mapping Notes
 Usage: ALLOWED

 (this CWE ID could be used to map to real-world vulnerabilities)
 Reason: Acceptable-Use

 Rationale:

 This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.
 Comments:

 Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred
 level of abstraction.
 + Taxonomy Mappings
       Mapped Taxonomy Name          Node ID                                 Fit                                                                 Mapped Node Name
 PLOVER                                                                                                       CRLF Injection
 OWASP Top Ten 2007               A2             CWE More Specific                                            Injection Flaws
 WASC                             24                                                                          HTTP Request Splitting
 Software Fault Patterns          SFP24                                                                       Tainted input to command
 + Related Attack Patterns
    CAPEC-ID                                                                                     Attack Pattern Name
 CAPEC-15        Command Delimiters
 CAPEC-81        Web Server Logs Tampering
 + References
 [REF-928] Ulf Harnhammar. "CRLF Injection". Bugtraq. 2002-05-07. <http://marc.info/?l=bugtraq&m=102088154213630&w=2>.
 + Content History
                                                                                           + Submissions
          Submission Date                                                   Submitter                                                                      Organization
 2006-07-19                         PLOVER
 (CWE Draft 3, 2006-07-19)

                                                                                          + Modifications
         Modification Date                                                   Modifier                                                                      Organization
 2008-07-01                         Sean Eidemiller                                                                            Cigital
                                    added/updated demonstrative examples
 2008-07-01                         Eric Dalci                                                                                 Cigital
                                    updated Time_of_Introduction
 2008-09-08                         CWE Content Team                                                                           MITRE
                                    updated Relationships, Other_Notes, Taxonomy_Mappings, Weakness_Ordinalities
 2009-03-10                         CWE Content Team                                                                           MITRE
                                    updated References
 2009-05-27                         CWE Content Team                                                                           MITRE
                                    updated Name
 2009-10-29                         CWE Content Team                                                                           MITRE
                                    updated Other_Notes
 2009-12-28                         CWE Content Team                                                                           MITRE
                                    updated Likelihood_of_Exploit
 2010-02-16                         CWE Content Team                                                                           MITRE
                                    updated Related_Attack_Patterns, Taxonomy_Mappings
 2010-04-05                         CWE Content Team                                                                           MITRE
                                    updated Related_Attack_Patterns
 2010-06-21                         CWE Content Team                                                                           MITRE
                                    updated Description, Name
 2011-03-29                         CWE Content Team                                                                           MITRE
                                    updated Description
 2011-06-01                         CWE Content Team                                                                           MITRE
                                    updated Common_Consequences
 2012-05-11                         CWE Content Team                                                                           MITRE
                                    updated Relationships
 2012-10-30                         CWE Content Team                                                                           MITRE
                                    updated Potential_Mitigations
 2014-07-30                         CWE Content Team                                                                           MITRE
                                    updated Relationships, Taxonomy_Mappings
 2015-12-07                         CWE Content Team                                                                           MITRE
                                    updated Relationships
 2017-11-08                         CWE Content Team                                                                           MITRE
                                    updated Applicable_Platforms, Causal_Nature, Likelihood_of_Exploit, Modes_of_Introduction, References, Relationships
 2019-06-20                         CWE Content Team                                                                           MITRE
                                    updated Relationships
 2020-02-24                         CWE Content Team                                                                           MITRE
                                    updated Relationships
 2021-10-28                         CWE Content Team                                                                           MITRE
                                    updated Relationships
 2022-04-28                         CWE Content Team                                                                           MITRE
                                    updated Research_Gaps
 2023-01-31                         CWE Content Team                                                                           MITRE
                                    updated Description
 2023-04-27                         CWE Content Team                                                                           MITRE
                                    updated Detection_Factors, Relationships, Time_of_Introduction
 2023-06-29                         CWE Content Team                                                                           MITRE
                                    updated Mapping_Notes
                                                                                       + Previous Entry Names
            Change Date                                                                                   Previous Entry Name
 2008-04-11                         CRLF Injection
 2009-05-27                         Failure to Sanitize CRLF Sequences (aka 'CRLF Injection')
 2010-06-21                         Failure to Sanitize CRLF Sequences ('CRLF Injection')
 More information is available — Please edit the custom filter or select a different filter.
Page Last Updated: February 29, 2024
 
      Site Map | Terms of Use | Manage Cookies | Cookie Notice | Privacy Policy | Contact Us | CWE X-Twitter CWE Mastodon CWE on LinkedIn CWE YouTube channel CWE Out-of-Bounds-Read Podcast CWE
      Blog on Medium blog

MITRE Use of the Common Weakness Enumeration (CWE™) and the associated references from this website are subject to the Terms of Use. CWE is sponsored by the U.S. Department of Homeland         HSSEDI
      Security (DHS) Cybersecurity and Infrastructure Security Agency (CISA) and managed by the Homeland Security Systems Engineering and Development Institute (HSSEDI) which is operated by
      The MITRE Corporation (MITRE). Copyright © 2006–2024, The MITRE Corporation. CWE, CWSS, CWRAF, and the CWE logo are trademarks of The MITRE Corporation.

