CWE

Common Weakness Enumeration

A community-developed list of SW & HW weaknesses that can become vulnerabilities

New to CWE? click here!
CWE Most Important Hardware Weaknesses
CWE Top 25 Most Dangerous Weaknesses
Home > CWE List > CWE- Individual Dictionary Definition (4.14)                                                                                                   ID Lookup: [                    ] [Go]
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  • Home
  • About ▼
    About New to CWE User Stories History Documents FAQs Glossary Compatibility
  • CWE List ▼
    Latest Version Downloads Reports Visualizations Archive
  • Mapping ▼
    Root Cause Mapping Guidance Root Cause Mapping Quick Tips Root Cause Mapping Examples
  • Top-N Lists ▼
    Top 25 Software Top Hardware Top 10 KEV Weaknesses
  • Community ▼
    Community Working Groups & Special Interest Groups Board Board Meeting Minutes CWE Discussion List CWE Discussion Archives Contribute Weakness Content to CWE
  • News ▼
    Current News X-Twitter ● Mastodon ● LinkedIn ● YouTube YouTube Podcast Out of Bounds Read Podcast Medium Medium News Archive
  • Search

 
 CWE Glossary Definition                  x
 
 
 CWE-625: Permissive Regular Expression
 
 Weakness ID: 625
 Vulnerability Mapping: ALLOWEDThis CWE ID may be used to map to real-world vulnerabilities
 Abstraction: BaseBase - a weakness that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level
 weaknesses typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.
 View customized information:
 Conceptual For users who are interested in more notional aspects of a weakness. Example: educators, technical writers, and project/program managers. Operational For users who are concerned with the
 practical application and details about the nature of a weakness and how to prevent it from happening. Example: tool developers, security researchers, pen-testers, incident response analysts. Mapping
 Friendly For users who are mapping an issue to CWE/CAPEC IDs, i.e., finding the most appropriate CWE for a specific issue (e.g., a CVE record). Example: tool developers, security researchers. 
 Complete For users who wish to see all available information for the CWE/CAPEC entry. Custom For users who want to customize what details are displayed.
 ×

 Edit Custom Filter

 Conceptual Operational Mapping Friendly Select All
 
 Reset Clear Submit Cancel
 + Description
 The product uses a regular expression that does not sufficiently restrict the set of allowed values.
 + Extended Description
 
 This effectively causes the regexp to accept substrings that match the pattern, which produces a partial comparison to the target. In some cases, this can lead to other weaknesses. Common errors
 include:

   • not identifying the beginning and end of the target string
   • using wildcards instead of acceptable character ranges
   • others

 + Relationships
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Research Concepts" (CWE-1000)
     Nature                                                                                                                                                                             Type                                                                                                                                                                           ID       Name
 ChildOf                                                                               ClassClass - a weakness that is described in a very abstract fashion, typically independent of any specific language or technology. More specific than a Pillar Weakness, but more general than a Base                                                                        185     Incorrect
                                                                                                                    Weakness. Class level weaknesses typically describe issues in terms of 1 or 2 of the following dimensions: behavior, property, and resource.                                                                                                             Regular
                                                                                                                                                                                                                                                                                                                                                                             Expression
 ParentOf                                                                              VariantVariant - a weakness that is linked to a certain type of product, typically involving a specific language or technology. More specific than a Base weakness. Variant level weaknesses typically                                                                        777     Regular
                                                                                                                               describe issues in terms of 3 to 5 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                       Expression
                                                                                                                                                                                                                                                                                                                                                                             without
                                                                                                                                                                                                                                                                                                                                                                             Anchors
 PeerOf                                                                                    BaseBase - a weakness that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level weaknesses                                                                           183     Permissive
                                                                                                                          typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                  List of
                                                                                                                                                                                                                                                                                                                                                                             Allowed
                                                                                                                                                                                                                                                                                                                                                                             Inputs
 PeerOf                                                                                    BaseBase - a weakness that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level weaknesses                                                                           184     Incomplete
                                                                                                                          typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                  List of
                                                                                                                                                                                                                                                                                                                                                                             Disallowed
                                                                                                                                                                                                                                                                                                                                                                             Inputs
 PeerOf                                                                                VariantVariant - a weakness that is linked to a certain type of product, typically involving a specific language or technology. More specific than a Base weakness. Variant level weaknesses typically                                                                        187     Partial
                                                                                                                               describe issues in terms of 3 to 5 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                       String
                                                                                                                                                                                                                                                                                                                                                                             Comparison
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Software Development" (CWE-699)
     Nature                                                       Type                                                     ID                                   Name
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 19      Data Processing Errors
 + Modes Of Introduction
 Section HelpThe different Modes of Introduction provide information about how and when this weakness may be introduced. The Phase identifies a point in the life cycle at which introduction may occur,
 while the Note provides a typical scenario related to introduction during the given phase.
     Phase                                                                                              Note
 Implementation This problem is frequently found when the regular expression is used in input validation or security features such as authentication.
 + Applicable Platforms
 Section HelpThis listing shows possible areas for which the given weakness could appear. These may be for specific named Languages, Operating Systems, Architectures, Paradigms, Technologies, or a
 class of such platforms. The platform is listed along with how frequently the given weakness appears for that instance.

 Languages

 Perl (Undetermined Prevalence)

 PHP (Undetermined Prevalence)

 + Common Consequences
 Section HelpThis table specifies different individual consequences associated with the weakness. The Scope identifies the application security area that is violated, while the Impact describes the
 negative technical impact that arises if an adversary succeeds in exploiting this weakness. The Likelihood provides information about how likely the specific consequence is expected to be seen
 relative to the other consequences in the list. For example, there may be high likelihood that a weakness will be exploited to achieve a certain impact, but a low likelihood that it will be exploited
 to achieve a different impact.
       Scope                                                                                     Impact                                                                                 Likelihood
 Access Control     Technical Impact: Bypass Protection Mechanism

 + Demonstrative Examples
 
 Example 1

 The following code takes phone numbers as input, and uses a regular expression to reject invalid phone numbers.

 (bad code)
 Example Language: Perl 
 $phone = GetPhoneNumber();
 if ($phone =~ /\d+-\d+/) {
 # looks like it only has hyphens and digits
 system("lookup-phone $phone");
 }
 else {
 error("malformed number!");
 }

 An attacker could provide an argument such as: "; ls -l ; echo 123-456" This would pass the check, since "123-456" is sufficient to match the "\d+-\d+" portion of the regular expression.

 Example 2

 This code uses a regular expression to validate an IP string prior to using it in a call to the "ping" command.

 (bad code)
 Example Language: Python 
 import subprocess
 import re

 def validate_ip_regex(ip: str):
 ip_validator = re.compile(r"((25[0-5]|(2[0-4]|1\d|[1-9]|)\d)\.?\b){4}")
 if ip_validator.match(ip):
 return ip
 else:
 raise ValueError("IP address does not match valid pattern.")

 def run_ping_regex(ip: str):
 validated = validate_ip_regex(ip)
 # The ping command treats zero-prepended IP addresses as octal
 result = subprocess.call(["ping", validated])
 print(result)

 Since the regular expression does not have anchors (CWE-777), i.e. is unbounded without ^ or $ characters, then prepending a 0 or 0x to the beginning of the IP address will still result in a matched
 regex pattern. Since the ping command supports octal and hex prepended IP addresses, it will use the unexpectedly valid IP address (CWE-1389). For example, "0x63.63.63.63" would be considered
 equivalent to "99.63.63.63". As a result, the attacker could potentially ping systems that the attacker cannot reach directly.

 + Observed Examples
        Reference                                                                                        Description
 CVE-2021-22204          Chain: regex in EXIF processor code does not correctly determine where a string ends (CWE-625), enabling eval injection (CWE-95), as exploited in the wild per CISA KEV.
 CVE-2006-1895           ".*" regexp leads to static code injection
 CVE-2002-2175           insertion of username into regexp results in partial comparison, causing wrong database entry to be updated when one username is a substring of another.
 CVE-2006-4527           regexp intended to verify that all characters are legal, only checks that at least one is legal, enabling file inclusion.
 CVE-2005-1949           Regexp for IP address isn't anchored at the end, allowing appending of shell metacharacters.
 CVE-2002-2109           Regexp isn't "anchored" to the beginning or end, which allows spoofed values that have trusted values as substrings.
 CVE-2006-6511           regexp in .htaccess file allows access of files whose names contain certain substrings
 CVE-2006-6629           allow load of macro files whose names contain certain substrings.
 + Potential Mitigations
 Phase: Implementation

 When applicable, ensure that the regular expression marks beginning and ending string patterns, such as "/^string$/" for Perl.
 + Weakness Ordinalities
 Ordinality                                                                                       Description
 Primary    (where the weakness exists independent of other weaknesses)
 + Detection Methods
 Automated Static Analysis

 Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without
 having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect "sources" (origins of input) with
 "sinks" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)

 Effectiveness: High

 + Memberships
 Section HelpThis MemberOf Relationships table shows additional CWE Categories and Views that reference this weakness as a member. This information is often useful in understanding where a weakness
 fits within the context of external information sources.
     Nature                                                       Type                                                     ID                                   Name
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 845     The CERT Oracle Secure Coding Standard for Java (2011) Chapter 2 -
                                                                                                                                 Input Validation and Data Sanitization (IDS)
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 990     SFP Secondary Cluster: Tainted Input to Command
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 1397    Comprehensive Categorization: Comparison
 + Vulnerability Mapping Notes
 Usage: ALLOWED

 (this CWE ID could be used to map to real-world vulnerabilities)
 Reason: Acceptable-Use

 Rationale:

 This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.
 Comments:

 Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred
 level of abstraction.
 + Taxonomy Mappings
       Mapped Taxonomy Name          Node ID           Fit                                                                 Mapped Node Name
 The CERT Oracle Secure Coding    IDS08-J                         Sanitize untrusted data passed to a regex
 Standard for Java (2011)
 + References
 [REF-62] Mark Dowd, John McDonald and Justin Schuh. "The Art of Software Security Assessment". Chapter 8, "Character Stripping Vulnerabilities", Page 437. 1st Edition. Addison Wesley. 2006.
 + Content History
                                                                                            + Submissions
           Submission Date                                                    Submitter                                                                     Organization
 2007-05-07                           CWE Content Team                                                                           MITRE
 (CWE Draft 6, 2007-05-07)

                                                                                           + Modifications
          Modification Date                                                    Modifier                                                                     Organization
 2008-07-01                           Eric Dalci                                                                                 Cigital
                                      updated Time_of_Introduction
 2008-09-08                           CWE Content Team                                                                           MITRE
                                      updated Applicable_Platforms, Description, Relationships, Observed_Example, Other_Notes, Weakness_Ordinalities
 2009-03-10                           CWE Content Team                                                                           MITRE
                                      updated Description
 2009-05-27                           CWE Content Team                                                                           MITRE
                                      updated Demonstrative_Examples
 2009-07-27                           CWE Content Team                                                                           MITRE
                                      updated Relationships
 2011-06-01                           CWE Content Team                                                                           MITRE
                                      updated Common_Consequences, Relationships, Taxonomy_Mappings
 2012-05-11                           CWE Content Team                                                                           MITRE
                                      updated Demonstrative_Examples, References, Relationships, Taxonomy_Mappings
 2012-10-30                           CWE Content Team                                                                           MITRE
                                      updated Potential_Mitigations
 2014-06-23                           CWE Content Team                                                                           MITRE
                                      updated Modes_of_Introduction, Other_Notes
 2014-07-30                           CWE Content Team                                                                           MITRE
                                      updated Relationships
 2017-11-08                           CWE Content Team                                                                           MITRE
                                      updated Demonstrative_Examples, Observed_Examples
 2019-01-03                           CWE Content Team                                                                           MITRE
                                      updated Taxonomy_Mappings
 2020-02-24                           CWE Content Team                                                                           MITRE
                                      updated Relationships
 2021-03-15                           CWE Content Team                                                                           MITRE
                                      updated Demonstrative_Examples
 2022-06-28                           CWE Content Team                                                                           MITRE
                                      updated Observed_Examples
 2022-10-13                           CWE Content Team                                                                           MITRE
                                      updated Demonstrative_Examples
 2023-04-27                           CWE Content Team                                                                           MITRE
                                      updated Detection_Factors, Relationships
 2023-06-29                           CWE Content Team                                                                           MITRE
                                      updated Mapping_Notes
 More information is available — Please edit the custom filter or select a different filter.
Page Last Updated: February 29, 2024
 
      Site Map | Terms of Use | Manage Cookies | Cookie Notice | Privacy Policy | Contact Us | CWE X-Twitter CWE Mastodon CWE on LinkedIn CWE YouTube channel CWE Out-of-Bounds-Read Podcast CWE
      Blog on Medium blog

MITRE Use of the Common Weakness Enumeration (CWE™) and the associated references from this website are subject to the Terms of Use. CWE is sponsored by the U.S. Department of Homeland         HSSEDI
      Security (DHS) Cybersecurity and Infrastructure Security Agency (CISA) and managed by the Homeland Security Systems Engineering and Development Institute (HSSEDI) which is operated by
      The MITRE Corporation (MITRE). Copyright © 2006–2024, The MITRE Corporation. CWE, CWSS, CWRAF, and the CWE logo are trademarks of The MITRE Corporation.

