CWE

Common Weakness Enumeration

A community-developed list of SW & HW weaknesses that can become vulnerabilities

New to CWE? click here!
CWE Most Important Hardware Weaknesses
CWE Top 25 Most Dangerous Weaknesses
Home > CWE List > CWE- Individual Dictionary Definition (4.14)                                                                                                   ID Lookup: [                    ] [Go]
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  • Home
  • About ▼
    About New to CWE User Stories History Documents FAQs Glossary Compatibility
  • CWE List ▼
    Latest Version Downloads Reports Visualizations Archive
  • Mapping ▼
    Root Cause Mapping Guidance Root Cause Mapping Quick Tips Root Cause Mapping Examples
  • Top-N Lists ▼
    Top 25 Software Top Hardware Top 10 KEV Weaknesses
  • Community ▼
    Community Working Groups & Special Interest Groups Board Board Meeting Minutes CWE Discussion List CWE Discussion Archives Contribute Weakness Content to CWE
  • News ▼
    Current News X-Twitter ● Mastodon ● LinkedIn ● YouTube YouTube Podcast Out of Bounds Read Podcast Medium Medium News Archive
  • Search

 
 CWE Glossary Definition                  x
 
 
 CWE-323: Reusing a Nonce, Key Pair in Encryption
 
 Weakness ID: 323
 Vulnerability Mapping: ALLOWEDThis CWE ID may be used to map to real-world vulnerabilities
 Abstraction: BaseBase - a weakness that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level
 weaknesses typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.
 View customized information:
 Conceptual For users who are interested in more notional aspects of a weakness. Example: educators, technical writers, and project/program managers. Operational For users who are concerned with the
 practical application and details about the nature of a weakness and how to prevent it from happening. Example: tool developers, security researchers, pen-testers, incident response analysts. Mapping
 Friendly For users who are mapping an issue to CWE/CAPEC IDs, i.e., finding the most appropriate CWE for a specific issue (e.g., a CVE record). Example: tool developers, security researchers. 
 Complete For users who wish to see all available information for the CWE/CAPEC entry. Custom For users who want to customize what details are displayed.
 ×

 Edit Custom Filter

 Conceptual Operational Mapping Friendly Select All
 
 Reset Clear Submit Cancel
 + Description
 Nonces should be used for the present occasion and only once.
 + Relationships
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Research Concepts" (CWE-1000)
     Nature                                                                                                                                                                    Type                                                                                                                                                                  ID       Name
 ChildOf                                                                          BaseBase - a weakness that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level weaknesses                                                                  344     Use of
                                                                                                                 typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                         Invariant
                                                                                                                                                                                                                                                                                                                                                           Value in
                                                                                                                                                                                                                                                                                                                                                           Dynamically
                                                                                                                                                                                                                                                                                                                                                           Changing
                                                                                                                                                                                                                                                                                                                                                           Context
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Software Development" (CWE-699)
     Nature                                                       Type                                                     ID                                   Name
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 320     Key Management Errors
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Architectural Concepts" (CWE-1008)
     Nature                                                       Type                                                     ID                                   Name
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 1013    Encrypt Data
 + Background Details
 Nonces are often bundled with a key in a communication exchange to produce a new session key for each exchange.
 + Modes Of Introduction
 Section HelpThe different Modes of Introduction provide information about how and when this weakness may be introduced. The Phase identifies a point in the life cycle at which introduction may occur,
 while the Note provides a typical scenario related to introduction during the given phase.
          Phase                                                                                             Note
 Architecture and Design REALIZATION: This weakness is caused during implementation of an architectural security tactic.
 + Applicable Platforms
 Section HelpThis listing shows possible areas for which the given weakness could appear. These may be for specific named Languages, Operating Systems, Architectures, Paradigms, Technologies, or a
 class of such platforms. The platform is listed along with how frequently the given weakness appears for that instance.

 Languages

 Class: Not Language-Specific (Undetermined Prevalence)

 + Common Consequences
 Section HelpThis table specifies different individual consequences associated with the weakness. The Scope identifies the application security area that is violated, while the Impact describes the
 negative technical impact that arises if an adversary succeeds in exploiting this weakness. The Likelihood provides information about how likely the specific consequence is expected to be seen
 relative to the other consequences in the list. For example, there may be high likelihood that a weakness will be exploited to achieve a certain impact, but a low likelihood that it will be exploited
 to achieve a different impact.
       Scope                                                                                     Impact                                                                                 Likelihood
                    Technical Impact: Bypass Protection Mechanism; Gain Privileges or Assume Identity
 Access Control
                    Potentially a replay attack, in which an attacker could send the same data twice, could be crafted if nonces are allowed to be reused. This could allow a user to
                    send a message which masquerades as a valid message from a valid user.
 + Likelihood Of Exploit
 High
 + Demonstrative Examples
 
 Example 1

 This code takes a password, concatenates it with a nonce, then encrypts it before sending over a network:

 (bad code)
 Example Language: C 
 void encryptAndSendPassword(char *password){
 char *nonce = "bad";
 ...
 char *data = (unsigned char*)malloc(20);
 int para_size = strlen(nonce) + strlen(password);
 char *paragraph = (char*)malloc(para_size);
 SHA1((const unsigned char*)paragraph,parsize,(unsigned char*)data);
 sendEncryptedData(data)
 }

 Because the nonce used is always the same, an attacker can impersonate a trusted party by intercepting and resending the encrypted password. This attack avoids the need to learn the unencrypted
 password.

 Example 2

 This code sends a command to a remote server, using an encrypted password and nonce to prove the command is from a trusted party:

 (bad code)
 Example Language: C++ 
 String command = new String("some command to execute");
 MessageDigest nonce = MessageDigest.getInstance("SHA");
 nonce.update(String.valueOf("bad nonce"));
 byte[] nonce = nonce.digest();
 MessageDigest password = MessageDigest.getInstance("SHA");
 password.update(nonce + "secretPassword");
 byte[] digest = password.digest();
 sendCommand(digest, command)

 Once again the nonce used is always the same. An attacker may be able to replay previous legitimate commands or execute new arbitrary commands.

 + Potential Mitigations
 Phase: Implementation

 Refuse to reuse nonce values.
 Phase: Implementation

 Use techniques such as requiring incrementing, time based and/or challenge response to assure uniqueness of nonces.
 + Memberships
 Section HelpThis MemberOf Relationships table shows additional CWE Categories and Views that reference this weakness as a member. This information is often useful in understanding where a weakness
 fits within the context of external information sources.
     Nature                                                                                                  Type                                                                                               ID         Name
 MemberOf        ViewView - a subset of CWE entries that provides a way of examining CWE content. The two main view structures are Slices (flat lists) and Graphs (containing relationships between entries). 884     CWE
                                                                                                                                                                                                                      Cross-section
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            959     SFP Secondary
                                                                                                                                                                                                                      Cluster: Weak
                                                                                                                                                                                                                      Cryptography
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            1346    OWASP Top Ten
                                                                                                                                                                                                                      2021 Category
                                                                                                                                                                                                                      A02:2021 -
                                                                                                                                                                                                                      Cryptographic
                                                                                                                                                                                                                      Failures
 MemberOf                                                  CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic.                                            1414    Comprehensive
                                                                                                                                                                                                                      Categorization:
                                                                                                                                                                                                                      Randomness
 + Vulnerability Mapping Notes
 Usage: ALLOWED

 (this CWE ID could be used to map to real-world vulnerabilities)
 Reason: Acceptable-Use

 Rationale:

 This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.
 Comments:

 Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred
 level of abstraction.
 + Taxonomy Mappings
       Mapped Taxonomy Name          Node ID         Fit                                                                 Mapped Node Name
 CLASP                                                        Reusing a nonce, key pair in encryption
 + References
 [REF-18] Secure Software, Inc.. "The CLASP Application Security Process". 2005. <https://cwe.mitre.org/documents/sources/TheCLASPApplicationSecurityProcess.pdf>.
 + Content History
                                                                                            + Submissions
                Submission Date                                                      Submitter                                                                Organization
 2006-07-19                                     CLASP
 (CWE Draft 3, 2006-07-19)

                                                                                           + Modifications
               Modification Date                                                      Modifier                                                                Organization
 2008-07-01                                     Eric Dalci                                                                           Cigital
                                                updated Time_of_Introduction
 2008-09-08                                     CWE Content Team                                                                     MITRE
                                                updated Background_Details, Common_Consequences, Relationships, Taxonomy_Mappings
 2011-06-01                                     CWE Content Team                                                                     MITRE
                                                updated Common_Consequences
 2012-05-11                                     CWE Content Team                                                                     MITRE
                                                updated Relationships
 2012-10-30                                     CWE Content Team                                                                     MITRE
                                                updated Demonstrative_Examples, Potential_Mitigations
 2014-07-30                                     CWE Content Team                                                                     MITRE
                                                updated Relationships
 2017-11-08                                     CWE Content Team                                                                     MITRE
                                                updated Applicable_Platforms, Modes_of_Introduction, Relationships
 2019-06-20                                     CWE Content Team                                                                     MITRE
                                                updated Type
 2020-02-24                                     CWE Content Team                                                                     MITRE
                                                updated References
 2021-10-28                                     CWE Content Team                                                                     MITRE
                                                updated Relationships
 2023-04-27                                     CWE Content Team                                                                     MITRE
                                                updated Relationships, Type
 2023-06-29                                     CWE Content Team                                                                     MITRE
                                                updated Mapping_Notes
 More information is available — Please edit the custom filter or select a different filter.
Page Last Updated: February 29, 2024
 
      Site Map | Terms of Use | Manage Cookies | Cookie Notice | Privacy Policy | Contact Us | CWE X-Twitter CWE Mastodon CWE on LinkedIn CWE YouTube channel CWE Out-of-Bounds-Read Podcast CWE
      Blog on Medium blog

MITRE Use of the Common Weakness Enumeration (CWE™) and the associated references from this website are subject to the Terms of Use. CWE is sponsored by the U.S. Department of Homeland         HSSEDI
      Security (DHS) Cybersecurity and Infrastructure Security Agency (CISA) and managed by the Homeland Security Systems Engineering and Development Institute (HSSEDI) which is operated by
      The MITRE Corporation (MITRE). Copyright © 2006–2024, The MITRE Corporation. CWE, CWSS, CWRAF, and the CWE logo are trademarks of The MITRE Corporation.

