CWE

Common Weakness Enumeration

A community-developed list of SW & HW weaknesses that can become vulnerabilities

New to CWE? click here!
CWE Most Important Hardware Weaknesses
CWE Top 25 Most Dangerous Weaknesses
Home > CWE List > CWE- Individual Dictionary Definition (4.14)                                                                                                   ID Lookup: [                    ] [Go]
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  • Home
  • About ▼
    About New to CWE User Stories History Documents FAQs Glossary Compatibility
  • CWE List ▼
    Latest Version Downloads Reports Visualizations Archive
  • Mapping ▼
    Root Cause Mapping Guidance Root Cause Mapping Quick Tips Root Cause Mapping Examples
  • Top-N Lists ▼
    Top 25 Software Top Hardware Top 10 KEV Weaknesses
  • Community ▼
    Community Working Groups & Special Interest Groups Board Board Meeting Minutes CWE Discussion List CWE Discussion Archives Contribute Weakness Content to CWE
  • News ▼
    Current News X-Twitter ● Mastodon ● LinkedIn ● YouTube YouTube Podcast Out of Bounds Read Podcast Medium Medium News Archive
  • Search

 
 CWE Glossary Definition                  x
 
 
 CWE-178: Improper Handling of Case Sensitivity
 
 Weakness ID: 178
 Vulnerability Mapping: ALLOWEDThis CWE ID may be used to map to real-world vulnerabilities
 Abstraction: BaseBase - a weakness that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level
 weaknesses typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.
 View customized information:
 Conceptual For users who are interested in more notional aspects of a weakness. Example: educators, technical writers, and project/program managers. Operational For users who are concerned with the
 practical application and details about the nature of a weakness and how to prevent it from happening. Example: tool developers, security researchers, pen-testers, incident response analysts. Mapping
 Friendly For users who are mapping an issue to CWE/CAPEC IDs, i.e., finding the most appropriate CWE for a specific issue (e.g., a CVE record). Example: tool developers, security researchers. 
 Complete For users who wish to see all available information for the CWE/CAPEC entry. Custom For users who want to customize what details are displayed.
 ×

 Edit Custom Filter

 Conceptual Operational Mapping Friendly Select All
 
 Reset Clear Submit Cancel
 + Description
 The product does not properly account for differences in case sensitivity when accessing or determining the properties of a resource, leading to inconsistent results.
 + Extended Description
 
 Improperly handled case sensitive data can lead to several possible consequences, including:

   • case-insensitive passwords reducing the size of the key space, making brute force attacks easier
   • bypassing filters or access controls using alternate names
   • multiple interpretation errors using alternate names.

 + Relationships
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Research Concepts" (CWE-1000)
     Nature                                                                                                                                                                             Type                                                                                                                                                                           ID            Name
 ChildOf                                                                               ClassClass - a weakness that is described in a very abstract fashion, typically independent of any specific language or technology. More specific than a Pillar Weakness, but more general than a Base                                                                        706     Use of
                                                                                                                    Weakness. Class level weaknesses typically describe issues in terms of 1 or 2 of the following dimensions: behavior, property, and resource.                                                                                                             Incorrectly-Resolved
                                                                                                                                                                                                                                                                                                                                                                             Name or Reference
 PeerOf                                                                                    BaseBase - a weakness that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level weaknesses                                                                           1289    Improper Validation
                                                                                                                          typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                  of Unsafe
                                                                                                                                                                                                                                                                                                                                                                             Equivalence in Input
 CanPrecede                                                                                BaseBase - a weakness that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level weaknesses                                                                           289     Authentication
                                                                                                                          typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                  Bypass by Alternate
                                                                                                                                                                                                                                                                                                                                                                             Name
 CanPrecede                                                                            VariantVariant - a weakness that is linked to a certain type of product, typically involving a specific language or technology. More specific than a Base weakness. Variant level weaknesses typically                                                                        433     Unparsed Raw Web
                                                                                                                               describe issues in terms of 3 to 5 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                       Content Delivery
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Software Development" (CWE-699)
     Nature                                                       Type                                                     ID                                   Name
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 19      Data Processing Errors
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Weaknesses for Simplified Mapping of Published Vulnerabilities" (CWE-1003)
     Nature                                                                                                                                                                             Type                                                                                                                                                                           ID            Name
 ChildOf                                                                               ClassClass - a weakness that is described in a very abstract fashion, typically independent of any specific language or technology. More specific than a Pillar Weakness, but more general than a Base                                                                        706     Use of
                                                                                                                    Weakness. Class level weaknesses typically describe issues in terms of 1 or 2 of the following dimensions: behavior, property, and resource.                                                                                                             Incorrectly-Resolved
                                                                                                                                                                                                                                                                                                                                                                             Name or Reference
 + Modes Of Introduction
 Section HelpThe different Modes of Introduction provide information about how and when this weakness may be introduced. The Phase identifies a point in the life cycle at which introduction may occur,
 while the Note provides a typical scenario related to introduction during the given phase.
     Phase                                                                                              Note
 Implementation
 + Applicable Platforms
 Section HelpThis listing shows possible areas for which the given weakness could appear. These may be for specific named Languages, Operating Systems, Architectures, Paradigms, Technologies, or a
 class of such platforms. The platform is listed along with how frequently the given weakness appears for that instance.

 Languages

 Class: Not Language-Specific (Undetermined Prevalence)

 + Common Consequences
 Section HelpThis table specifies different individual consequences associated with the weakness. The Scope identifies the application security area that is violated, while the Impact describes the
 negative technical impact that arises if an adversary succeeds in exploiting this weakness. The Likelihood provides information about how likely the specific consequence is expected to be seen
 relative to the other consequences in the list. For example, there may be high likelihood that a weakness will be exploited to achieve a certain impact, but a low likelihood that it will be exploited
 to achieve a different impact.
       Scope                                                                                     Impact                                                                                 Likelihood
 Access Control     Technical Impact: Bypass Protection Mechanism

 + Demonstrative Examples
 
 Example 1

 In the following example, an XSS neutralization method intends to replace script tags in user-supplied input with a safe equivalent:

 (bad code)
 Example Language: Java 
 public String preventXSS(String input, String mask) {
 return input.replaceAll("script", mask);
 }

 The code only works when the "script" tag is in all lower-case, forming an incomplete denylist (CWE-184). Equivalent tags such as "SCRIPT" or "ScRiPt" will not be neutralized by this method, allowing
 an XSS attack.

 + Observed Examples
        Reference                                                                                        Description
 CVE-2000-0499           Application server allows attackers to bypass execution of a jsp page and read the source code using an upper case JSP extension in the request.
 CVE-2000-0497           The server is case sensitive, so filetype handlers treat .jsp and .JSP as different extensions. JSP source code may be read because .JSP defaults to the filetype "text".
 CVE-2000-0498           The server is case sensitive, so filetype handlers treat .jsp and .JSP as different extensions. JSP source code may be read because .JSP defaults to the filetype "text".
 CVE-2001-0766           A URL that contains some characters whose case is not matched by the server's filters may bypass access restrictions because the case-insensitive file system will then
                         handle the request after it bypasses the case sensitive filter.
 CVE-2001-0795           Server allows remote attackers to obtain source code of CGI scripts via URLs that contain MS-DOS conventions such as (1) upper case letters or (2) 8.3 file names.
 CVE-2001-1238           Task Manager does not allow local users to end processes with uppercase letters named (1) winlogon.exe, (2) csrss.exe, (3) smss.exe and (4) services.exe via the Process
                         tab which could allow local users to install Trojan horses that cannot be stopped.
 CVE-2003-0411           chain: Code was ported from a case-sensitive Unix platform to a case-insensitive Windows platform where filetype handlers treat .jsp and .JSP as different extensions. JSP
                         source code may be read because .JSP defaults to the filetype "text".
 CVE-2002-0485           Leads to interpretation error
 CVE-1999-0239           Directories may be listed because lower case web requests are not properly handled by the server.
 CVE-2005-0269           File extension check in forum software only verifies extensions that contain all lowercase letters, which allows remote attackers to upload arbitrary files via file
                         extensions that include uppercase letters.
 CVE-2004-1083           Web server restricts access to files in a case sensitive manner, but the filesystem accesses files in a case insensitive manner, which allows remote attackers to read
                         privileged files using alternate capitalization.
 CVE-2002-2119           Case insensitive passwords lead to search space reduction.
 CVE-2004-2214           HTTP server allows bypass of access restrictions using URIs with mixed case.
 CVE-2004-2154           Mixed upper/lowercase allows bypass of ACLs.
 CVE-2005-4509           Bypass malicious script detection by using tokens that aren't case sensitive.
 CVE-2002-1820           Mixed case problem allows "admin" to have "Admin" rights (alternate name property).
 CVE-2007-3365           Chain: uppercase file extensions causes web server to return script source code instead of executing the script.
 CVE-2021-39155          Chain: A microservice integration and management platform compares the hostname in the HTTP Host header in a case-sensitive way (CWE-178, CWE-1289), allowing bypass of the
                         authorization policy (CWE-863) using a hostname with mixed case or other variations.
 + Potential Mitigations
 Phase: Architecture and Design

 Strategy: Input Validation

 Avoid making decisions based on names of resources (e.g. files) if those resources can have alternate names.
 Phase: Implementation

 Strategy: Input Validation

 Assume all input is malicious. Use an "accept known good" input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not
 strictly conform to specifications, or transform it into something that does.

 When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency
 across related fields, and conformance to business rules. As an example of business rule logic, "boat" may be syntactically valid because it only contains alphanumeric characters, but it is not
 valid if the input is only expected to contain colors such as "red" or "blue."

 Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers
 enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.

 Phase: Implementation

 Strategy: Input Validation

 Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input
 twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked.
 + Functional Areas
 
   • File Processing

 + Affected Resources
 
   • File or Directory

 + Memberships
 Section HelpThis MemberOf Relationships table shows additional CWE Categories and Views that reference this weakness as a member. This information is often useful in understanding where a weakness
 fits within the context of external information sources.
     Nature                                                       Type                                                     ID                                   Name
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 992     SFP Secondary Cluster: Faulty Input Transformation
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 1416    Comprehensive Categorization: Resource Lifecycle Management
 + Vulnerability Mapping Notes
 Usage: ALLOWED

 (this CWE ID could be used to map to real-world vulnerabilities)
 Reason: Acceptable-Use

 Rationale:

 This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.
 Comments:

 Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred
 level of abstraction.
 + Notes
 
 Research Gap

 These are probably under-studied in Windows and Mac environments, where file names are case-insensitive and thus are subject to equivalence manipulations involving case.
 + Taxonomy Mappings
       Mapped Taxonomy Name          Node ID        Fit                                                                Mapped Node Name
 PLOVER                                                    Case Sensitivity (lowercase, uppercase, mixed case)
 + Content History
                                                                                           + Submissions
                Submission Date                                                      Submitter                                                               Organization
 2006-07-19                                     PLOVER
 (CWE Draft 3, 2006-07-19)

                                                                                          + Modifications
               Modification Date                                                     Modifier                                                                Organization
 2008-07-01                                     Sean Eidemiller                                                                     Cigital
                                                added/updated demonstrative examples
 2008-07-01                                     Eric Dalci                                                                          Cigital
                                                updated Potential_Mitigations, Time_of_Introduction
 2008-09-08                                     CWE Content Team                                                                    MITRE
                                                updated Description, Relationships, Observed_Example, Taxonomy_Mappings
 2008-10-14                                     CWE Content Team                                                                    MITRE
                                                updated Observed_Examples
 2008-11-24                                     CWE Content Team                                                                    MITRE
                                                updated Observed_Examples
 2009-03-10                                     CWE Content Team                                                                    MITRE
                                                updated Description
 2009-07-27                                     CWE Content Team                                                                    MITRE
                                                updated Potential_Mitigations
 2010-06-21                                     CWE Content Team                                                                    MITRE
                                                updated Demonstrative_Examples
 2010-12-13                                     CWE Content Team                                                                    MITRE
                                                updated Name
 2011-03-29                                     CWE Content Team                                                                    MITRE
                                                updated Potential_Mitigations
 2011-06-01                                     CWE Content Team                                                                    MITRE
                                                updated Common_Consequences
 2012-05-11                                     CWE Content Team                                                                    MITRE
                                                updated Observed_Examples, Relationships
 2012-10-30                                     CWE Content Team                                                                    MITRE
                                                updated Demonstrative_Examples, Potential_Mitigations
 2014-07-30                                     CWE Content Team                                                                    MITRE
                                                updated Relationships
 2017-11-08                                     CWE Content Team                                                                    MITRE
                                                updated Affected_Resources, Applicable_Platforms, Functional_Areas, Relationships
 2019-06-20                                     CWE Content Team                                                                    MITRE
                                                updated Relationships
 2020-02-24                                     CWE Content Team                                                                    MITRE
                                                updated Potential_Mitigations, Relationships
 2020-06-25                                     CWE Content Team                                                                    MITRE
                                                updated Demonstrative_Examples, Potential_Mitigations, Relationships
 2021-03-15                                     CWE Content Team                                                                    MITRE
                                                updated Demonstrative_Examples
 2022-10-13                                     CWE Content Team                                                                    MITRE
                                                updated Observed_Examples
 2023-01-31                                     CWE Content Team                                                                    MITRE
                                                updated Description
 2023-04-27                                     CWE Content Team                                                                    MITRE
                                                updated Relationships
 2023-06-29                                     CWE Content Team                                                                    MITRE
                                                updated Mapping_Notes
                                                                                       + Previous Entry Names
                  Change Date                                                                                   Previous Entry Name
 2008-04-11                                     Case Sensitivity (Lowercase, Uppercase, Mixed Case)
 2010-12-13                                     Failure to Resolve Case Sensitivity
 More information is available — Please edit the custom filter or select a different filter.
Page Last Updated: February 29, 2024
 
      Site Map | Terms of Use | Manage Cookies | Cookie Notice | Privacy Policy | Contact Us | CWE X-Twitter CWE Mastodon CWE on LinkedIn CWE YouTube channel CWE Out-of-Bounds-Read Podcast CWE
      Blog on Medium blog

MITRE Use of the Common Weakness Enumeration (CWE™) and the associated references from this website are subject to the Terms of Use. CWE is sponsored by the U.S. Department of Homeland         HSSEDI
      Security (DHS) Cybersecurity and Infrastructure Security Agency (CISA) and managed by the Homeland Security Systems Engineering and Development Institute (HSSEDI) which is operated by
      The MITRE Corporation (MITRE). Copyright © 2006–2024, The MITRE Corporation. CWE, CWSS, CWRAF, and the CWE logo are trademarks of The MITRE Corporation.

