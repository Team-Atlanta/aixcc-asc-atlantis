CWE

Common Weakness Enumeration

A community-developed list of SW & HW weaknesses that can become vulnerabilities

New to CWE? click here!
CWE Most Important Hardware Weaknesses
CWE Top 25 Most Dangerous Weaknesses
Home > CWE List > CWE- Individual Dictionary Definition (4.14)                                                                                                   ID Lookup: [                    ] [Go]
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  • Home
  • About ▼
    About New to CWE User Stories History Documents FAQs Glossary Compatibility
  • CWE List ▼
    Latest Version Downloads Reports Visualizations Archive
  • Mapping ▼
    Root Cause Mapping Guidance Root Cause Mapping Quick Tips Root Cause Mapping Examples
  • Top-N Lists ▼
    Top 25 Software Top Hardware Top 10 KEV Weaknesses
  • Community ▼
    Community Working Groups & Special Interest Groups Board Board Meeting Minutes CWE Discussion List CWE Discussion Archives Contribute Weakness Content to CWE
  • News ▼
    Current News X-Twitter ● Mastodon ● LinkedIn ● YouTube YouTube Podcast Out of Bounds Read Podcast Medium Medium News Archive
  • Search

 
 CWE Glossary Definition                  x
 
 
 CWE-639: Authorization Bypass Through User-Controlled Key
 
 Weakness ID: 639
 Vulnerability Mapping: ALLOWEDThis CWE ID may be used to map to real-world vulnerabilities
 Abstraction: BaseBase - a weakness that is still mostly independent of a resource or technology, but with sufficient details to provide specific methods for detection and prevention. Base level
 weaknesses typically describe issues in terms of 2 or 3 of the following dimensions: behavior, property, technology, language, and resource.
 View customized information:
 Conceptual For users who are interested in more notional aspects of a weakness. Example: educators, technical writers, and project/program managers. Operational For users who are concerned with the
 practical application and details about the nature of a weakness and how to prevent it from happening. Example: tool developers, security researchers, pen-testers, incident response analysts. Mapping
 Friendly For users who are mapping an issue to CWE/CAPEC IDs, i.e., finding the most appropriate CWE for a specific issue (e.g., a CVE record). Example: tool developers, security researchers. 
 Complete For users who wish to see all available information for the CWE/CAPEC entry. Custom For users who want to customize what details are displayed.
 ×

 Edit Custom Filter

 Conceptual Operational Mapping Friendly Select All
 
 Reset Clear Submit Cancel
 + Description
 The system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.
 + Extended Description
 
 Retrieval of a user record occurs in the system based on some key value that is under user control. The key would typically identify a user-related record stored in the system and would be used to
 lookup that record for presentation to the user. It is likely that an attacker would have to be an authenticated user in the system. However, the authorization process would not properly check the
 data access operation to ensure that the authenticated user performing the operation has sufficient entitlements to perform the requested data access, hence bypassing any other authorization checks
 present in the system.

 For example, attackers can look at places where user specific data is retrieved (e.g. search screens) and determine whether the key for the item being looked up is controllable externally. The key
 may be a hidden field in the HTML form field, might be passed as a URL parameter or as an unencrypted cookie variable, then in each of these cases it will be possible to tamper with the key value.

 One manifestation of this weakness is when a system uses sequential or otherwise easily-guessable session IDs that would allow one user to easily switch to another user's session and read/modify
 their data.

 + Alternate Terms
 Insecure Direct Object Reference / IDOR:  The "Insecure Direct Object Reference" term, as described in the OWASP Top Ten, is broader than this CWE because it also covers path traversal (CWE-22).
                                           Within the context of vulnerability theory, there is a similarity between the OWASP concept and CWE-706: Use of Incorrectly-Resolved Name or Reference.
 Broken Object Level Authorization / BOLA: BOLA is used in the 2019 OWASP API Security Top 10 and is said to be the same as IDOR.
         Horizontal Authorization:         "Horizontal Authorization" is used to describe situations in which two users have the same privilege level, but must be prevented from accessing each
                                           other's resources. This is fairly common when using key-based access to resources in a multi-user context.
 + Relationships
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Research Concepts" (CWE-1000)
     Nature                                                                                                                                                                             Type                                                                                                                                                                           ID         Name
 ChildOf                                                                               ClassClass - a weakness that is described in a very abstract fashion, typically independent of any specific language or technology. More specific than a Pillar Weakness, but more general than a Base                                                                        863     Incorrect
                                                                                                                    Weakness. Class level weaknesses typically describe issues in terms of 1 or 2 of the following dimensions: behavior, property, and resource.                                                                                                             Authorization
 ParentOf                                                                              VariantVariant - a weakness that is linked to a certain type of product, typically involving a specific language or technology. More specific than a Base weakness. Variant level weaknesses typically                                                                        566     Authorization
                                                                                                                               describe issues in terms of 3 to 5 of the following dimensions: behavior, property, technology, language, and resource.                                                                                                                       Bypass Through
                                                                                                                                                                                                                                                                                                                                                                             User-Controlled
                                                                                                                                                                                                                                                                                                                                                                             SQL Primary Key
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Software Development" (CWE-699)
     Nature                                                       Type                                                     ID                                   Name
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 1212    Authorization Errors
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 840     Business Logic Errors
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Weaknesses for Simplified Mapping of Published Vulnerabilities" (CWE-1003)
     Nature                                                                                                                                                                             Type                                                                                                                                                                           ID        Name
 ChildOf                                                                               ClassClass - a weakness that is described in a very abstract fashion, typically independent of any specific language or technology. More specific than a Pillar Weakness, but more general than a Base                                                                        863     Incorrect
                                                                                                                    Weakness. Class level weaknesses typically describe issues in terms of 1 or 2 of the following dimensions: behavior, property, and resource.                                                                                                             Authorization
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "Architectural Concepts" (CWE-1008)
     Nature                                                       Type                                                     ID                                   Name
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 1011    Authorize Actors
 Section HelpThis table shows the weaknesses and high level categories that are related to this weakness. These relationships are defined as ChildOf, ParentOf, MemberOf and give insight to similar
 items that may exist at higher and lower levels of abstraction. In addition, relationships such as PeerOf and CanAlsoBe are defined to show similar weaknesses that the user may want to explore.
 + Relevant to the view "CISQ Data Protection Measures" (CWE-1340)
     Nature                                                                                                                                                                               Type                                                                                                                                                                            ID      Name
 ChildOf                                                                                 PillarPillar - a weakness that is the most abstract type of weakness and represents a theme for all class/base/variant weaknesses related to it. A Pillar is different from a Category as a Pillar is                                                                          284     Improper
                                                                                                                    still technically a type of weakness that describes a mistake, while a Category represents a common characteristic used to group related things.                                                                                                            Access
                                                                                                                                                                                                                                                                                                                                                                                Control
 + Modes Of Introduction
 Section HelpThe different Modes of Introduction provide information about how and when this weakness may be introduced. The Phase identifies a point in the life cycle at which introduction may occur,
 while the Note provides a typical scenario related to introduction during the given phase.
          Phase                                                                                             Note
 Architecture and Design REALIZATION: This weakness is caused during implementation of an architectural security tactic.
 + Applicable Platforms
 Section HelpThis listing shows possible areas for which the given weakness could appear. These may be for specific named Languages, Operating Systems, Architectures, Paradigms, Technologies, or a
 class of such platforms. The platform is listed along with how frequently the given weakness appears for that instance.

 Languages

 Class: Not Language-Specific (Undetermined Prevalence)

 + Common Consequences
 Section HelpThis table specifies different individual consequences associated with the weakness. The Scope identifies the application security area that is violated, while the Impact describes the
 negative technical impact that arises if an adversary succeeds in exploiting this weakness. The Likelihood provides information about how likely the specific consequence is expected to be seen
 relative to the other consequences in the list. For example, there may be high likelihood that a weakness will be exploited to achieve a certain impact, but a low likelihood that it will be exploited
 to achieve a different impact.
       Scope                                                                                     Impact                                                                                 Likelihood
                    Technical Impact: Bypass Protection Mechanism
 Access Control
                    Access control checks for specific user data or functionality can be bypassed.
                    Technical Impact: Gain Privileges or Assume Identity
 Access Control
                    Horizontal escalation of privilege is possible (one user can view/modify information of another user).
                    Technical Impact: Gain Privileges or Assume Identity
 Access Control
                    Vertical escalation of privilege is possible if the user-controlled key is actually a flag that indicates administrator status, allowing the attacker to gain
                    administrative access.
 + Likelihood Of Exploit
 High
 + Demonstrative Examples
 
 Example 1

 The following code uses a parameterized statement, which escapes metacharacters and prevents SQL injection vulnerabilities, to construct and execute a SQL query that searches for an invoice matching
 the specified identifier [1]. The identifier is selected from a list of all invoices associated with the current authenticated user.

 (bad code)
 Example Language: C# 
 ...
 conn = new SqlConnection(_ConnectionString);
 conn.Open();
 int16 id = System.Convert.ToInt16(invoiceID.Text);
 SqlCommand query = new SqlCommand( "SELECT * FROM invoices WHERE id = @id", conn);
 query.Parameters.AddWithValue("@id", id);
 SqlDataReader objReader = objCommand.ExecuteReader();
 ...

 The problem is that the developer has not considered all of the possible values of id. Although the interface generates a list of invoice identifiers that belong to the current user, an attacker can
 bypass this interface to request any desired invoice. Because the code in this example does not check to ensure that the user has permission to access the requested invoice, it will display any
 invoice, even if it does not belong to the current user.

 + Observed Examples
        Reference                                                                                        Description
 CVE-2021-36539          An educational application does not appropriately restrict file IDs to a particular user. The attacker can brute-force guess IDs, indicating IDOR.
 + Potential Mitigations
 Phase: Architecture and Design

 For each and every data access, ensure that the user has sufficient privilege to access the record that is being requested.
 Phases: Architecture and Design; Implementation

 Make sure that the key that is used in the lookup of a specific user's record is not controllable externally by the user or that any tampering can be detected.
 Phase: Architecture and Design

 Use encryption in order to make it more difficult to guess other legitimate values of the key or associate a digital signature with the key so that the server can verify that there has been no
 tampering.
 + Detection Methods
 Automated Static Analysis

 Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without
 having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect "sources" (origins of input) with
 "sinks" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)

 Effectiveness: High

 + Memberships
 Section HelpThis MemberOf Relationships table shows additional CWE Categories and Views that reference this weakness as a member. This information is often useful in understanding where a weakness
 fits within the context of external information sources.
     Nature                                                       Type                                                     ID                                   Name
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 715     OWASP Top Ten 2007 Category A4 - Insecure Direct Object Reference
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 723     OWASP Top Ten 2004 Category A2 - Broken Access Control
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 813     OWASP Top Ten 2010 Category A4 - Insecure Direct Object References
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 932     OWASP Top Ten 2013 Category A4 - Insecure Direct Object References
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 945     SFP Secondary Cluster: Insecure Resource Access
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 1031    OWASP Top Ten 2017 Category A5 - Broken Access Control
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 1345    OWASP Top Ten 2021 Category A01:2021 - Broken Access Control
 MemberOf        CategoryCategory - a CWE entry that contains a set of other entries that share a common characteristic. 1396    Comprehensive Categorization: Access Control
 + Vulnerability Mapping Notes
 Usage: ALLOWED

 (this CWE ID could be used to map to real-world vulnerabilities)
 Reason: Acceptable-Use

 Rationale:

 This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.
 Comments:

 Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred
 level of abstraction.
 + Content History
                                                                                           + Submissions
            Submission Date                                                    Submitter                                                                    Organization
 2008-01-30                             Evgeny Lebanidze                                                                         Cigital
 (CWE Draft 8, 2008-01-30)

                                                                                          + Modifications
           Modification Date                                                    Modifier                                                                    Organization
 2008-09-08                             CWE Content Team                                                                         MITRE
                                        updated Common_Consequences, Relationships, Type
 2008-10-14                             CWE Content Team                                                                         MITRE
                                        updated Description
 2009-03-10                             CWE Content Team                                                                         MITRE
                                        updated Relationships
 2009-05-27                             CWE Content Team                                                                         MITRE
                                        updated Relationships
 2009-10-29                             CWE Content Team                                                                         MITRE
                                        updated Common_Consequences
 2010-06-21                             CWE Content Team                                                                         MITRE
                                        updated Relationships
 2011-03-29                             CWE Content Team                                                                         MITRE
                                        updated Alternate_Terms, Applicable_Platforms, Description, Name, Potential_Mitigations, Relationships
 2011-06-01                             CWE Content Team                                                                         MITRE
                                        updated Common_Consequences, Relationships
 2012-05-11                             CWE Content Team                                                                         MITRE
                                        updated Relationships
 2013-02-21                             CWE Content Team                                                                         MITRE
                                        updated Alternate_Terms, Common_Consequences
 2013-07-17                             CWE Content Team                                                                         MITRE
                                        updated Relationships
 2014-07-30                             CWE Content Team                                                                         MITRE
                                        updated Relationships
 2017-11-08                             CWE Content Team                                                                         MITRE
                                        updated Description, Enabling_Factors_for_Exploitation, Modes_of_Introduction, Relationships
 2018-03-27                             CWE Content Team                                                                         MITRE
                                        updated Relationships
 2019-06-20                             CWE Content Team                                                                         MITRE
                                        updated Relationships
 2020-02-24                             CWE Content Team                                                                         MITRE
                                        updated Relationships
 2020-06-25                             CWE Content Team                                                                         MITRE
                                        updated Alternate_Terms
 2020-12-10                             CWE Content Team                                                                         MITRE
                                        updated Relationships
 2021-03-15                             CWE Content Team                                                                         MITRE
                                        updated Alternate_Terms
 2021-10-28                             CWE Content Team                                                                         MITRE
                                        updated Relationships
 2023-04-27                             CWE Content Team                                                                         MITRE
                                        updated Detection_Factors, Relationships
 2023-06-29                             CWE Content Team                                                                         MITRE
                                        updated Mapping_Notes
 2023-10-26                             CWE Content Team                                                                         MITRE
                                        updated Observed_Examples
 2024-02-29                             CWE Content Team                                                                         MITRE
 (CWE 4.14, 2024-02-29)                 updated Demonstrative_Examples
                                                                                       + Previous Entry Names
              Change Date                                                                                   Previous Entry Name
 2011-03-29                             Access Control Bypass Through User-Controlled Key
 More information is available — Please edit the custom filter or select a different filter.
Page Last Updated: February 29, 2024
 
      Site Map | Terms of Use | Manage Cookies | Cookie Notice | Privacy Policy | Contact Us | CWE X-Twitter CWE Mastodon CWE on LinkedIn CWE YouTube channel CWE Out-of-Bounds-Read Podcast CWE
      Blog on Medium blog

MITRE Use of the Common Weakness Enumeration (CWE™) and the associated references from this website are subject to the Terms of Use. CWE is sponsored by the U.S. Department of Homeland         HSSEDI
      Security (DHS) Cybersecurity and Infrastructure Security Agency (CISA) and managed by the Homeland Security Systems Engineering and Development Institute (HSSEDI) which is operated by
      The MITRE Corporation (MITRE). Copyright © 2006–2024, The MITRE Corporation. CWE, CWSS, CWRAF, and the CWE logo are trademarks of The MITRE Corporation.

