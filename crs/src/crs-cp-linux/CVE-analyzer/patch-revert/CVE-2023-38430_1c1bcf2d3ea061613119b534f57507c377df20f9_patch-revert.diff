diff --git a/fs/smb/server/connection.c b/fs/smb/server/connection.c
index 2a717d158f02..e11d4a1e63d7 100644
--- a/fs/smb/server/connection.c
+++ b/fs/smb/server/connection.c
@@ -364,6 +364,8 @@ int ksmbd_conn_handler_loop(void *p)
 			break;
 
 		memcpy(conn->request_buf, hdr_buf, sizeof(hdr_buf));
+		if (!ksmbd_smb_request(conn))
+			break;
 
 		/*
 		 * We already read 4 bytes to find out PDU size, now
@@ -381,9 +383,6 @@ int ksmbd_conn_handler_loop(void *p)
 			continue;
 		}
 
-		if (!ksmbd_smb_request(conn))
-			break;
-
 		if (((struct smb2_hdr *)smb2_get_msg(conn->request_buf))->ProtocolId ==
 		    SMB2_PROTO_NUMBER) {
 			if (pdu_size < SMB2_MIN_SUPPORTED_HEADER_SIZE)
diff --git a/fs/smb/server/smb_common.c b/fs/smb/server/smb_common.c
index 569e5eecdf3d..af0c2a9b8529 100644
--- a/fs/smb/server/smb_common.c
+++ b/fs/smb/server/smb_common.c
@@ -158,19 +158,7 @@ int ksmbd_verify_smb_message(struct ksmbd_work *work)
  */
 bool ksmbd_smb_request(struct ksmbd_conn *conn)
 {
-	__le32 *proto = (__le32 *)smb2_get_msg(conn->request_buf);
-
-	if (*proto == SMB2_COMPRESSION_TRANSFORM_ID) {
-		pr_err_ratelimited("smb2 compression not support yet");
-		return false;
-	}
-
-	if (*proto != SMB1_PROTO_NUMBER &&
-	    *proto != SMB2_PROTO_NUMBER &&
-	    *proto != SMB2_TRANSFORM_PROTO_NUM)
-		return false;
-
-	return true;
+	return conn->request_buf[0] == 0;
 }
 
 static bool supported_protocol(int idx)
