diff --git a/fs/ocfs2/cluster/nodemanager.c b/fs/ocfs2/cluster/nodemanager.c
index da64c3a20eeb..a51200ece93d 100644
--- a/fs/ocfs2/cluster/nodemanager.c
+++ b/fs/ocfs2/cluster/nodemanager.c
@@ -40,9 +40,6 @@ char *o2nm_fence_method_desc[O2NM_FENCE_METHODS] = {
 		"panic",	/* O2NM_FENCE_PANIC */
 };
 
-static inline void o2nm_lock_subsystem(void);
-static inline void o2nm_unlock_subsystem(void);
-
 struct o2nm_node *o2nm_get_node_by_num(u8 node_num)
 {
 	struct o2nm_node *node = NULL;
@@ -184,10 +181,7 @@ static struct o2nm_cluster *to_o2nm_cluster_from_node(struct o2nm_node *node)
 {
 	/* through the first node_set .parent
 	 * mycluster/nodes/mynode == o2nm_cluster->o2nm_node_group->o2nm_node */
-	if (node->nd_item.ci_parent)
-		return to_o2nm_cluster(node->nd_item.ci_parent->ci_parent);
-	else
-		return NULL;
+	return to_o2nm_cluster(node->nd_item.ci_parent->ci_parent);
 }
 
 enum {
@@ -200,7 +194,7 @@ static ssize_t o2nm_node_num_store(struct config_item *item, const char *page,
 				   size_t count)
 {
 	struct o2nm_node *node = to_o2nm_node(item);
-	struct o2nm_cluster *cluster;
+	struct o2nm_cluster *cluster = to_o2nm_cluster_from_node(node);
 	unsigned long tmp;
 	char *p = (char *)page;
 	int ret = 0;
@@ -220,13 +214,6 @@ static ssize_t o2nm_node_num_store(struct config_item *item, const char *page,
 	    !test_bit(O2NM_NODE_ATTR_PORT, &node->nd_set_attributes))
 		return -EINVAL; /* XXX */
 
-	o2nm_lock_subsystem();
-	cluster = to_o2nm_cluster_from_node(node);
-	if (!cluster) {
-		o2nm_unlock_subsystem();
-		return -EINVAL;
-	}
-
 	write_lock(&cluster->cl_nodes_lock);
 	if (cluster->cl_nodes[tmp])
 		ret = -EEXIST;
@@ -239,8 +226,6 @@ static ssize_t o2nm_node_num_store(struct config_item *item, const char *page,
 		set_bit(tmp, cluster->cl_nodes_bitmap);
 	}
 	write_unlock(&cluster->cl_nodes_lock);
-	o2nm_unlock_subsystem();
-
 	if (ret)
 		return ret;
 
@@ -284,7 +269,7 @@ static ssize_t o2nm_node_ipv4_address_store(struct config_item *item,
 					    size_t count)
 {
 	struct o2nm_node *node = to_o2nm_node(item);
-	struct o2nm_cluster *cluster;
+	struct o2nm_cluster *cluster = to_o2nm_cluster_from_node(node);
 	int ret, i;
 	struct rb_node **p, *parent;
 	unsigned int octets[4];
@@ -301,13 +286,6 @@ static ssize_t o2nm_node_ipv4_address_store(struct config_item *item,
 		be32_add_cpu(&ipv4_addr, octets[i] << (i * 8));
 	}
 
-	o2nm_lock_subsystem();
-	cluster = to_o2nm_cluster_from_node(node);
-	if (!cluster) {
-		o2nm_unlock_subsystem();
-		return -EINVAL;
-	}
-
 	ret = 0;
 	write_lock(&cluster->cl_nodes_lock);
 	if (o2nm_node_ip_tree_lookup(cluster, ipv4_addr, &p, &parent))
@@ -320,8 +298,6 @@ static ssize_t o2nm_node_ipv4_address_store(struct config_item *item,
 		rb_insert_color(&node->nd_ip_node, &cluster->cl_node_ip_tree);
 	}
 	write_unlock(&cluster->cl_nodes_lock);
-	o2nm_unlock_subsystem();
-
 	if (ret)
 		return ret;
 
@@ -339,7 +315,7 @@ static ssize_t o2nm_node_local_store(struct config_item *item, const char *page,
 				     size_t count)
 {
 	struct o2nm_node *node = to_o2nm_node(item);
-	struct o2nm_cluster *cluster;
+	struct o2nm_cluster *cluster = to_o2nm_cluster_from_node(node);
 	unsigned long tmp;
 	char *p = (char *)page;
 	ssize_t ret;
@@ -357,26 +333,17 @@ static ssize_t o2nm_node_local_store(struct config_item *item, const char *page,
 	    !test_bit(O2NM_NODE_ATTR_PORT, &node->nd_set_attributes))
 		return -EINVAL; /* XXX */
 
-	o2nm_lock_subsystem();
-	cluster = to_o2nm_cluster_from_node(node);
-	if (!cluster) {
-		ret = -EINVAL;
-		goto out;
-	}
-
 	/* the only failure case is trying to set a new local node
 	 * when a different one is already set */
 	if (tmp && tmp == cluster->cl_has_local &&
-	    cluster->cl_local_node != node->nd_num) {
-		ret = -EBUSY;
-		goto out;
-	}
+	    cluster->cl_local_node != node->nd_num)
+		return -EBUSY;
 
 	/* bring up the rx thread if we're setting the new local node. */
 	if (tmp && !cluster->cl_has_local) {
 		ret = o2net_start_listening(node);
 		if (ret)
-			goto out;
+			return ret;
 	}
 
 	if (!tmp && cluster->cl_has_local &&
@@ -391,11 +358,7 @@ static ssize_t o2nm_node_local_store(struct config_item *item, const char *page,
 		cluster->cl_local_node = node->nd_num;
 	}
 
-	ret = count;
-
-out:
-	o2nm_unlock_subsystem();
-	return ret;
+	return count;
 }
 
 CONFIGFS_ATTR(o2nm_node_, num);
@@ -775,16 +738,6 @@ static struct o2nm_cluster_group o2nm_cluster_group = {
 	},
 };
 
-static inline void o2nm_lock_subsystem(void)
-{
-	mutex_lock(&o2nm_cluster_group.cs_subsys.su_mutex);
-}
-
-static inline void o2nm_unlock_subsystem(void)
-{
-	mutex_unlock(&o2nm_cluster_group.cs_subsys.su_mutex);
-}
-
 int o2nm_depend_item(struct config_item *item)
 {
 	return configfs_depend_item(&o2nm_cluster_group.cs_subsys, item);
