diff --git a/net/sched/cls_u32.c b/net/sched/cls_u32.c
index fcba6c43ba50..cf5649292ee0 100644
--- a/net/sched/cls_u32.c
+++ b/net/sched/cls_u32.c
@@ -386,19 +386,14 @@ static int u32_init(struct tcf_proto *tp)
 	return 0;
 }
 
-static void __u32_destroy_key(struct tc_u_knode *n)
+static int u32_destroy_key(struct tc_u_knode *n, bool free_pf)
 {
 	struct tc_u_hnode *ht = rtnl_dereference(n->ht_down);
 
 	tcf_exts_destroy(&n->exts);
+	tcf_exts_put_net(&n->exts);
 	if (ht && --ht->refcnt == 0)
 		kfree(ht);
-	kfree(n);
-}
-
-static void u32_destroy_key(struct tc_u_knode *n, bool free_pf)
-{
-	tcf_exts_put_net(&n->exts);
 #ifdef CONFIG_CLS_U32_PERF
 	if (free_pf)
 		free_percpu(n->pf);
@@ -407,7 +402,8 @@ static void u32_destroy_key(struct tc_u_knode *n, bool free_pf)
 	if (free_pf)
 		free_percpu(n->pcpu_success);
 #endif
-	__u32_destroy_key(n);
+	kfree(n);
+	return 0;
 }
 
 /* u32_delete_key_rcu should be called when free'ing a copied
@@ -904,13 +900,13 @@ static int u32_change(struct net *net, struct sk_buff *in_skb,
 				    extack);
 
 		if (err) {
-			__u32_destroy_key(new);
+			u32_destroy_key(new, false);
 			return err;
 		}
 
 		err = u32_replace_hw_knode(tp, new, flags, extack);
 		if (err) {
-			__u32_destroy_key(new);
+			u32_destroy_key(new, false);
 			return err;
 		}
 
