diff --git a/drivers/usb/storage/uas-detect.h b/drivers/usb/storage/uas-detect.h
index a155cd02bce2..f58caa9e6a27 100644
--- a/drivers/usb/storage/uas-detect.h
+++ b/drivers/usb/storage/uas-detect.h
@@ -9,8 +9,7 @@ static int uas_is_interface(struct usb_host_interface *intf)
 		intf->desc.bInterfaceProtocol == USB_PR_UAS);
 }
 
-static struct usb_host_interface *uas_find_uas_alt_setting(
-		struct usb_interface *intf)
+static int uas_find_uas_alt_setting(struct usb_interface *intf)
 {
 	int i;
 
@@ -18,10 +17,10 @@ static struct usb_host_interface *uas_find_uas_alt_setting(
 		struct usb_host_interface *alt = &intf->altsetting[i];
 
 		if (uas_is_interface(alt))
-			return alt;
+			return alt->desc.bAlternateSetting;
 	}
 
-	return NULL;
+	return -ENODEV;
 }
 
 static int uas_find_endpoints(struct usb_host_interface *alt,
@@ -59,14 +58,14 @@ static int uas_use_uas_driver(struct usb_interface *intf,
 	struct usb_device *udev = interface_to_usbdev(intf);
 	struct usb_hcd *hcd = bus_to_hcd(udev->bus);
 	unsigned long flags = id->driver_info;
-	struct usb_host_interface *alt;
-	int r;
+	int r, alt;
+
 
 	alt = uas_find_uas_alt_setting(intf);
-	if (!alt)
+	if (alt < 0)
 		return 0;
 
-	r = uas_find_endpoints(alt, eps);
+	r = uas_find_endpoints(&intf->altsetting[alt], eps);
 	if (r < 0)
 		return 0;
 
diff --git a/drivers/usb/storage/uas.c b/drivers/usb/storage/uas.c
index 63cf981ed81c..cfb1e3bbd434 100644
--- a/drivers/usb/storage/uas.c
+++ b/drivers/usb/storage/uas.c
@@ -873,14 +873,14 @@ MODULE_DEVICE_TABLE(usb, uas_usb_ids);
 static int uas_switch_interface(struct usb_device *udev,
 				struct usb_interface *intf)
 {
-	struct usb_host_interface *alt;
+	int alt;
 
 	alt = uas_find_uas_alt_setting(intf);
-	if (!alt)
-		return -ENODEV;
+	if (alt < 0)
+		return alt;
 
-	return usb_set_interface(udev, alt->desc.bInterfaceNumber,
-			alt->desc.bAlternateSetting);
+	return usb_set_interface(udev,
+			intf->altsetting[0].desc.bInterfaceNumber, alt);
 }
 
 static int uas_configure_endpoints(struct uas_dev_info *devinfo)
