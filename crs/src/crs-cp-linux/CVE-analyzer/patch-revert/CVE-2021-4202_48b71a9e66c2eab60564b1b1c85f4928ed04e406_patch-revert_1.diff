diff --git a/include/net/nfc/nci_core.h b/include/net/nfc/nci_core.h
index ea8595651c38..a964daedc17b 100644
--- a/include/net/nfc/nci_core.h
+++ b/include/net/nfc/nci_core.h
@@ -30,7 +30,6 @@ enum nci_flag {
 	NCI_UP,
 	NCI_DATA_EXCHANGE,
 	NCI_DATA_EXCHANGE_TO,
-	NCI_UNREG,
 };
 
 /* NCI device states */
diff --git a/net/nfc/nci/core.c b/net/nfc/nci/core.c
index d2537383a3e8..1dd0269c1a72 100644
--- a/net/nfc/nci/core.c
+++ b/net/nfc/nci/core.c
@@ -476,11 +476,6 @@ static int nci_open_device(struct nci_dev *ndev)
 
 	mutex_lock(&ndev->req_lock);
 
-	if (test_bit(NCI_UNREG, &ndev->flags)) {
-		rc = -ENODEV;
-		goto done;
-	}
-
 	if (test_bit(NCI_UP, &ndev->flags)) {
 		rc = -EALREADY;
 		goto done;
@@ -553,10 +548,6 @@ static int nci_open_device(struct nci_dev *ndev)
 static int nci_close_device(struct nci_dev *ndev)
 {
 	nci_req_cancel(ndev, ENODEV);
-
-	/* This mutex needs to be held as a barrier for
-	 * caller nci_unregister_device
-	 */
 	mutex_lock(&ndev->req_lock);
 
 	if (!test_and_clear_bit(NCI_UP, &ndev->flags)) {
@@ -594,8 +585,8 @@ static int nci_close_device(struct nci_dev *ndev)
 
 	del_timer_sync(&ndev->cmd_timer);
 
-	/* Clear flags except NCI_UNREG */
-	ndev->flags &= BIT(NCI_UNREG);
+	/* Clear flags */
+	ndev->flags = 0;
 
 	mutex_unlock(&ndev->req_lock);
 
@@ -1278,12 +1269,6 @@ void nci_unregister_device(struct nci_dev *ndev)
 {
 	struct nci_conn_info *conn_info, *n;
 
-	/* This set_bit is not protected with specialized barrier,
-	 * However, it is fine because the mutex_lock(&ndev->req_lock);
-	 * in nci_close_device() will help to emit one.
-	 */
-	set_bit(NCI_UNREG, &ndev->flags);
-
 	nci_close_device(ndev);
 
 	destroy_workqueue(ndev->cmd_wq);
