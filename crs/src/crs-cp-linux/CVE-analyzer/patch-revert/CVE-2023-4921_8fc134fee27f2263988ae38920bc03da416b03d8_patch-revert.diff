diff --git a/net/sched/sch_plug.c b/net/sched/sch_plug.c
index 35f49edf63db..ea8c4a7174bb 100644
--- a/net/sched/sch_plug.c
+++ b/net/sched/sch_plug.c
@@ -207,7 +207,7 @@ static struct Qdisc_ops plug_qdisc_ops __read_mostly = {
 	.priv_size   =       sizeof(struct plug_sched_data),
 	.enqueue     =       plug_enqueue,
 	.dequeue     =       plug_dequeue,
-	.peek        =       qdisc_peek_dequeued,
+	.peek        =       qdisc_peek_head,
 	.init        =       plug_init,
 	.change      =       plug_change,
 	.reset       =	     qdisc_reset_queue,
diff --git a/net/sched/sch_qfq.c b/net/sched/sch_qfq.c
index 546c10adcacd..1a25752f1a9a 100644
--- a/net/sched/sch_qfq.c
+++ b/net/sched/sch_qfq.c
@@ -974,13 +974,10 @@ static void qfq_update_eligible(struct qfq_sched *q)
 }
 
 /* Dequeue head packet of the head class in the DRR queue of the aggregate. */
-static struct sk_buff *agg_dequeue(struct qfq_aggregate *agg,
-				   struct qfq_class *cl, unsigned int len)
+static void agg_dequeue(struct qfq_aggregate *agg,
+			struct qfq_class *cl, unsigned int len)
 {
-	struct sk_buff *skb = qdisc_dequeue_peeked(cl->qdisc);
-
-	if (!skb)
-		return NULL;
+	qdisc_dequeue_peeked(cl->qdisc);
 
 	cl->deficit -= (int) len;
 
@@ -990,8 +987,6 @@ static struct sk_buff *agg_dequeue(struct qfq_aggregate *agg,
 		cl->deficit += agg->lmax;
 		list_move_tail(&cl->alist, &agg->active);
 	}
-
-	return skb;
 }
 
 static inline struct sk_buff *qfq_peek_skb(struct qfq_aggregate *agg,
@@ -1137,18 +1132,11 @@ static struct sk_buff *qfq_dequeue(struct Qdisc *sch)
 	if (!skb)
 		return NULL;
 
-	sch->q.qlen--;
-
-	skb = agg_dequeue(in_serv_agg, cl, len);
-
-	if (!skb) {
-		sch->q.qlen++;
-		return NULL;
-	}
-
 	qdisc_qstats_backlog_dec(sch, skb);
+	sch->q.qlen--;
 	qdisc_bstats_update(sch, skb);
 
+	agg_dequeue(in_serv_agg, cl, len);
 	/* If lmax is lowered, through qfq_change_class, for a class
 	 * owning pending packets with larger size than the new value
 	 * of lmax, then the following condition may hold.
