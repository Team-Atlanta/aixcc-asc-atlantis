diff --git a/fs/timerfd.c b/fs/timerfd.c
index 384fa759a563..c173cc196175 100644
--- a/fs/timerfd.c
+++ b/fs/timerfd.c
@@ -40,7 +40,6 @@ struct timerfd_ctx {
 	short unsigned settime_flags;	/* to show in fdinfo */
 	struct rcu_head rcu;
 	struct list_head clist;
-	spinlock_t cancel_lock;
 	bool might_cancel;
 };
 
@@ -113,7 +112,7 @@ void timerfd_clock_was_set(void)
 	rcu_read_unlock();
 }
 
-static void __timerfd_remove_cancel(struct timerfd_ctx *ctx)
+static void timerfd_remove_cancel(struct timerfd_ctx *ctx)
 {
 	if (ctx->might_cancel) {
 		ctx->might_cancel = false;
@@ -123,13 +122,6 @@ static void __timerfd_remove_cancel(struct timerfd_ctx *ctx)
 	}
 }
 
-static void timerfd_remove_cancel(struct timerfd_ctx *ctx)
-{
-	spin_lock(&ctx->cancel_lock);
-	__timerfd_remove_cancel(ctx);
-	spin_unlock(&ctx->cancel_lock);
-}
-
 static bool timerfd_canceled(struct timerfd_ctx *ctx)
 {
 	if (!ctx->might_cancel || ctx->moffs != KTIME_MAX)
@@ -140,7 +132,6 @@ static bool timerfd_canceled(struct timerfd_ctx *ctx)
 
 static void timerfd_setup_cancel(struct timerfd_ctx *ctx, int flags)
 {
-	spin_lock(&ctx->cancel_lock);
 	if ((ctx->clockid == CLOCK_REALTIME ||
 	     ctx->clockid == CLOCK_REALTIME_ALARM) &&
 	    (flags & TFD_TIMER_ABSTIME) && (flags & TFD_TIMER_CANCEL_ON_SET)) {
@@ -150,10 +141,9 @@ static void timerfd_setup_cancel(struct timerfd_ctx *ctx, int flags)
 			list_add_rcu(&ctx->clist, &cancel_list);
 			spin_unlock(&cancel_lock);
 		}
-	} else {
-		__timerfd_remove_cancel(ctx);
+	} else if (ctx->might_cancel) {
+		timerfd_remove_cancel(ctx);
 	}
-	spin_unlock(&ctx->cancel_lock);
 }
 
 static ktime_t timerfd_get_remaining(struct timerfd_ctx *ctx)
@@ -410,7 +400,6 @@ SYSCALL_DEFINE2(timerfd_create, int, clockid, int, flags)
 		return -ENOMEM;
 
 	init_waitqueue_head(&ctx->wqh);
-	spin_lock_init(&ctx->cancel_lock);
 	ctx->clockid = clockid;
 
 	if (isalarm(ctx))
