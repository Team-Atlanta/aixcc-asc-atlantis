[
  {
    "pass": false,
    "name": "CVE-2022-32250-2",
    "groundTruth": "INPUT ::= SIZE { size: 4 }\n          TABLE { size: SIZE }\n          LOOP\n\nLOOP ::= LOOP_BODY\n         LOOP_BODY\n\nLOOP_BODY ::= TABLE_SIZE { size: 4 }\n              TABLE { size: TABLE_SIZE }\n              SET_SIZE { size: 4 }\n              SET { size: SET_SIZE }\n",
    "generated": "// INPUT is the start of the input format.\nINPUT ::=         TABLE_NAME \n                  SET_EXPR_LOOKUP[2]\n\n// TABLE_NAME will be a length-prefixed string.\nTABLE_NAME ::=    TABLE_NAME_SIZE { size: 4 } \n                  TABLE_NAME_STR { size: TABLE_NAME_SIZE }\n\n// SET_EXPR_LOOKUP will be iterate 2 times according to the control flow of the target program.\nSET_EXPR_LOOKUP ::=   TABLE_NAME \n                      SET_NAME\n\n// SET_NAME will be a length-prefixed string.\nSET_NAME ::=      SET_NAME_SIZE { size: 4 } \n                  SET_NAME_STR { size: SET_NAME_SIZE }"
  },
  {
    "pass": false,
    "name": "linux_test_harness",
    "groundTruth": "INPUT ::= COMMAND_CNT { size: 4 }\n          COMMAND[COMMAND_CNT]\n\nCOMMAND ::= SEND_PACKET\n          | SEND_NETLINK_PACKET\n\nSEND_PACKET ::= OPCODE { size: 4, value: 0 }\n                SIZE { size: 4 }\n                FLAGS { size: 4 }\n                PACKET_DATA { size: SIZE }\n\nSEND_NETLINK_PACKET ::= OPCODE { size: 4, value: 1 }\n                        MSG_TYPE { size: 4 }\n                        MSG_FLAGS { size: 4 }\n                        NETLINK_PROTOCOL { size: 4 }\n                        SIZE { size: 4 }\n                        DATA { size: SIZE }\n",
    "generated": "// INPUT is the start of the input format.\n// INPUT will be [CMD_CNT (4byte) ][ CMD_CNT chunks of CMD]\nINPUT ::= CMD_CNT { size: 4 }\n          CMD[CMD_CNT]\n\nCMD   ::= CMD1 \n        | CMD2\n\nCMD1  ::= CMD_CODE { size: 4, value: 0 } // CMD_CODE value 0 comes from the first command in the switch statement\n          DATA_SIZE { size: 4 }       \n          FLAGS { size: 4 } \n          DATA { size: DATA_SIZE }\n\nCMD2  ::= CMD_CODE { size: 4, value: 1 } // CMD_CODE value 1 comes from the second command in the switch statement\n          NETLINK_PACKET[N]\n\n// NETLINK_PACKET will consist of [MSG_TYPE (4 bytes)][MSG_FLAGS (4 bytes)][PROTOCOL (4 bytes)][PKT_SIZE (4 bytes)][PKT_DATA (PKT_SIZE bytes)]\nNETLINK_PACKET ::= MSG_TYPE { size: 4 }\n                   MSG_FLAGS { size: 4 }\n                   PROTOCOL { size: 4 }\n                   PKT_SIZE { size: 4 }\n                   PKT_DATA { size: PKT_SIZE }"
  },
  {
    "pass": false,
    "name": "CROMU-00001",
    "groundTruth": "INPUT ::= COMMAND_CNT { size: 4 }\n          COMMAND[COMMAND_CNT]\n\nCOMMAND ::= IOCTL_CREATE\n          | IOCTL_LOGIN\n          | IOCTL_EXIT\n          | IOCTL_SEND_MSG\n          | IOCTL_READ_MSG\n          | IOCTL_LIST_MSG\n          | IOCTL_DEL_MSG\n          | IOCTL_LOGOUT\n\nIOCTL_CREATE ::= OPCODE { size: 4, value: 0xc00010ff }\n                 SIZE { size: 4 }\n                 USERNAME_DATA { size: SIZE }\n\nIOCTL_LOGIN ::= OPCODE { size: 4, value: 0x1337beef }\n                SIZE { size: 4 }\n                USERNAME_DATA { size: SIZE }\n\nIOCTL_EXIT ::= OPCODE { size: 4, value: 0x13370001 }\n\nIOCTL_SEND_MSG ::= OPCODE { size: 4, value: 0x13370002 }\n                   USERNAME_SIZE { size: 4 }\n                   USERNAME_DATA { size: USERNAME_SIZE }\n                   MSG_SIZE { size: 4 }\n                   MSG_DATA { size: MSG_SIZE }\n\nIOCTL_READ_MSG ::= OPCODE { size: 4, value: 0x13370003 }\n                   MSG_ID { size: 4 }\n\nIOCTL_LIST_MSG ::= OPCODE { size: 4, value: 0x13370004 }\n\nIOCTL_DEL_MSG ::= OPCODE { size: 4, value: 0x13370005 }\n                  MSG_ID { size: 4 }\n\nIOCTL_LOGOUT ::= OPCODE { size: 4, value: 0x13370006 }\n",
    "generated": "// INPUT represents the start of the input format\nINPUT ::= CMD_COUNT { size: 4 }\n          CMD[CMD_COUNT]\n\n// CMD represents the seven different IOCTL methods and their respective arguments \nCMD   ::= IOC_CREATE_CMD   \n        | IOC_LOGIN_CMD           \n        | IOC_EXIT_CMD   \n        | IOC_SEND_MSG_CMD\n        | IOC_READ_MSG_CMD\n        | IOC_LIST_MSG_CMD\n        | IOC_DEL_MSG_CMD\n        | IOC_LOGOUT_CMD\n\n// Each IOCTL command format\nIOC_CREATE_CMD  ::= CREATE { value: 0xc00010ff } \n                    USERNAME_SIZE { size: 4 }\n                    USERNAME { size: USERNAME_SIZE }     \n\nIOC_LOGIN_CMD   ::= LOGIN { value: 0x1337beef }\n                    USERNAME_SIZE { size: 4 }\n                    USERNAME { size: USERNAME_SIZE }            \n\nIOC_EXIT_CMD    ::= EXIT { value: 0x13370001 } \n\nIOC_SEND_MSG_CMD ::= SEND_MSG { value: 0x13370002 }\n                     USERNAME_SIZE { size: 4 }\n                     USERNAME { size: USERNAME_SIZE } \n                     MESSAGE_SIZE { size: 4 }\n                     MESSAGE { size: MESSAGE_SIZE }\n\nIOC_READ_MSG_CMD ::= READ_MSG { value: 0x13370003 }\n                     MESSAGE_ID { size: 4 }\n\nIOC_LIST_MSG_CMD ::= LIST_MSG { value: 0x13370004 }\n\nIOC_DEL_MSG_CMD  ::= DEL_MSG { value: 0x13370005 }\n                     MESSAGE_ID { size: 4 }\n\nIOC_LOGOUT_CMD   ::= LOGOUT { value: 0x13370006 }"
  },
  {
    "pass": true,
    "name": "CVE-2021-38208",
    "groundTruth": "INPUT ::= COMMAND_CNT { size: 4 }\n          COMMAND[COMMAND_CNT]\n\nCOMMAND ::= SOCKET\n          | BIND\n          | LISTEN\n          | GETPEERNAME\n\nSOCKET ::= OPCODE { size: 4, value: 0 }\n           IDENTIFIER { size: 4 }\n           DOMAIN { size: 4 }\n           TYPE { size: 4 }\n           PROTOCOL { size: 4 }\n\nBIND ::= OPCODE { size: 4, value: 1 }\n         IDENTIFIER { size: 4 }\n         SIZE { size: 4 }\n         ADDR_DATA { size: SIZE }\n\nLISTEN ::= OPCODE { size: 4, value: 2 }\n           IDENTIFIER { size: 4 }\n           BACKLOG { size: 4 }\n\nGETPEERNAME ::= OPCODE { size: 4, value: 3 }\n                IDENTIFIER { size: 4 }\n",
    "generated": "// INPUT is the start of the input format.\n// INPUT will be [CMD_CNT (4byte) ][ CMD_CNT chunks of CMD]\nINPUT ::= CMD_CNT { size: 4 }\n          CMD[CMD_CNT]\n\n// CMD will be one of the four commands: CMD0, CMD1, CMD2, CMD3\nCMD   ::= CMD0 \n        | CMD1 \n        | CMD2\n        | CMD3\n\nCMD0  ::= OPCODE { size: 4, value: 0 } // OPCODE value 0 corresponds to a socket command\n          IDENTIFIER { size: 4 }\n          DOMAIN { size: 4 }\n          TYPE { size: 4 }\n          PROTOCOL { size: 4}\n\nCMD1  ::= OPCODE { size: 4, value: 1 } // OPCODE value 1 corresponds to a bind command\n          IDENTIFIER { size: 4}\n          SIZE { size: 4 }\n          ADDR_DATA { size: SIZE }\n\nCMD2  ::= OPCODE { size: 4, value: 2 } // OPCODE value 2 corresponds to a listen command\n          IDENTIFIER { size: 4 }\n          BACKLOG { size: 4 }\n\nCMD3  ::= OPCODE { size: 4, value: 3 } // OPCODE value 3 corresponds to a getpeername command\n          IDENTIFIER { size: 4 }"
  },
  {
    "pass": true,
    "name": "CADET-00001-2",
    "groundTruth": "INPUT ::= DEVICE_SIZE { size: 4 }\n          DEVICE { size: DEVICE_SIZE }\n          FLAGS { size: 4 }\n          DATA_SIZE { size: 4 }\n          DATA { size: DATA_SIZE }\n",
    "generated": "INPUT ::= DEVICE_NAME_SIZE { size: 4 }\n          DEVICE_NAME { size: DEVICE_NAME_SIZE }\n          OPEN_FLAGS { size: 4 }\n          DATA_SIZE { size: 4 }\n          DATA { size: DATA_SIZE }\n\n// DEVICE_NAME_SIZE is the length of the device name\n// DEVICE_NAME is the string device name\n// OPEN_FLAGS is the flags to use when opening the device\n// DATA_SIZE is the length of the DATA\n// DATA is the actual binary blob data to pass to ioctl_CADET_00001"
  },
  {
    "pass": false,
    "name": "CROMU-00003",
    "groundTruth": "INPUT ::= COMMAND_CNT { size: 4 }\n          COMMAND[COMMAND_CNT]\n\nCOMMAND ::= YOLO_ADD\n          | YOLO_DEL\n          | YOLO_EDIT\n          | YOLO_SHOW\n          | YOLO_SHOW_Q\n          | YOLO_SHOW_D\n          | YOLO_SHOW_E\n          | YOLO_SHOW_N\n          | YOLO_SHOW_P\n          | YOLO_LIST\n          | YOLO_SORT\n          | YOLO_EXIT\n\nYOLO_ADD ::= OPCODE { size: 4, value: 0x40 }\n             FIRST_NAME_SIZE { size: 4 }\n             FIRST_NAME { size: FIRST_NAME_SIZE }\n             LAST_NAME_SIZE { size: 4 }\n             LAST_NAME { size: LAST_NAME_SIZE }\n             PHONE_SIZE { size: 4 }\n             PHONE { size: PHONE_SIZE }\n             OFFICE { size: 2 }\n             GENDER { size: 1 }\n             HACKER_BOOL { size: 1 }\n\nYOLO_DEL ::= OPCODE { size: 4, value: 0x41 }\n             FIRST_NAME_SIZE { size: 4 }\n             FIRST_NAME { size: FIRST_NAME_SIZE }\n             LAST_NAME_SIZE { size: 4 }\n             LAST_NAME { size: LAST_NAME_SIZE }\n\nYOLO_EDIT ::= OPCODE { size: 4, value: 0x42 }\n              OLD_FIRST_NAME_SIZE { size: 4 }\n              OLD_FIRST_NAME { size: OLD_FIRST_NAME_SIZE }\n              OLD_LAST_NAME_SIZE { size: 4 }\n              OLD_LAST_NAME { size: OLD_LAST_NAME_SIZE }\n              FIRST_NAME_SIZE { size: 4 }\n              FIRST_NAME { size: FIRST_NAME_SIZE }\n              LAST_NAME_SIZE { size: 4 }\n              LAST_NAME { size: LAST_NAME_SIZE }\n              PHONE_SIZE { size: 4 }\n              PHONE { size: PHONE_SIZE }\n              OFFICE { size: 2 }\n              GENDER { size: 1 }\n              HACKER_BOOL { size: 1 }\n              \n\nYOLO_SHOW ::= OPCODE { size: 4, value: 0x43 }\n              FIRST_NAME_SIZE { size: 4 }\n              FIRST_NAME { size: FIRST_NAME_SIZE }\n              LAST_NAME_SIZE { size: 4 }\n              LAST_NAME { size: LAST_NAME_SIZE }\n\nYOLO_SHOW_Q ::= OPCODE { size: 4, value: 0x51 }\n\nYOLO_SHOW_D ::= OPCODE { size: 4, value: 0x52 }\n\nYOLO_SHOW_E ::= OPCODE { size: 4, value: 0x53 }\n                FIRST_NAME_SIZE { size: 4 }\n                FIRST_NAME { size: FIRST_NAME_SIZE }\n                LAST_NAME_SIZE { size: 4 }\n                LAST_NAME { size: LAST_NAME_SIZE }\n                PHONE_SIZE { size: 4 }\n                PHONE { size: PHONE_SIZE }\n                OFFICE { size: 2 }\n                GENDER { size: 1 }\n                HACKER_BOOL { size: 1 }\n\nYOLO_SHOW_N ::= OPCODE { size: 4, value: 0x54 }\n\nYOLO_SHOW_P ::= OPCODE { size: 4, value: 0x55 }\n\nYOLO_LIST ::= OPCODE { size: 4, value: 0x44 }\n\nYOLO_SORT ::= OPCODE { size: 4, value: 0x45 }\n\nYOLO_EXIT ::= OPCODE { size: 4, value: 0x46 }\n",
    "generated": "INPUT ::= CMD_CNT { size: 4 }\n          CMD[CMD_CNT]\n\nCMD  ::= YOLO_ADD\n       | YOLO_DEL\n       | YOLO_EDIT\n       | YOLO_SHOW\n       | YOLO_SHOW_Q\n       | YOLO_SHOW_D\n       | YOLO_SHOW_E\n       | YOLO_SHOW_N\n       | YOLO_SHOW_P\n       | YOLO_LIST\n       | YOLO_SORT\n       | YOLO_EXIT\n\nYOLO_ADD  ::= CMD_TYPE { size: 4, value: YOLO_ADD } \n              DATA_SIZE { size: 4 }\n              FIRST_NAME { size: DATA_SIZE }\n              DATA_SIZE { size: 4 }\n              LAST_NAME { size: DATA_SIZE }\n              DATA_SIZE { size: 4 }\n              PHONE { size: DATA_SIZE }\n              OFFICE { size: 2 }\n              GENDER { size: 1 }\n              HACKER_BOOL { size: 1 }\n\nYOLO_DEL  ::= CMD_TYPE { size: 4, value: YOLO_DEL }  \n              DATA_SIZE { size: 4 }\n              FIRST_NAME { size: DATA_SIZE }\n              DATA_SIZE { size: 4 }\n              LAST_NAME { size: DATA_SIZE }\n\nYOLO_EDIT ::= CMD_TYPE { size: 4, value: YOLO_EDIT } \n              DATA_SIZE { size: 4 }\n              OLD_FIRST_NAME { size: DATA_SIZE }\n              DATA_SIZE { size: 4 }\n              OLD_LAST_NAME { size: DATA_SIZE }\n              DATA_SIZE { size: 4 }\n              FIRST_NAME { size: DATA_SIZE }\n              DATA_SIZE { size: 4 }\n              LAST_NAME { size: DATA_SIZE }\n              DATA_SIZE { size: 4 }\n              PHONE { size: DATA_SIZE }\n              OFFICE { size: 2 }\n              GENDER { size: 1 }\n              HACKER_BOOL { size: 1 }\n\nYOLO_SHOW ::= CMD_TYPE { size: 4, value: YOLO_SHOW }  \n              DATA_SIZE { size: 4 }\n              FIRST_NAME { size: DATA_SIZE }\n              DATA_SIZE { size: 4 }\n              LAST_NAME { size: DATA_SIZE }\n\nYOLO_SHOW_Q ::= CMD_TYPE { size: 4, value: YOLO_SHOW_Q }\n\nYOLO_SHOW_D ::= CMD_TYPE { size: 4, value: YOLO_SHOW_D }\n\nYOLO_SHOW_E ::= CMD_TYPE { size: 4, value: YOLO_SHOW_E }\n                DATA_SIZE { size: 4 }\n                FIRST_NAME { size: DATA_SIZE }\n                DATA_SIZE { size: 4 }\n                LAST_NAME { size: DATA_SIZE }\n                DATA_SIZE { size: 4 }\n                PHONE { size: DATA_SIZE }\n                OFFICE { size: 2 }\n                GENDER { size: 1 }\n                HACKER_BOOL { size: 1 }\n\nYOLO_SHOW_N ::= CMD_TYPE { size: 4, value: YOLO_SHOW_N }\n\nYOLO_SHOW_P ::= CMD_TYPE { size: 4, value: YOLO_SHOW_P }\n\nYOLO_LIST ::= CMD_TYPE { size: 4, value: YOLO_LIST }\n\nYOLO_SORT ::= CMD_TYPE { size: 4, value: YOLO_SORT }\n\nYOLO_EXIT ::= CMD_TYPE { size: 4, value: YOLO_EXIT }"
  },
  {
    "pass": false,
    "name": "NRFIN-00001",
    "groundTruth": "INPUT ::= COMMAND_CNT { size: 4 }\n          COMMAND[COMMAND_CNT]\n\nCOMMAND ::= DO_LIST\n          | DO_ADD\n          | DO_COUNT\n          | DO_SHOW\n          | DO_HELP\n          | DO_QUIT\n\nDO_LIST ::= OPCODE { size: 4, value: 0xdeadbef0 }\n\nDO_ADD ::= OPCODE { size: 4, value: 0xdeadbef1 }\n           SIZE { size: 4 }\n           BUF { size: SIZE }\n\nDO_COUNT ::= OPCODE { size: 4, value: 0xdeadbef2 }\n\nDO_SHOW ::= OPCODE { size: 4, value: 0xdeadbef3 }\n            SIZE { size: 4 }\n            BUF { size: 4 }\n\nDO_HELP ::= OPCODE { size: 4, value: 0xdeadbef4 }\n\nDO_QUIT ::= OPCODE { size: 4, value: 0xdeadbef5 }\n",
    "generated": "INPUT ::= COMMAND_COUNT { size: 4 } \n          COMMAND[COMMAND_COUNT]\n\nCOMMAND ::= COMMAND_ONE\n          | COMMAND_TWO_BUF \n          | COMMAND_THREE\n          | COMMAND_FOUR_BUF\n          | COMMAND_FIVE\n          | COMMAND_SIX\n\n// Corresponds to do_list command \nCOMMAND_ONE ::= OPCODE { size: 4, value: IOCTL_ONE}\n\n// Corresponds to do_add command \nCOMMAND_TWO_BUF ::= OPCODE { size: 4, value: IOCTL_TWO}\n                    BUF_LEN { size: 4 }\n                    BUF { size: BUF_LEN }\n\n// Corresponds to do_count command \nCOMMAND_THREE ::= OPCODE { size: 4, value: IOCTL_THREE}\n\n// Corresponds to do_show command \nCOMMAND_FOUR_BUF ::= OPCODE { size: 4, value: IOCTL_FOUR}\n                    BUF_LEN { size: 4 }\n                    BUF { size: BUF_LEN }\n\n// Corresponds to do_help command \nCOMMAND_FIVE ::= OPCODE { size: 4, value: IOCTL_FIVE}\n\n// Corresponds to do_quit command \nCOMMAND_SIX ::= OPCODE { size: 4, value: IOCTL_SIX}"
  },
  {
    "pass": false,
    "name": "CVE-2022-0995-2",
    "groundTruth": "INPUT ::= PIPE_FLAGS { size: 4 }\n          NR_FILTERS { size: 4 }\n          RESERVED { size: 4 }\n          TYPE { size: 4 }\n",
    "generated": "// INPUT is the start of the input format.\n// INPUT will be [PIPE_FLAGS (4bytes)] [NR_FILTERS (4bytes)] [RESERVED (4bytes)] [TYPE (4bytes)]\nINPUT ::= PIPE_FLAGS { size: 4 }\n          NR_FILTERS { size: 4 }\n          RESERVED { size: 4 }\n          TYPE { size: 4 }\n\n// PIPE_FLAGS is a 4 byte value that specifies flags for the pipe.\nPIPE_FLAGS ::= <uint32_t>\n\n// NR_FILTERS is a 4 byte value that specifies the number of filters.\nNR_FILTERS ::= <uint32_t>\n\n// RESERVED is a 4 byte value that should currently be set to 0.\nRESERVED ::= <uint32_t>\n\n// TYPE is a 4 byte value that specifies the type of filter.\nTYPE ::= <uint32_t>"
  },
  {
    "pass": true,
    "name": "CVE-2022-32250",
    "groundTruth": "INPUT ::= COMMAND_CNT { size: 4 }\n          COMMAND[COMMAND_CNT]\n\nCOMMAND ::= SETUP\n          | LOOKUP\n\nSETUP ::= OPCODE { size: 4, value: 0 }\n          SIZE { size: 4 }\n          DATA { size: SIZE }\n\nLOOKUP ::= OPCODE { size: 4, value: 1 }\n           TABLE_SIZE { size: 4 }\n           TABLE_DATA { size: TABLE_SIZE }\n           SET_SIZE { size: 4 }\n           SET_DATA { size: SET_SIZE }\n",
    "generated": "// INPUT is the start of the input format.\n// INPUT will be [CMD_COUNT (4byte) ][ CMD_COUNT chunks of COMMAND]\nINPUT ::= CMD_COUNT { size: 4 }\n          COMMAND[CMD_COUNT]\n\n// COMMAND will be COMMAND1 or COMMAND2 if the target program has two commands.\nCOMMAND ::= COMMAND1 \n          | COMMAND2\n\n// COMMAND1 represents the \"set_table_and_set\" operation.\nCOMMAND1 ::= OPCODE { size: 4, value: 0 } // OPCODE value 0 reflects the first case in the switch statement\n             TABLE_NAME_SIZE { size: 4 }\n             TABLE_NAME { size: TABLE_NAME_SIZE } \n\n// COMMAND2 reflects the \"set_expr_lookup\" operation.\nCOMMAND2 ::= OPCODE { size: 4, value: 1 } // OPCODE value 1 reflects the second case in the switch statement\n             TABLE_NAME_SIZE { size: 4 }\n             TABLE_NAME { size: TABLE_NAME_SIZE }\n             SET_NAME_SIZE { size: 4 }\n             SET_NAME { size: SET_NAME_SIZE }"
  },
  {
    "pass": true,
    "name": "CVE-2022-0995",
    "groundTruth": "INPUT ::= COMMAND_CNT { size: 4 }\n          COMMAND[COMMAND_CNT]\n\nCOMMAND ::= SET_SIZE\n          | SET_FILTER\n\nSET_SIZE ::= OPCODE { size: 4, value: 0 }\n             SIZE { size: 4 }\n\nSET_FILTER ::= OPCODE { size: 4, value: 1 }\n               SIZE { size: 4 }\n               DATA { size: SIZE }\n",
    "generated": "// INPUT is the start of the input format.\n// INPUT will be [CMD_CNT (4byte) ][ CMD_CNT chunks of CMD]\nINPUT ::= CMD_CNT { size: 4 }\n          CMD[CMD_CNT]\n\n// CMD will be CMD0 or CMD1 per the switch(condition) statement.\nCMD   ::= CMD0\n        | CMD1\n\nCMD0  ::= COMMAND_CODE { size: 4, value: 0 } // COMMAND_CODE value 0 comes from the first case statement\n          SIZE { size: 4 }    // the size for the ioctl operation\n\nCMD1  ::= COMMAND_CODE { size: 4, value: 1} // COMMAND value 1 comes from the second case statement\n          SIZE { size: 4 }\n          BLOB { size: SIZE } // the blob for the ioctl operation"
  },
  {
    "pass": false,
    "name": "KPRCA-00001",
    "groundTruth": "INPUT ::= COMMAND_CNT { size: 4 }\n          COMMAND[COMMAND_CNT]\n\nCOMMAND ::= INIT_STDIN\n          | GET_STDOUT\n          | WORK_WITH_DATA\n\nINIT_STDIN ::= OPCODE { size: 4, value: 0x40 }\n\nGET_STDOUT ::= OPCODE { size: 4, value: 0x41 }\n\nWORK_WITH_DATA ::= OPCODE { size: 4, value: 0x50 }\n                   BUF_LEN { size: 4 }\n                   BUF { size: BUF_LEN }\n",
    "generated": "INPUT ::= CMD_CNT { size: 4 }\n          CMD[CMD_CNT]\n\nCMD   ::= INIT_STDIN_CMD \n        | GET_STDOUT_CMD\n        | WORK_WITH_DATA_CMD\n\nINIT_STDIN_CMD  ::= CMD_TYPE { size: 4, value: 0x40 } // Corresponds to IOCTL_INIT_STDIN\n\nGET_STDOUT_CMD  ::= CMD_TYPE { size: 4, value: 0x41 } // Corresponds to IOCTL_GET_STDOUT\n\nWORK_WITH_DATA_CMD ::= CMD_TYPE { size: 4, value: 0x50 } // Corresponds to WORK_WITH_DATA\n                      BUF_LEN { size: 8 }      // Length of the buffer that follows\n                      BUF { size: BUF_LEN }    // Buffer of data to work with per command"
  },
  {
    "pass": false,
    "name": "CVE-2022-0185",
    "groundTruth": "INPUT ::= COMMAND_CNT { size: 4 }\n          COMMAND[COMMAND_CNT]\n\nCOMMAND ::= FSCONFIG_SET_FLAG\n          | FSCONFIG_SET_STRING\n          | FSCONFIG_SET_BINARY\n          | FSCONFIG_SET_PATH\n          | FSCONFIG_SET_PATH_EMPTY\n          | FSCONFIG_CMD_CREATE\n          | FSCONFIG_CMD_RECONFIGURE\n\nFSCONFIG_SET_FLAG ::= OPCODE { size: 4, value: 0 }\n                      SIZE { size: 4 }\n                      DATA { size: SIZE }\n\nFSCONFIG_SET_STRING ::= OPCODE { size: 4, value: 1 }\n                        KEY_SIZE { size: 4 }\n                        KEY_DATA { size: KEY_SIZE }\n                        VALUE_SIZE { size: 4 }\n                        VALUE_DATA { size: VALUE_SIZE }\n\nFSCONFIG_SET_BINARY ::= OPCODE { size: 4, value: 2 }\n                        KEY_SIZE { size: 4 }\n                        KEY_DATA { size: KEY_SIZE }\n                        VALUE_SIZE { size: 4 }\n                        VALUE_DATA { size: VALUE_SIZE }\n\nFSCONFIG_SET_PATH ::= OPCODE { size: 4, value: 3 }\n                      KEY_SIZE { size: 4 }\n                      KEY_DATA { size: KEY_SIZE }\n                      FILENAME_SIZE { size: 4 }\n                      FILENAME_DATA { size: FILENAME_SIZE }\n\nFSCONFIG_SET_PATH_EMPTY ::= OPCODE { size: 4, value: 4 }\n                            KEY_SIZE { size: 4 }\n                            KEY_DATA { size: KEY_SIZE }\n                            FILENAME_SIZE { size: 4 }\n                            FILENAME_DATA { size: FILENAME_SIZE }\n\nFSCONFIG_CMD_CREATE ::= OPCODE { size: 4, value: 6 }\n\nFSCONFIG_CMD_RECONFIGURE ::= OPCODE { size: 4, value: 7 }\n",
    "generated": "INPUT ::= CMD_CNT { size: 4 }\n          COMMAND[CMD_CNT]\n\nCOMMAND ::= SET_FLAG_CMD \n          | SET_STRING_CMD \n          | SET_BINARY_CMD\n          | SET_PATH_CMD\n          | SET_PATH_EMPTY_CMD\n          | CREATE_CMD\n          | RECONFIGURE_CMD\n\nSET_FLAG_CMD  ::= OPCODE { size: 4, value: FSCONFIG_SET_FLAG }\n                  FLAG_SIZE { size: 4 }\n                  FLAG_PARAM { size: FLAG_SIZE }\n\nSET_STRING_CMD ::= OPCODE { size: 4, value: FSCONFIG_SET_STRING }\n                   KEY_SIZE { size: 4 }\n                   KEY { size: KEY_SIZE }\n                   VALUE_SIZE { size: 4 }\n                   VALUE { size: VALUE_SIZE }\n\nSET_BINARY_CMD ::= OPCODE { size: 4, value: FSCONFIG_SET_BINARY }\n                   KEY_SIZE { size: 4 }\n                   KEY { size: KEY_SIZE }\n                   VALUE_SIZE { size: 4 }\n                   VALUE { size: VALUE_SIZE }\n\nSET_PATH_CMD ::= OPCODE { size: 4, value: FSCONFIG_SET_PATH }\n                 KEY_SIZE { size: 4 }\n                 KEY { size: KEY_SIZE }\n                 FILENAME_SIZE { size: 4 }\n                 FILENAME { size: FILENAME_SIZE }\n\nSET_PATH_EMPTY_CMD ::= OPCODE { size: 4, value: FSCONFIG_SET_PATH_EMPTY }\n                       KEY_SIZE { size: 4 }\n                       KEY { size: KEY_SIZE }\n                       FILENAME_SIZE { size: 4}\n                       FILENAME { size: FILENAME_SIZE }\n\nCREATE_CMD ::= OPCODE { size: 4, value: FSCONFIG_CMD_CREATE }\n\nRECONFIGURE_CMD ::= OPCODE { size: 4, value: FSCONFIG_CMD_RECONFIGURE }"
  },
  {
    "pass": true,
    "name": "CADET-00001",
    "groundTruth": "INPUT ::= COMMAND_CNT { size: 4 }\n          COMMAND[COMMAND_CNT]\n\nCOMMAND ::= OPCODE { size: 4, value: 0 }\n            SIZE { size: 4 }\n            PACKET_DATA { size: SIZE }\n",
    "generated": "// INPUT is the start of the input format.\n// INPUT will be [CMD_COUNT (4bytes) ][CMD_LIST]\nINPUT ::= CMD_COUNT { size: 4 }\n          CMD_LIST[CMD_COUNT]\n\n// CMD_LIST will be one or more CMD.\nCMD_LIST ::= CMD\n\n// CMD will be CMD_IOCTL.\nCMD ::= CMD_IOCTL\n\nCMD_IOCTL ::= OPCODE { size: 4, value: 0 } // OPCODE value 0 comes from the switch-case statement\n              SIZE { size: 4 }\n              DATA { size: SIZE } // the size of DATA is defined by SIZE"
  },
  {
    "pass": true,
    "name": "CVE-2023-2513",
    "groundTruth": "INPUT ::= COMMAND_CNT { size: 4 }\n          COMMAND[COMMAND_CNT]\n\nCOMMAND ::= MAKE_DIRECTORY\n          | MOUNT_EXT4\n          | UMOUNT_EXT4\n          | CREATE_EMPTY_FILE\n          | SET_XATTR\n\nMAKE_DIRECTORY ::= OPCODE { size: 4, value: 0 }\n                   SIZE { size: 4 }\n                   DATA { size: SIZE }\n\nMOUNT_EXT4 ::= OPCODE { size: 4, value: 1 }\n               FLAGS { size: 4 }\n               SIZE { size: 4 }\n               DATA { size: SIZE }\n\nUMOUNT_EXT4 ::= OPCODE { size: 4, value: 2 }\n\nCREATE_EMPTY_FILE ::= OPCODE { size: 4, value: 3 }\n                      SIZE { size: 4 }\n                      DATA { size: SIZE }\n\nSET_XATTR ::= OPCODE { size: 4, value: 4 }\n              FILEPATH_SIZE { size: 4 }\n              FILEPATH_DATA { size: FILEPATH_SIZE }\n              NAME_SIZE { size: 4 }\n              NAME_DATA { size: NAME_SIZE }\n              VALUE_SIZE { size: 4 }\n              VALUE_DATA { size: VALUE_SIZE }\n              FLAGS { size: 4 }\n",
    "generated": "// INPUT is the start of the input format.\n// INPUT will be [CMD_CNT (4byte) ][ CMD_CNT chunks of CMD]\nINPUT ::= CMD_CNT { size: 4 }\n          CMD[CMD_CNT]\n\n// CMD will be one of five commands supported by the example program.\nCMD   ::= CMD1 \n        | CMD2 \n        | CMD3 \n        | CMD4 \n        | CMD5\n\nCMD1  ::= CMD1_OPCODE { size: 4, value: 0 }\n          PATH_SIZE { size: 4 }\n          PATH { size: PATH_SIZE }\n\nCMD2  ::= CMD2_OPCODE { size: 4, value: 1 }\n          FLAGS { size: 4 }\n          DATA_SIZE { size: 4 }\n          DATA { size: DATA_SIZE }\n\nCMD3  ::= CMD3_OPCODE { size: 4, value: 2 }\n\nCMD4  ::= CMD4_OPCODE { size: 4, value: 3 }\n          FILEPATH_SIZE { size: 4 }\n          FILEPATH { size: FILEPATH_SIZE }\n\nCMD5  ::= CMD5_OPCODE { size: 4, value: 4 }\n          FILEPATH_SIZE { size: 4 }\n          FILEPATH { size: FILEPATH_SIZE }\n          NAME_SIZE { size: 4 }\n          NAME { size: NAME_SIZE }\n          VALUE_SIZE { size: 4 }\n          VALUE { size: VALUE_SIZE }\n          FLAGS { size: 4 }"
  }
]